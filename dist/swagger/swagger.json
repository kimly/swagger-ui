{
  "openapi": "3.0.0",
  "info": {
    "title": "",
    "version": ""
  },
  "paths": {
    "/service-payment-gateway": {
      "get": {
        "tags": [
          "../go-hummer/hummer/swagger"
        ],
        "operationId": "Swagger",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JSONBytes"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/account": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "CreateAccountReq 创建账户信息(开户)",
        "description": "\u003cp style=\"color:red\"\u003e 注意: \u003c/p\u003e\n\u003cp style=\"color:red\"\u003e 1、若为下游开户， 新开账户必须为主账户的子户，userType为 CLIENT \u003c/p\u003e\n\u003cp style=\"color:red\"\u003e 2、云资金accountMode 为 MYBANK_CLOUD， 参与分账的子户，userType必须为 SELF \u003c/p\u003e",
        "operationId": "CreateAccountReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAccountResp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005093,AccountModeErr,\"账户模式错误\",\"\",true);\n@httpError(400005041,AccountNotMainParentUIDIsRequiredErr,\"当不为主账户时，parentUID必填\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/account/{uid}": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "获取账户基本信息",
        "operationId": "GetAccountDetailReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "外部账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountDetailResp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005064,QueryCpcnAccountErr,\"查询商户信息失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005019,GetSettlementCreatetimeErr,\"查询最新结算单创建时间失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/account/{uid}/CreateSplitSubAccount": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "@Deprecated 创建分账账户，子账户信息(开户)",
        "operationId": "CreateSplitSubAccountReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "主账户UID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSplitSubAccountBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005036,AccountNotHaveSubAccountErr,\"可用账号数不足\",\"\",true);\n@httpError(400005038,AccountSubAccountAreaHaveInterErr,\"启用中的地区有交叉\",\"\",true);\n@httpError(400005046,CreateSubAccountSplitRateValueErr,\"分账比例值错误，请填写1或1以内的小数\",\"\",true);\n@httpError(400005131,CreateCloudSubAccountSplitRateValueErr,\"分账比例值错误，请填写0.3以内的小数\",\"\",true);\n@httpError(400005037,AccountNotHaveExtErr,\"所属子账号无扩展信息\",\"\",true);\n@httpError(400005039,AccountSubAccountAreaErr,\"获取子账号的地区信息失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v0/account/{uid}/CreateSubAccount": {
      "put": {
        "tags": [
          "account"
        ],
        "summary": "@Deprecated [市场模式分账] 更新分账账户基本信息，及分账地区配置，调用此接口前需调用开户接口开通收款账户",
        "operationId": "CreateSubAccountReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "账户UID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubAccountBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005036,AccountNotHaveSubAccountErr,\"可用账号数不足\",\"\",true);\n@httpError(400005039,AccountSubAccountAreaErr,\"获取子账号的地区信息失败\",\"\",true);\n@httpError(400005037,AccountNotHaveExtErr,\"所属子账号无扩展信息\",\"\",true);\n@httpError(400005038,AccountSubAccountAreaHaveInterErr,\"启用中的地区有交叉\",\"\",true);\n@httpError(400005046,CreateSubAccountSplitRateValueErr,\"分账比例值错误，请填写1或1以内的小数\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v0/account/{uid}/CreateSubAccountForSplit": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "@Deprecated [市场模式分账] 创建分账子账户,配置地区,绑定银行卡",
        "operationId": "CreateSubAccountForSplitReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "主账户UID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubAccountForSplitBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005037,AccountNotHaveExtErr,\"所属子账号无扩展信息\",\"\",true);\n@httpError(400005036,AccountNotHaveSubAccountErr,\"可用账号数不足\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v0/account/{uid}/batchCreatePaymentChannel": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "@Deprecated 【收款账户】批量开通账户支付渠道",
        "description": "原生微信小程序config参数：{\"app_id\":\"wxe2f25e34b914a304\",\"mch_id\":\"1509297521\",\"app_key\":\"FDEFAB1E5D252977E7C01970320740CB\",\"sign_type\":\"MD5\",\"no_credit\":\"TRUE\",\"cert_path\":\"./config/cert/49306440967393280_cert.pem\",\"key_path\":\"./config/cert/49306440967393280_key.pem\"}\n中金支付(市场模式)config参数：{\"institutionID\":\"机构号\",\"certPath\":\"上传证书接口返回的certPath\",\"certKeyPath\":\"上传证书接口返回的certKeyPath\",\"privateKeyPath\":\"上传证书接口返回的privateKeyPath\",\"expirePeriod\":\"失效时间，默认为 10 分钟，有效范围:5-120 分钟，单位:分钟\",\"noCredit\":\"是否可用信用卡, TRUE=不可用， FALSE=可用\",\"isMiniApp\":\"是否小程序支付, TRUE=小程序支付，FALSE=非小程序支付\"}\n中金支付(商户模式)config参数：{\"institutionID\":\"机构号\",\"certPath\":\"上传证书接口返回的certPath\",\"certKeyPath\":\"上传证书接口返回的certKeyPath\",\"privateKeyPath\":\"上传证书接口返回的privateKeyPath\",\"expirePeriod\":\"失效时间，默认为 10 分钟，有效范围:5-120 分钟，单位:分钟\",\"noCredit\":\"是否可用信用卡, TRUE=不可用， FALSE=可用\",\"isMiniApp\":\"是否小程序支付, TRUE=小程序支付，FALSE=非小程序支付\", \"splitType\":\"分账模式，NO_SPLIT=不分账，BY_PROPORTION=按比例分账， BY_AMOUNT=按金额分账\", \"settlement\":[\"settlementFlag\":\"0001\",\"settlementValue\":\"0.0002\"]}\n商户模式分账说明: 若分账模式=不分账， settlement可不填， 分账模式=按比例, \"settlement\":[\"settlementFlag\":\"对应中金线下约定的支付结算卡标识号\", \"settlementValue\":\"每笔交易分账比例\"]， 分账模式=按金额，\"settlement\":[\"settlementFlag\":\"对应中金线下约定的支付结算卡标识号\", \"settlementValue\":\"每笔交易分账金额\"]\n网商银行来账识别config参数: {\"merchantId\":\"网商商户号\", \"orderNo\":\"网商入驻申请申请单号\"}, 机构号和申请单号来源于入驻申请状态异步通知, 或主动查询入驻状态",
        "operationId": "BatchCreateChannelForAccountReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "外部账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchCreateChannelForAccountBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v0/account/{uid}/batchOpAccountChannel": {
      "put": {
        "tags": [
          "account"
        ],
        "summary": "@Deprecated 批量启用禁用收款账户支付渠道",
        "operationId": "BatchOpAccountChannelReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "收款账户UID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchOpAccountChannelBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v0/account/{uid}/bindBankCard": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "@Deprecated【收款账户】绑定银行卡号",
        "operationId": "BindBankCardForAccountReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "外部账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BindBankCardForAccountBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAccountBankCard"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v0/account/{uid}/bindFinancialMobile": {
      "put": {
        "tags": [
          "account"
        ],
        "summary": "@Deprecated [市场模式分账] 主账户绑定财务手机号",
        "operationId": "BindFinancialMobileReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "外部账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BindFinancialMobileBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v0/account/{uid}/closeOpenedChannel": {
      "delete": {
        "tags": [
          "account"
        ],
        "summary": "【收款账户】关闭支付渠道",
        "operationId": "CloseOpenedChanelReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "外部账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseOpenedChannelBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/account/{uid}/createPaymentChannel": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "@Deprecated 【收款账户】开通账户支付渠道",
        "description": "原生微信小程序config参数：{\"app_id\":\"wxe2f25e34b914a304\",\"mch_id\":\"1509297521\",\"app_key\":\"FDEFAB1E5D252977E7C01970320740CB\",\"sign_type\":\"MD5\",\"no_credit\":\"TRUE\",\"cert_path\":\"./config/cert/49306440967393280_cert.pem\",\"key_path\":\"./config/cert/49306440967393280_key.pem\"}\n中金支付(市场模式)config参数：{\"institutionID\":\"机构号\",\"certPath\":\"上传证书接口返回的certPath\",\"certKeyPath\":\"上传证书接口返回的certKeyPath\",\"privateKeyPath\":\"上传证书接口返回的privateKeyPath\",\"expirePeriod\":\"失效时间，默认为 10 分钟，有效范围:5-120 分钟，单位:分钟\",\"noCredit\":\"是否可用信用卡, TRUE=不可用， FALSE=可用\",\"isMiniApp\":\"是否小程序支付, TRUE=小程序支付，FALSE=非小程序支付\"}\n中金支付(商户模式)config参数：{\"institutionID\":\"机构号\",\"certPath\":\"上传证书接口返回的certPath\",\"certKeyPath\":\"上传证书接口返回的certKeyPath\",\"privateKeyPath\":\"上传证书接口返回的privateKeyPath\",\"expirePeriod\":\"失效时间，默认为 10 分钟，有效范围:5-120 分钟，单位:分钟\",\"noCredit\":\"是否可用信用卡, TRUE=不可用， FALSE=可用\",\"isMiniApp\":\"是否小程序支付, TRUE=小程序支付，FALSE=非小程序支付\", \"splitType\":\"分账模式，NO_SPLIT=不分账，BY_PROPORTION=按比例分账， BY_AMOUNT=按金额分账\", \"settlement\":[\"settlementFlag\":\"0001\",\"settlementValue\":\"0.0002\"]}\n商户模式分账说明: 若分账模式=不分账， settlement可不填， 分账模式=按比例, \"settlement\":[\"settlementFlag\":\"对应中金线下约定的支付结算卡标识号\", \"settlementValue\":\"每笔交易分账比例\"]， 分账模式=按金额，\"settlement\":[\"settlementFlag\":\"对应中金线下约定的支付结算卡标识号\", \"settlementValue\":\"每笔交易分账金额\"]",
        "operationId": "CreateChannelForAccountReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "外部账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChannelForAccountBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAccountChannel"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v0/account/{uid}/createSubAccountAreaForSplit": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "分账子账户配置分账地区",
        "operationId": "CreateSubAccountAreaForSplitReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "主账户UID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubAccountAreaForSplitBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005138,CreateSplitInfoErr,\"分账信息配置失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/account/{uid}/getBindCardByBindId": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "@Deprecated 获取账户已经绑定的银行卡列表",
        "operationId": "GetBindCardByBindIdReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "外部账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          },
          {
            "name": "bindId",
            "in": "query",
            "description": "绑卡流水id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "x-go-name": "BindId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAccountBankCard"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v0/account/{uid}/getCardList": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "获取账户已经绑定的银行卡列表",
        "operationId": "GetBindCardListByUIDReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "外部账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAccountBankCardList"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/account/{uid}/getEnabledAreaByMainUID": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "@Deprecated [市场模式分账] 获取已经启用的分账账户的所有地区配置",
        "operationId": "GetEnabledAreaByMainUIDReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "外部主账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v0/account/{uid}/getOpenedChannelList": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "获取收款账户已经开通的支付渠道列表",
        "operationId": "GetOpenedChannelListByUIDReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "收款账户外部UID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountOpenedChannelListResp"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/account/{uid}/getSubAccount": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "@Deprecated [市场模式分账] 获取分账账户信息，以及分账地区配置",
        "operationId": "GetSubAccountReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "外部账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubAccountResp"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v0/account/{uid}/getSubAccountList": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "@Deprecated [市场模式分账] 获取子账户列表",
        "operationId": "GetSubAccountListReq",
        "parameters": [
          {
            "name": "userType",
            "in": "query",
            "description": "账户类型",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/BaseSrvAccountUserType"
                },
                {
                  "default": "SELF"
                }
              ]
            },
            "x-go-name": "UserType"
          },
          {
            "name": "size",
            "in": "query",
            "description": "每页数据大小",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "default": "10",
              "x-go-validate": "@int32[1,100]"
            },
            "x-go-name": "Size"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "偏移量",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@int32[0,]"
            },
            "x-go-name": "Offset"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "主账户UID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          },
          {
            "name": "accountStatus",
            "in": "query",
            "description": "启用状态",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/BaseSrvAccountStatus"
                },
                {
                  "enum": [
                    "",
                    "ENABLE",
                    "DISABLE"
                  ],
                  "default": "",
                  "x-go-validate": "@string{,ENABLE,DISABLE}"
                }
              ]
            },
            "x-go-name": "AccountStatus"
          },
          {
            "name": "accountName",
            "in": "query",
            "description": "账户名称",
            "schema": {
              "type": "string",
              "default": "",
              "x-go-validate": "@char[0,32]"
            },
            "x-go-name": "AccountName"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubAccountListResp"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v0/account/{uid}/getSubAccountSettlementList": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "@Deprecated [市场模式分账] 获取子账户和待结算金额列表",
        "operationId": "GetSubAccountSettlementListReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "主账户UID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          },
          {
            "name": "accountName",
            "in": "query",
            "description": "账户名称",
            "schema": {
              "type": "string",
              "default": "",
              "x-go-validate": "@char[0,32]"
            },
            "x-go-name": "AccountName"
          },
          {
            "name": "userType",
            "in": "query",
            "description": "账户类型",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/BaseSrvAccountUserType"
                },
                {
                  "default": "SELF"
                }
              ]
            },
            "x-go-name": "UserType"
          },
          {
            "name": "size",
            "in": "query",
            "description": "每页数据大小",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "default": "10",
              "x-go-validate": "@int32[1,100]"
            },
            "x-go-name": "Size"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "偏移量",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@int32[0,]"
            },
            "x-go-name": "Offset"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubAccountSettlementListResp"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005043,ReduceHandingFeeRuleNotFoundErr,\"手续费扣费规则未找到，请设置手续费扣除规则\",\"\",true);\n@httpError(403005048,CalSettlemntHandingFeeReduceErr,\"计算结算单手续费失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005019,GetSettlementCreatetimeErr,\"查询最新结算单创建时间失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v0/account/{uid}/getTrans": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "@Deprecated 查询账户交易数据",
        "operationId": "GetAccountTransReq",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "开始时间",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "StartDate"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "结束时间",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 15,
              "minLength": 1,
              "x-go-validate": "@string[1,15]"
            },
            "x-go-name": "EndDate"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "外部账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryOrder1330ResponseBody"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005014,ReceiptMainAccountNotFoundErr,\"收款账户主账户未找到\",\"\",true);\n@httpError(404005018,PaymentAccountChannelNotFoundErr,\"付款账户未开通当前支付渠道\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v0/account/{uid}/isSubAccount": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "IsSubAccountReq 查询子账户是否为提供的主账户的子账户",
        "operationId": "IsSubAccountReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "外部子账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          },
          {
            "name": "mainUID",
            "in": "query",
            "description": "主账户UID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "MainUID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IsSubAccountRsp"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/account/{uid}/opSubAccount": {
      "put": {
        "tags": [
          "account"
        ],
        "summary": "[市场模式分账] 分账账户启用禁用，仅用于分账账户",
        "operationId": "OpSubAccountReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "操作账户UID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpSubAccountBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/account/{uid}/setSubAccountNumber": {
      "put": {
        "tags": [
          "account"
        ],
        "summary": "@Deprecated [市场模式分账] 设置主账户购买的子账户名额数",
        "operationId": "SetSubAccountNumberReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "外部账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetSubAccountNumberBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005032,AccountCanNotUseTheFunErr,\"此账户不是主账户不能使用此功能\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v0/account/{uid}/updateFeeMode": {
      "put": {
        "tags": [
          "account"
        ],
        "summary": "UpdateFeeModeReq 修改主账户扣费模式",
        "operationId": "UpdateFeeModeReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "外部账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFeeModeBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/pay": {
      "post": {
        "tags": [
          "pay"
        ],
        "summary": "H5PayTransReq H5支付交易单",
        "operationId": "H5PayTransReq",
        "parameters": [
          {
            "name": "X-Company-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "x-go-name": "CompanyID"
          },
          {
            "name": "X-User-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "UserID"
          },
          {
            "name": "X-Parent-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ParentUserID"
          },
          {
            "name": "X-Product-Code",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ProductCode"
          },
          {
            "name": "X-Is-Main",
            "in": "header",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {}
              ]
            },
            "x-go-name": "IsMain"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/H5PayTransBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005070,ScanCodePayErr,\"扫码支付失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "401": {
            "description": "@httpError(401005000,Unauthorized,\"未授权\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005015,WechatAppletReqParamsOpenIDRequiredErr,\"微信支付参数错误, OpenID为必填\",\"\",true);\n@httpError(403005029,WechatAppletPayStatusQueryCompleteTransErr,\"微信小程序支付状态查询, 完成交易单失败\",\"\",true);\n@httpError(403005004,TransIDStatusNotUnpayErr,\"当前支付状态不为【未支付】不能付款\",\"\",true);\n@httpError(403005006,TransPayInvalidChannelTypeErr,\"不支持的退款渠道\",\"\",true);\n@httpError(403005040,MchScanCodePayReqParamsScanCodeTypeRequiredErr,\"扫码支付参数错误, scanCodeType为必填\",\"\",true);\n@httpError(403005041,MchOfficialAccountPayReqParamsPaymentWayTypeRequiredErr,\"公众号支付参数错误, paymentWayType为必填\",\"\",true);\n@httpError(403005047,NotSupportCardErr,\"暂不支持此银行卡\",\"\",true);\n@httpError(403005043,ReduceHandingFeeRuleNotFoundErr,\"手续费扣费规则未找到，请设置手续费扣除规则\",\"\",true);\n@httpError(403005005,TransIDChannelTypeNotSetErr,\"支付渠道未选择\",\"\",true);\n@httpError(403005039,MchQuickPayReqParamsSMSValidationCodeRequiredErr,\"支付参数错误, smsValidationCode为必填\",\"\",true);\n@httpError(403005073,MchScanCodePayReqParamsScanPaymentCodeRequiredErr,\"反扫，扫码支付参数错误, scanPaymentCode为必填\",\"\",true);\n@httpError(403005042,MchOnlinePayReqParamsBankCodeRequiredErr,\"网银支付参数错误, bankCode为必填\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005011,GetReceiptAccountBalanceErr,\"获取收款账户手续费余额失败\",\"\",true);\n@httpError(404005004,AccountChannelNotFoundErr,\"收款账户未开通当前支付渠道\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500005019,CreateSplitBillsInternalError,\"创建分账账单内部处理失败\",\"\",false);\n@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/pay/{transID}": {
      "put": {
        "tags": [
          "pay"
        ],
        "summary": "支付交易单",
        "operationId": "PayTransReq",
        "parameters": [
          {
            "name": "transID",
            "in": "path",
            "description": "交易单号",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "minimum": 1,
              "x-go-validate": "@uint64[1,]"
            },
            "x-go-name": "TransID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PayTransBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005070,ScanCodePayErr,\"扫码支付失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005005,TransIDChannelTypeNotSetErr,\"支付渠道未选择\",\"\",true);\n@httpError(403005004,TransIDStatusNotUnpayErr,\"当前支付状态不为【未支付】不能付款\",\"\",true);\n@httpError(403005043,ReduceHandingFeeRuleNotFoundErr,\"手续费扣费规则未找到，请设置手续费扣除规则\",\"\",true);\n@httpError(403005041,MchOfficialAccountPayReqParamsPaymentWayTypeRequiredErr,\"公众号支付参数错误, paymentWayType为必填\",\"\",true);\n@httpError(403005029,WechatAppletPayStatusQueryCompleteTransErr,\"微信小程序支付状态查询, 完成交易单失败\",\"\",true);\n@httpError(403005039,MchQuickPayReqParamsSMSValidationCodeRequiredErr,\"支付参数错误, smsValidationCode为必填\",\"\",true);\n@httpError(403005006,TransPayInvalidChannelTypeErr,\"不支持的退款渠道\",\"\",true);\n@httpError(403005073,MchScanCodePayReqParamsScanPaymentCodeRequiredErr,\"反扫，扫码支付参数错误, scanPaymentCode为必填\",\"\",true);\n@httpError(403005040,MchScanCodePayReqParamsScanCodeTypeRequiredErr,\"扫码支付参数错误, scanCodeType为必填\",\"\",true);\n@httpError(403005047,NotSupportCardErr,\"暂不支持此银行卡\",\"\",true);\n@httpError(403005015,WechatAppletReqParamsOpenIDRequiredErr,\"微信支付参数错误, OpenID为必填\",\"\",true);\n@httpError(403005042,MchOnlinePayReqParamsBankCodeRequiredErr,\"网银支付参数错误, bankCode为必填\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005011,GetReceiptAccountBalanceErr,\"获取收款账户手续费余额失败\",\"\",true);\n@httpError(404005004,AccountChannelNotFoundErr,\"收款账户未开通当前支付渠道\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n@httpError(500005019,CreateSplitBillsInternalError,\"创建分账账单内部处理失败\",\"\",false);\n@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/pay/{transID}/reSendPaySMS": {
      "put": {
        "tags": [
          "pay"
        ],
        "summary": "ReSendPaySMSReq 通联渠道，转账, 快捷支付时，支持调用此接口重发短信验证码",
        "description": "注意:\n1. 验证码发送规则：验证码在有效期内，发原验证码，过有效期，发新的验证码；\n2. 验证码发送频次：10s内不允许重复调用该接口，避免暴力发送短信验证码，返回错误信息“调用重发短信接口太频繁，请稍后再试！”；\n3. 若订单状态为支付完成、进行中、支付失败、关闭；超过订单过期时间（上送取过期时间值判断、未上送取30分钟判断），返回错误信息“订单处理完成或处理中，不支持重发短信！”；",
        "operationId": "ReSendPaySMSReq",
        "parameters": [
          {
            "name": "transID",
            "in": "path",
            "description": "交易单号",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "minimum": 1,
              "x-go-validate": "@uint64[1,]"
            },
            "x-go-name": "TransID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReSendPaySMSRsp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005161,ReSendPaySMSErr,\"重发支付短信失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/refund": {
      "get": {
        "tags": [
          "refund"
        ],
        "summary": "根据交易单查询退款单",
        "operationId": "GetRefundListReq",
        "parameters": [
          {
            "name": "transID",
            "in": "query",
            "description": "交易单号,如果传递此参数，将查询此交易单的退款单列表",
            "schema": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@uint64[0,]"
            },
            "x-go-name": "TransID"
          },
          {
            "name": "size",
            "in": "query",
            "description": "每页数据大小",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "minimum": -1,
              "default": "10",
              "x-go-validate": "@int32[-1,100]"
            },
            "x-go-name": "Size"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "偏移量",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@int32[0,]"
            },
            "x-go-name": "Offset"
          }
        ],
        "responses": {
          "204": {}
        }
      },
      "post": {
        "tags": [
          "refund"
        ],
        "summary": "创建退款单",
        "operationId": "RefundTransReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefundTransBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransRefund"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005042,RefundAmountCanNotLtPayAmountErr,\"退款金额不能大于支付金额\",\"\",true);\n@httpError(400005043,CanRefundAmountNotEnoughErr,\"可退款金额不足\",\"\",true);\n@httpError(400005016,CreateRefundTransPayStatusErr,\"当前交易单未支付不能退款\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005081,NotSupportModeForRefundErr,\"收款账户不支持在线退款\",\"\",true);\n@httpError(403005082,ThanLastRefundTimeErr,\"该交易单超过可退款时间\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005004,AccountChannelNotFoundErr,\"收款账户未开通当前支付渠道\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/refund/{refundID}": {
      "get": {
        "tags": [
          "refund"
        ],
        "summary": "退款单状态查询",
        "operationId": "QueryRefundReq",
        "parameters": [
          {
            "name": "refundID",
            "in": "path",
            "description": "退款单号",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "minimum": 1,
              "x-go-validate": "@uint64[1,]"
            },
            "x-go-name": "RefundID"
          },
          {
            "name": "withChannelStatus",
            "in": "query",
            "description": "是否实时查询渠道方支付状态",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {
                  "default": "FALSE"
                }
              ]
            },
            "x-go-name": "WithChannelStatus"
          },
          {
            "name": "withNotifyTask",
            "in": "query",
            "description": "是否拉起通知任务",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {
                  "default": "FALSE"
                }
              ]
            },
            "x-go-name": "WithNotifyTask"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransRefund"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005006,TransPayInvalidChannelTypeErr,\"不支持的退款渠道\",\"\",true);\n@httpError(403005031,RefundStatusQueryCompleteRefundErr,\"退款状态查询, 完成退款单失败\",\"\",true);\n@httpError(403005030,WechatAppletRefundStatusQueryErr,\"微信小程序退款状态查询错误\",\"\",true);\n@httpError(403005034,CpcnRefundStatusQueryErr,\"中金支付退款状态查询错误\",\"\",true);\n@httpError(403005032,RefundStatusProcessingErr,\"退款状态查询, 渠道方状态为处理中\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005004,AccountChannelNotFoundErr,\"收款账户未开通当前支付渠道\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/refund/{refundID}/submit": {
      "put": {
        "tags": [
          "refund"
        ],
        "summary": "支付退款单",
        "operationId": "SubmitRefundReq",
        "parameters": [
          {
            "name": "refundID",
            "in": "path",
            "description": "退款单号",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "minimum": 1,
              "x-go-validate": "@uint64[1,]"
            },
            "x-go-name": "RefundID"
          }
        ],
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005164,DelayRefundErr,\"入金处理中，请稍后发起退款\",\"\",true);\n@httpError(400005024,PayRefundStatusIsNotUnPayErr,\"退款单状态错误，当前退款单已完成或正在处理中\",\"\",true);\n@httpError(400005022,WechatAppletSubmitRefundErr,\"微信小程序发起退款申请失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005081,NotSupportModeForRefundErr,\"收款账户不支持在线退款\",\"\",true);\n@httpError(403005006,TransPayInvalidChannelTypeErr,\"不支持的退款渠道\",\"\",true);\n@httpError(403005078,NotSupportRefundErr,\"此交易单分账账单没有交易流水，不支持退款\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005004,AccountChannelNotFoundErr,\"收款账户未开通当前支付渠道\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/setllement": {
      "post": {
        "tags": [
          "setllement"
        ],
        "summary": "@Deprecated 主结算流程-创建结算交易单",
        "operationId": "CreateSettlementReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSettlementBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settlement"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005026,CreaeTransPaymentUIDNotOpenThisChannelErr,\"付款账户未开通当前支付渠道\",\"\",true);\n@httpError(400005086,SettlementBalanceNotEnoughErr,\"可结算余额不足，结算失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005008,PaymentAccountNotFoundErr,\"付款账户信息未找到\",\"\",true);\n@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "409": {
            "description": "@httpError(409005014,CreateSettlementBySplitBillConflict,\"根据分账账单创建结算单失败\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v0/setllement/0/createAndSubmitSettlement": {
      "post": {
        "tags": [
          "setllement"
        ],
        "summary": "根据分账账户创建并提交结算单，不扣手续费",
        "operationId": "CreateAndSubmitSettlementReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAndSubmitSettlementBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settlement"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005087,SettlementByAmountOnlySupportCPCNModeErr,\"按金额结算只支持账户模式\",\"\",true);\n@httpError(400005045,NotFoundWaitSettlementBillErr,\"暂无待结算的分账账单\",\"\",true);\n@httpError(400005044,MainAccountNotHaveThisChannelErr,\"主账户未开通该结算渠道\",\"\",true);\n@httpError(400005086,SettlementBalanceNotEnoughErr,\"可结算余额不足，结算失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005050,SettlementAmountIsZeroErr,\"结算金额为0，结算失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005017,BatchCreateSettlementQuerySplitBillErr,\"批量创建结算单，获取分账账单列表失败\",\"\",true);\n@httpError(404005016,ReceiptAccountNotBindBankCardErr,\"收款账户未绑定银行卡\",\"\",true);\n@httpError(404005018,PaymentAccountChannelNotFoundErr,\"付款账户未开通当前支付渠道\",\"\",true);\n@httpError(404005014,ReceiptMainAccountNotFoundErr,\"收款账户主账户未找到\",\"\",true);\n@httpError(404005015,ReceiptSubAccountNotFoundErr,\"收款账户子账户未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "409": {
            "description": "@httpError(409005014,CreateSettlementBySplitBillConflict,\"根据分账账单创建结算单失败\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/setllement/0/createAndSubmitSettlementByUID": {
      "post": {
        "tags": [
          "setllement"
        ],
        "summary": "根据分账账户创建并提交结算单",
        "description": "仅此接口支持通联渠道提现",
        "operationId": "CreateAndSubmitSettlementByUIDReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAndSubmitSettlementByUIDBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settlement"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005044,MainAccountNotHaveThisChannelErr,\"主账户未开通该结算渠道\",\"\",true);\n@httpError(400005090,HasDoingSettlementErr,\"当前有处理中的结算申请，请稍后再试！\",\"\",true);\n@httpError(400005086,SettlementBalanceNotEnoughErr,\"可结算余额不足，结算失败\",\"\",true);\n@httpError(400005145,SettlementErr,\"结算失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005046,ReceiptAccountBalanceNotWorthErr,\"收款账户手续费不足，不能继续交易\",\"\",true);\n@httpError(403005048,CalSettlemntHandingFeeReduceErr,\"计算结算单手续费失败\",\"\",true);\n@httpError(403005050,SettlementAmountIsZeroErr,\"结算金额为0，结算失败\",\"\",true);\n@httpError(403005043,ReduceHandingFeeRuleNotFoundErr,\"手续费扣费规则未找到，请设置手续费扣除规则\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005041,ChannelNotSupportErr,\"通道不支持\",\"\",true);\n@httpError(404005015,ReceiptSubAccountNotFoundErr,\"收款账户子账户未找到\",\"\",true);\n@httpError(404005014,ReceiptMainAccountNotFoundErr,\"收款账户主账户未找到\",\"\",true);\n@httpError(404005018,PaymentAccountChannelNotFoundErr,\"付款账户未开通当前支付渠道\",\"\",true);\n@httpError(404005016,ReceiptAccountNotBindBankCardErr,\"收款账户未绑定银行卡\",\"\",true);\n@httpError(404005028,CreateSettlementErr,\"创建结算单失败\",\"\",false);\n@httpError(404005017,BatchCreateSettlementQuerySplitBillErr,\"批量创建结算单，获取分账账单列表失败\",\"\",true);\n@httpError(404005011,GetReceiptAccountBalanceErr,\"获取收款账户手续费余额失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "409": {
            "description": "@httpError(409005014,CreateSettlementBySplitBillConflict,\"根据分账账单创建结算单失败\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/setllement/0/createAndSubmitSettlementByUIDForHxb": {
      "post": {
        "tags": [
          "setllement"
        ],
        "summary": "根据分账账户按提交金额结算创建并提交结算单,  会将此账户所有未结算金额创建为一个结算单",
        "operationId": "CreateAndSubmitSettlementByUIDHxbReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAndSubmitSettlementByUIDHxbBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settlement"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005044,MainAccountNotHaveThisChannelErr,\"主账户未开通该结算渠道\",\"\",true);\n@httpError(400005058,MybankBalanceNotEnoughErr,\"当前可结算余额不足\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005043,ReduceHandingFeeRuleNotFoundErr,\"手续费扣费规则未找到，请设置手续费扣除规则\",\"\",true);\n@httpError(403005048,CalSettlemntHandingFeeReduceErr,\"计算结算单手续费失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005014,ReceiptMainAccountNotFoundErr,\"收款账户主账户未找到\",\"\",true);\n@httpError(404005027,ReceiptAccountModeNotSupportSettlementErr,\"账户交易模式不支持次接口结算\",\"\",true);\n@httpError(404005016,ReceiptAccountNotBindBankCardErr,\"收款账户未绑定银行卡\",\"\",true);\n@httpError(404005028,CreateSettlementErr,\"创建结算单失败\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "409": {
            "description": "@httpError(409005014,CreateSettlementBySplitBillConflict,\"根据分账账单创建结算单失败\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/setllement/0/createSettlementByUID": {
      "post": {
        "tags": [
          "setllement"
        ],
        "summary": "@Deprecated 直店分账模式-根据分账账号创建结算交易单",
        "operationId": "CreateSettlementByUIDReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSettlementByUIDBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settlement"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005045,NotFoundWaitSettlementBillErr,\"暂无待结算的分账账单\",\"\",true);\n@httpError(400005053,StoreSettlementReturnNotifyUrlRequiredErr,\"店铺结算时，returnNotifyUrl为必填参数\",\"\",true);\n@httpError(400005044,MainAccountNotHaveThisChannelErr,\"主账户未开通该结算渠道\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005050,SettlementAmountIsZeroErr,\"结算金额为0，结算失败\",\"\",true);\n@httpError(403005048,CalSettlemntHandingFeeReduceErr,\"计算结算单手续费失败\",\"\",true);\n@httpError(403005043,ReduceHandingFeeRuleNotFoundErr,\"手续费扣费规则未找到，请设置手续费扣除规则\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005014,ReceiptMainAccountNotFoundErr,\"收款账户主账户未找到\",\"\",true);\n@httpError(404005015,ReceiptSubAccountNotFoundErr,\"收款账户子账户未找到\",\"\",true);\n@httpError(404005016,ReceiptAccountNotBindBankCardErr,\"收款账户未绑定银行卡\",\"\",true);\n@httpError(404005017,BatchCreateSettlementQuerySplitBillErr,\"批量创建结算单，获取分账账单列表失败\",\"\",true);\n@httpError(404005011,GetReceiptAccountBalanceErr,\"获取收款账户手续费余额失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "409": {
            "description": "@httpError(409005014,CreateSettlementBySplitBillConflict,\"根据分账账单创建结算单失败\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v0/setllement/0/createSettlementForMybank": {
      "post": {
        "tags": [
          "setllement"
        ],
        "summary": "@Deprecated 网商银行来账识别创建结算交易单",
        "operationId": "CreateSettlementForMybankReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSettlementForMybankBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settlement"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005026,CreaeTransPaymentUIDNotOpenThisChannelErr,\"付款账户未开通当前支付渠道\",\"\",true);\n@httpError(400005058,MybankBalanceNotEnoughErr,\"当前可结算余额不足\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005058,GetReceiptAccountMybankBalanceErr,\"获取收款账户网商银行来账识别交易余额失败\",\"\",true);\n@httpError(403005059,MybankTransNumBalanceNotEnoughErr,\"智能收款剩余交易次数余额不足\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n@httpError(404005008,PaymentAccountNotFoundErr,\"付款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v0/setllement/0/getSettlementBalance": {
      "get": {
        "tags": [
          "setllement"
        ],
        "summary": "查询可结算余额, 查询可结算余额使用次接口，其他接口不在维护",
        "operationId": "GetSettlementBalanceReq",
        "parameters": [
          {
            "name": "subReceiptUID",
            "in": "query",
            "description": "子账户uid, 若查询主账户,则子账户和主账户一致",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "SubReceiptUID"
          },
          {
            "name": "mainUID",
            "in": "query",
            "description": "主账户UID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "MainUID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSettlementBalanceRsp"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005015,ReceiptSubAccountNotFoundErr,\"收款账户子账户未找到\",\"\",true);\n@httpError(404005014,ReceiptMainAccountNotFoundErr,\"收款账户主账户未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/setllement/{settlementID}": {
      "get": {
        "tags": [
          "setllement"
        ],
        "summary": "查询结算交易单",
        "operationId": "QuerySettlementReq",
        "parameters": [
          {
            "name": "settlementID",
            "in": "path",
            "description": "结算单号",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "minimum": 1,
              "x-go-validate": "@uint64[1,]"
            },
            "x-go-name": "SettlementID"
          },
          {
            "name": "withChannelStatus",
            "in": "query",
            "description": "是否实时查询渠道方支付状态",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {
                  "default": "FALSE"
                }
              ]
            },
            "x-go-name": "WithChannelStatus"
          },
          {
            "name": "withNotifyTask",
            "in": "query",
            "description": "是否拉起通知任务",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {
                  "default": "FALSE"
                }
              ]
            },
            "x-go-name": "WithNotifyTask"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settlement"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005036,SettlementStatusDealingErr,\"结算状态查询, 渠道方状态为处理中\",\"\",true);\n@httpError(403005037,SettlementStatusQueryCompleteSettlementErr,\"结算状态查询, 完成结算单失败\",\"\",true);\n@httpError(403005035,CpcnPaySettlementStatusQueryErr,\"中金支付结算单结算状态查询错误\",\"\",true);\n@httpError(403005056,MybankPaySettlementStatusQueryErr,\"网商银行来账识别结算单结算状态查询错误\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005004,AccountChannelNotFoundErr,\"收款账户未开通当前支付渠道\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "setllement"
        ],
        "summary": "@Deprecated 主结算流程-发送结算指令",
        "operationId": "SubmitSettlementReq",
        "parameters": [
          {
            "name": "settlementID",
            "in": "path",
            "description": "结算单号",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "minimum": 1,
              "x-go-validate": "@uint64[1,]"
            },
            "x-go-name": "SettlementID"
          },
          {
            "name": "smsCode",
            "in": "query",
            "description": "短信验证码，仅网商银行来账识别需要",
            "schema": {
              "type": "string",
              "maxLength": 16,
              "minLength": 0,
              "default": "",
              "x-go-validate": "@string[0,16]"
            },
            "x-go-name": "SmsCode"
          }
        ],
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005027,SettlementStatusIsNotCreatedErr,\"结算单状态错误，当前结算单状态不为CREATED\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005043,ReduceHandingFeeRuleNotFoundErr,\"手续费扣费规则未找到，请设置手续费扣除规则\",\"\",true);\n@httpError(403005048,CalSettlemntHandingFeeReduceErr,\"计算结算单手续费失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005011,GetReceiptAccountBalanceErr,\"获取收款账户手续费余额失败\",\"\",true);\n@httpError(404005018,PaymentAccountChannelNotFoundErr,\"付款账户未开通当前支付渠道\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v0/setllement/{settlementID}/getSettlementList": {
      "get": {
        "tags": [
          "setllement"
        ],
        "summary": "根据UID查询结算单列表,UID不传递获取所有结算单",
        "operationId": "GetSettlementListReq",
        "parameters": [
          {
            "name": "settlementStatus",
            "in": "query",
            "description": "结算状态,默认值查询SUCCESS状态结算单",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/BaseSrvSettlementStatus"
                },
                {
                  "default": "SUCCESS"
                }
              ]
            },
            "x-go-name": "SettlementStatus"
          },
          {
            "name": "startCreateTime",
            "in": "query",
            "description": "创建开始时间",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MySQLTimestamp"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "StartCreateTime"
          },
          {
            "name": "endCreateTime",
            "in": "query",
            "description": "创建结束时间",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MySQLTimestamp"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "EndCreateTime"
          },
          {
            "name": "size",
            "in": "query",
            "description": "每页数据大小",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "default": "10",
              "x-go-validate": "@int32[1,100]"
            },
            "x-go-name": "Size"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "偏移量",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@int32[0,]"
            },
            "x-go-name": "Offset"
          },
          {
            "name": "settlementID",
            "in": "path",
            "description": "结算单号",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@uint64[0,]"
            },
            "x-go-name": "SettlementID"
          },
          {
            "name": "uid",
            "in": "query",
            "description": "收款账户UID,不传递获取所有结算单",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": ""
            },
            "x-go-name": "UID"
          },
          {
            "name": "channelType",
            "in": "query",
            "description": "渠道, MYBANK_VOSTRO=网商",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/BaseSrvChannelType"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "ChannelType"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSettlementListResp"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/setllement/{settlementID}/getSettlementListByMainUID": {
      "get": {
        "tags": [
          "setllement"
        ],
        "summary": "根据主账户UID查询结算单列表",
        "operationId": "GetSettlementListByMainUIDReq",
        "parameters": [
          {
            "name": "startCreateTime",
            "in": "query",
            "description": "创建开始时间",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MySQLTimestamp"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "StartCreateTime"
          },
          {
            "name": "endCreateTime",
            "in": "query",
            "description": "创建结束时间",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MySQLTimestamp"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "EndCreateTime"
          },
          {
            "name": "uid",
            "in": "query",
            "description": "主账户UID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          },
          {
            "name": "channelType",
            "in": "query",
            "description": "渠道, MYBANK_VOSTRO=网商",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/BaseSrvChannelType"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "ChannelType"
          },
          {
            "name": "settlementStatus",
            "in": "query",
            "description": "结算状态,默认值查询SUCCESS状态结算单",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseSrvSettlementStatus"
              },
              "default": ""
            },
            "x-go-name": "SettlementStatus"
          },
          {
            "name": "size",
            "in": "query",
            "description": "每页数据大小",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "default": "10",
              "x-go-validate": "@int32[1,100]"
            },
            "x-go-name": "Size"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "偏移量",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@int32[0,]"
            },
            "x-go-name": "Offset"
          },
          {
            "name": "settlementID",
            "in": "path",
            "description": "结算单号",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@uint64[0,]"
            },
            "x-go-name": "SettlementID"
          },
          {
            "name": "subUID",
            "in": "query",
            "description": "子账户UID, 不传递获取所有子账户结算单",
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 0,
              "default": "",
              "x-go-validate": "@string[0,32]"
            },
            "x-go-name": "SubUID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSettlementListResp"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/setllement/{settlementID}/submitSettlementByUID": {
      "put": {
        "tags": [
          "setllement"
        ],
        "summary": "@Deprecated 直店分账模式-发送结算指令",
        "operationId": "SubmitSettlementByUIDReq",
        "parameters": [
          {
            "name": "settlementID",
            "in": "path",
            "description": "结算单号",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "minimum": 1,
              "x-go-validate": "@uint64[1,]"
            },
            "x-go-name": "SettlementID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Settlement"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005027,SettlementStatusIsNotCreatedErr,\"结算单状态错误，当前结算单状态不为CREATED\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005011,GetReceiptAccountBalanceErr,\"获取收款账户手续费余额失败\",\"\",true);\n@httpError(404005018,PaymentAccountChannelNotFoundErr,\"付款账户未开通当前支付渠道\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v0/tools/backOCR": {
      "post": {
        "tags": [
          "tools"
        ],
        "summary": "身份证反面ocr",
        "operationId": "BackOcrReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BackOCRReqBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackOcrRsp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005096,IdCardOcrFailedErr,\"身份证识别失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/tools/businessLicenseOCR": {
      "post": {
        "tags": [
          "tools"
        ],
        "summary": "营业执照ocr",
        "operationId": "BusinessLicenseOcrReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BusinessLicenseBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessLicenseOcrRsp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005097,BusinessLicenseOcrFailedErr,\"营业执照识别失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/tools/calHandingFee": {
      "post": {
        "tags": [
          "tools"
        ],
        "summary": "计算收款账户选择的支付渠道的手续费",
        "operationId": "CalHandingFeeReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalHandingFeeBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalHandingFeeRsp"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005043,ReduceHandingFeeRuleNotFoundErr,\"手续费扣费规则未找到，请设置手续费扣除规则\",\"\",true);\n@httpError(403005072,TransAmountNotPayHandingFeeErr,\"交易金额不足以支付手续费\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/tools/cardBin": {
      "get": {
        "tags": [
          "tools"
        ],
        "summary": "获取银行卡cardBin信息【中金】",
        "operationId": "CardBinReq",
        "parameters": [
          {
            "name": "cardNo",
            "in": "query",
            "description": "银行卡号，仅支持个人银行卡, 完整卡号",
            "required": true,
            "schema": {
              "type": "string",
              "x-go-validate": "@char[4,19]"
            },
            "x-go-name": "CardNo"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardBinResp"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005021,CardBinNotFoundErr,\"获取CardBin信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/tools/faceOCR": {
      "post": {
        "tags": [
          "tools"
        ],
        "summary": "身份证正面ocr",
        "operationId": "FaceOcrReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FaceOCRReqBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FaceOcrRsp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005096,IdCardOcrFailedErr,\"身份证识别失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/tools/getBankList": {
      "get": {
        "tags": [
          "tools"
        ],
        "summary": "获取常用银行列表",
        "operationId": "GetBankListReq",
        "parameters": [
          {
            "name": "isVSP",
            "in": "query",
            "description": "是否为通联渠道",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {
                  "default": "FALSE"
                }
              ]
            },
            "x-go-name": "IsVSP"
          },
          {
            "name": "isCloud",
            "in": "query",
            "description": "是否为云商通",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {
                  "default": "FALSE"
                }
              ]
            },
            "x-go-name": "IsCloud"
          },
          {
            "name": "keyWord",
            "in": "query",
            "description": "银行名称,模糊查询，isAllinPay=TRUE时有效",
            "schema": {
              "type": "string",
              "default": "",
              "x-go-validate": "@char[0,32]"
            },
            "x-go-name": "KeyWord"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBankListResp"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/tools/getCardBin": {
      "get": {
        "tags": [
          "tools"
        ],
        "summary": "获取银行卡cardBin信息",
        "operationId": "GetCardBinReq",
        "parameters": [
          {
            "name": "cardNo",
            "in": "query",
            "description": "银行卡号，仅支持个人银行卡",
            "required": true,
            "schema": {
              "type": "string",
              "x-go-validate": "@char[4,19]"
            },
            "x-go-name": "CardNo"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCardBinResp"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005021,CardBinNotFoundErr,\"获取CardBin信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/tools/getCategory": {
      "get": {
        "tags": [
          "tools"
        ],
        "summary": "获取行业类别",
        "operationId": "GetCategoryReq",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCategoryListResp"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/tools/getCity": {
      "get": {
        "tags": [
          "tools"
        ],
        "summary": "获取城市信息",
        "operationId": "GetCityReq",
        "parameters": [
          {
            "name": "keyWord",
            "in": "query",
            "description": "模糊匹配城市名称",
            "schema": {
              "type": "string",
              "default": "",
              "x-go-validate": "@char[0,64]"
            },
            "x-go-name": "KeyWord"
          },
          {
            "name": "size",
            "in": "query",
            "description": "每页数据大小",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "minimum": -1,
              "default": "10",
              "x-go-validate": "@int32[-1,100]"
            },
            "x-go-name": "Size"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "偏移量",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@int32[0,]"
            },
            "x-go-name": "Offset"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCpcnAreqResp"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/tools/getCityByProvince": {
      "get": {
        "tags": [
          "tools"
        ],
        "summary": "根据省份/城市 获取城市/区信息",
        "operationId": "GetCityByProvinceReq",
        "parameters": [
          {
            "name": "provinceId",
            "in": "query",
            "description": "模糊匹配城市名称",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-go-name": "ProvinceId"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCpcnAreqByProvinceResp"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/tools/getIndustry": {
      "get": {
        "tags": [
          "tools"
        ],
        "summary": "获取通用行业代码",
        "operationId": "GetIndustryReq",
        "parameters": [
          {
            "name": "keyWord",
            "in": "query",
            "description": "模糊匹配城市名称",
            "schema": {
              "type": "string",
              "default": "",
              "x-go-validate": "@char[0,64]"
            },
            "x-go-name": "KeyWord"
          },
          {
            "name": "size",
            "in": "query",
            "description": "每页数据大小",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "minimum": -1,
              "default": "10",
              "x-go-validate": "@int32[-1,100]"
            },
            "x-go-name": "Size"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "偏移量",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@int32[0,]"
            },
            "x-go-name": "Offset"
          },
          {
            "name": "isVSP",
            "in": "query",
            "description": "是否为通联渠道",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {
                  "default": "FALSE"
                }
              ]
            },
            "x-go-name": "IsVSP"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetIndustryResp"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/tools/getIndustryBelongType": {
      "get": {
        "tags": [
          "tools"
        ],
        "summary": "获取行业信息",
        "operationId": "GetIndustryBelongTypeReq",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetIndustryBelongTypeResp"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/tools/getInsOutCode": {
      "get": {
        "tags": [
          "tools"
        ],
        "summary": "根据银行支行名称模糊匹配人行联行号 \u003cGET /v0/tools/getInsOutCode\u003e",
        "operationId": "GetInsOutCodeReq",
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "description": "每页数据大小",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "default": "10",
              "x-go-validate": "@int[1,100]"
            },
            "x-go-name": "Size"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "偏移量",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@int[0,]"
            },
            "x-go-name": "Offset"
          },
          {
            "name": "bankName",
            "in": "query",
            "description": "银行名称",
            "required": true,
            "schema": {
              "type": "string",
              "x-go-validate": "@char[4,256]"
            },
            "x-go-name": "BankName"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInsOutCodeResp"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/tools/getMCC": {
      "get": {
        "tags": [
          "tools"
        ],
        "summary": "获取通联MCCID  \u003cGET /v0/tools/getMCC\u003e 前端-获取通联MCCID",
        "operationId": "GetMCCReq",
        "parameters": [
          {
            "name": "keyWord",
            "in": "query",
            "description": "模糊匹配城市名称",
            "schema": {
              "type": "string",
              "default": "",
              "x-go-validate": "@char[0,64]"
            },
            "x-go-name": "KeyWord"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVSPMccResp"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/tools/getProvince": {
      "get": {
        "tags": [
          "tools"
        ],
        "summary": "获取省信息",
        "operationId": "GetProvinceReq",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProvinceListResp"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/tools/getSubmitIndustry": {
      "get": {
        "tags": [
          "tools"
        ],
        "summary": "获取进件行业类别",
        "operationId": "GetSubmitIndustryReq",
        "parameters": [
          {
            "name": "payWay",
            "in": "query",
            "description": "进件类别 10=微信 20=支付宝 40=银联",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ServiceCpcnGatewayAccountPayWay"
                },
                {}
              ]
            },
            "x-go-name": "PayWay"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSubmitIndustryListResp"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/tools/getVspArea": {
      "get": {
        "tags": [
          "tools"
        ],
        "summary": "获取通联MCCID  \u003cGET /v0/tools/getVspArea\u003e 前端-获取通联收银宝地区码",
        "operationId": "GetVspAreaReq",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "偏移量",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@int32[0,]"
            },
            "x-go-name": "Offset"
          },
          {
            "name": "keyWord",
            "in": "query",
            "description": "模糊匹配城市名称",
            "schema": {
              "type": "string",
              "default": "",
              "x-go-validate": "@char[0,64]"
            },
            "x-go-name": "KeyWord"
          },
          {
            "name": "size",
            "in": "query",
            "description": "每页数据大小",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "minimum": -1,
              "default": "10",
              "x-go-validate": "@int32[-1,100]"
            },
            "x-go-name": "Size"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVspAreqResp"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/tools/getVspBankBranch": {
      "get": {
        "tags": [
          "tools"
        ],
        "summary": "获取通联分支行信息  \u003cGET /v0/tools/getVspBankBranch\u003e 前端-获取通联收银宝分支行信息",
        "operationId": "GetVspBankBranchReq",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "偏移量",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@int32[0,]"
            },
            "x-go-name": "Offset"
          },
          {
            "name": "keyWord",
            "in": "query",
            "description": "模糊匹配城市名称",
            "schema": {
              "type": "string",
              "default": "",
              "x-go-validate": "@char[0,64]"
            },
            "x-go-name": "KeyWord"
          },
          {
            "name": "bankCode",
            "in": "query",
            "description": "银行代码",
            "schema": {
              "type": "string",
              "default": "",
              "x-go-validate": "@char[0,64]"
            },
            "x-go-name": "BankCode"
          },
          {
            "name": "size",
            "in": "query",
            "description": "每页数据大小",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "minimum": -1,
              "default": "10",
              "x-go-validate": "@int32[-1,100]"
            },
            "x-go-name": "Size"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVspBankBranchResp"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/tools/tfa": {
      "post": {
        "tags": [
          "tools"
        ],
        "summary": "银行卡三要素验证，暂只支持个人银行卡账户",
        "operationId": "TfaReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TfaReqBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TfaResp"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005007,ReceiptAccountNotOpenThisPayChannelErr,\"收款账户未开通中金支付渠道\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/tools/vspCardBin": {
      "get": {
        "tags": [
          "tools"
        ],
        "summary": "获取银行卡cardBin信息【通联】\u003cGET /v0/tools/vspCardBin \u003e",
        "operationId": "VspCardBinReq",
        "parameters": [
          {
            "name": "cardNo",
            "in": "query",
            "description": "银行卡号，仅支持个人银行卡, 完整卡号",
            "required": true,
            "schema": {
              "type": "string",
              "x-go-validate": "@char[4,19]"
            },
            "x-go-name": "CardNo"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VspCardBinResp"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/trans": {
      "get": {
        "tags": [
          "trans"
        ],
        "summary": "H5QueryTransReq H5调用查询交易单",
        "operationId": "H5QueryTransReq",
        "parameters": [
          {
            "name": "X-Company-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "x-go-name": "CompanyID"
          },
          {
            "name": "X-User-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "UserID"
          },
          {
            "name": "X-Parent-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ParentUserID"
          },
          {
            "name": "X-Product-Code",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ProductCode"
          },
          {
            "name": "X-Is-Main",
            "in": "header",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {}
              ]
            },
            "x-go-name": "IsMain"
          },
          {
            "name": "transID",
            "in": "query",
            "description": "交易单号",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uint64",
              "minimum": 1,
              "x-go-validate": "@uint64[1,]"
            },
            "x-go-name": "TransID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          },
          "401": {
            "description": "@httpError(401005000,Unauthorized,\"未授权\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005028,WechatAppletPayStatusQueryErr,\"微信小程序支付状态查询错误\",\"\",true);\n@httpError(403005075,MybankMiniAppPayStatusQueryErr,\"网商云资金小程序支付支付状态查询错误\",\"\",true);\n@httpError(403005038,TransStatusQueryProcessingErr,\"交易单状态查询, 渠道方状态为处理中\",\"\",true);\n@httpError(403005006,TransPayInvalidChannelTypeErr,\"不支持的退款渠道\",\"\",true);\n@httpError(403005029,WechatAppletPayStatusQueryCompleteTransErr,\"微信小程序支付状态查询, 完成交易单失败\",\"\",true);\n@httpError(403005033,CpcnPayStatusQueryErr,\"中金支付支付状态查询错误\",\"\",true);\n@httpError(403005055,MybankPayStatusQueryErr,\"网商银行来账识别查询渠道方汇款状态失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005004,AccountChannelNotFoundErr,\"收款账户未开通当前支付渠道\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "trans"
        ],
        "summary": "创建交易单",
        "description": "当收款账户模式为收银宝时不支持分账相关参数",
        "operationId": "CreateTransReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTransRsp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005155,AllInPayOpenIDRequiredErr,\"通联渠道，公众号/小程序支付openID或acctType必填\",\"\",true);\n@httpError(400005025,CreaeTransReceiptUIDNotOpenThisChannelErr,\"收款账户未开通当前支付渠道\",\"\",true);\n@httpError(400005049,TransTotalAmountNotMatchSplitTotalAmountErr,\"交易单交易金额和分账总金额不匹配\",\"\",true);\n@httpError(400005166,AcctTypeRequiredErr,\"参数acctType必填\",\"\",true);\n@httpError(400005167,OpenIDRequiredErr,\"参数openID必填\",\"\",true);\n@httpError(400005023,CreaeTransPaymentUIDEqReceiptUIDErr,\"收款账户ID和付款账户ID不能相同\",\"\",true);\n@httpError(400005084,TradingReduceHandingFeeRequiredSplitHandingFeeBill,\"当前收款账户，手续费扣费模式为实时扣收, 分账值必须包含手续费扣费分账条目\",\"\",true);\n@httpError(400005048,WhenSplitTypeNotSplitValueCantNullErr,\"splitType不为NO_SPLIT时,SplitValue必填\",\"\",true);\n@httpError(400005050,BadSplitValueFormatErr,\"分账值格式错误\",\"\",true);\n@httpError(400005117,CloudMiniAppPayCantSupportSplitTypeErr,\"网商云资金小程序支付不支持的分账模式\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005054,OnlineBankReturnUrlRequiredErr,\"网银支付returnUrl参数为必填\",\"\",true);\n@httpError(403005060,SplitItemCountErr,\"分账结算域出现次数超过允许最大次数10\",\"\",true);\n@httpError(403005071,TransferNotSupportSplitErr,\"转账支付，不支持分账\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005015,ReceiptSubAccountNotFoundErr,\"收款账户子账户未找到\",\"\",true);\n@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n@httpError(404005011,GetReceiptAccountBalanceErr,\"获取收款账户手续费余额失败\",\"\",true);\n@httpError(404005026,SplitValueAmountErr,\"分账参数错误，金额不能为0\",\"\",true);\n@httpError(404005008,PaymentAccountNotFoundErr,\"付款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/trans/0/batchQueryTrans": {
      "get": {
        "tags": [
          "trans"
        ],
        "summary": "批量查询交易单，最大100条",
        "operationId": "BatchQueryTransReq",
        "parameters": [
          {
            "name": "transID",
            "in": "query",
            "description": "交易单号",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "uint64"
              },
              "x-go-validate": "@array[1,100]"
            },
            "x-go-name": "TransID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransList"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005005,TransNotFoundErr,\"当前交易单未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/trans/0/createBankTransferTrans": {
      "post": {
        "tags": [
          "trans"
        ],
        "summary": "@Deprecated 中金账户模式-来账识别创建交易单（仅内部使用-勿随意调用）",
        "operationId": "CreateBankTransferTransReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBankTransferTransBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005092,GetSplitInfoErr,\"中金来账识别，获取分账信息失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005043,ReduceHandingFeeRuleNotFoundErr,\"手续费扣费规则未找到，请设置手续费扣除规则\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v0/trans/0/queryBatchAgentPayTrans": {
      "get": {
        "tags": [
          "trans"
        ],
        "summary": "查询交易单",
        "operationId": "QueryBatchAgentPayTransReq",
        "parameters": [
          {
            "name": "withChannelStatus",
            "in": "query",
            "description": "是否实时查询渠道方支付状态",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {
                  "default": "FALSE"
                }
              ]
            },
            "x-go-name": "WithChannelStatus"
          },
          {
            "name": "agentPaySn",
            "in": "query",
            "description": "代付流水号",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "AgentPaySn"
          }
        ],
        "responses": {
          "204": {},
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/trans/0/searchTrans": {
      "get": {
        "tags": [
          "trans"
        ],
        "summary": "查询交易单",
        "operationId": "SearchTransReq",
        "parameters": [
          {
            "name": "uid",
            "in": "query",
            "description": "收款账户id",
            "schema": {
              "type": "string",
              "default": "",
              "x-go-validate": "@char[0,32]"
            },
            "x-go-name": "UID"
          },
          {
            "name": "transID",
            "in": "query",
            "description": "交易单号,过个逗号分隔",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "uint64"
              },
              "default": "",
              "x-go-validate": "@array[0,100]"
            },
            "x-go-name": "TransID"
          },
          {
            "name": "paySn",
            "in": "query",
            "description": "第三方流水",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": "",
              "x-go-validate": "@array[0,100]"
            },
            "x-go-name": "PaySN"
          }
        ],
        "responses": {
          "204": {},
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n@httpError(404005005,TransNotFoundErr,\"当前交易单未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/trans/0/searchTransBankTransferLog": {
      "get": {
        "tags": [
          "trans"
        ],
        "summary": "@Deprecated 查询中金来账识别回调日志",
        "operationId": "SearchTransBankTransferLogReq",
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "description": "每页数据大小",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "minimum": -1,
              "default": "100",
              "x-go-validate": "@int32[-1,100]"
            },
            "x-go-name": "Size"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "偏移量",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@int32[0,]"
            },
            "x-go-name": "Offset"
          },
          {
            "name": "uid",
            "in": "query",
            "description": "收款账户id",
            "schema": {
              "type": "string",
              "default": "",
              "x-go-validate": "@char[0,32]"
            },
            "x-go-name": "UID"
          },
          {
            "name": "payerBankAccountNumber",
            "in": "query",
            "description": "付款卡号",
            "schema": {
              "type": "string",
              "default": "",
              "x-go-validate": "@char[0,64]"
            },
            "x-go-name": "PayerBankAccountNumber"
          },
          {
            "name": "payerBankAccountName",
            "in": "query",
            "description": "付款卡持卡人",
            "schema": {
              "type": "string",
              "default": "",
              "x-go-validate": "@char[0,255]"
            },
            "x-go-name": "PayerBankAccountName"
          },
          {
            "name": "payeeBankAccountNumber",
            "in": "query",
            "description": "收款卡号",
            "schema": {
              "type": "string",
              "default": "",
              "x-go-validate": "@char[0,64]"
            },
            "x-go-name": "PayeeBankAccountNumber"
          },
          {
            "name": "payeeBankAccountName",
            "in": "query",
            "description": "收款卡持卡人",
            "schema": {
              "type": "string",
              "default": "",
              "x-go-validate": "@char[0,255]"
            },
            "x-go-name": "PayeeBankAccountName"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchTransBankTransferLogRsp"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v0/trans/{transID}": {
      "get": {
        "tags": [
          "trans"
        ],
        "summary": "查询交易单",
        "operationId": "QueryTransReq",
        "parameters": [
          {
            "name": "transID",
            "in": "path",
            "description": "交易单号",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "minimum": 1,
              "x-go-validate": "@uint64[1,]"
            },
            "x-go-name": "TransID"
          },
          {
            "name": "withChannelStatus",
            "in": "query",
            "description": "是否实时查询渠道方支付状态",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {
                  "default": "FALSE"
                }
              ]
            },
            "x-go-name": "WithChannelStatus"
          },
          {
            "name": "withNotifyTask",
            "in": "query",
            "description": "是否拉起通知任务",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {
                  "default": "FALSE"
                }
              ]
            },
            "x-go-name": "WithNotifyTask"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trans"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005029,WechatAppletPayStatusQueryCompleteTransErr,\"微信小程序支付状态查询, 完成交易单失败\",\"\",true);\n@httpError(403005028,WechatAppletPayStatusQueryErr,\"微信小程序支付状态查询错误\",\"\",true);\n@httpError(403005055,MybankPayStatusQueryErr,\"网商银行来账识别查询渠道方汇款状态失败\",\"\",true);\n@httpError(403005075,MybankMiniAppPayStatusQueryErr,\"网商云资金小程序支付支付状态查询错误\",\"\",true);\n@httpError(403005006,TransPayInvalidChannelTypeErr,\"不支持的退款渠道\",\"\",true);\n@httpError(403005038,TransStatusQueryProcessingErr,\"交易单状态查询, 渠道方状态为处理中\",\"\",true);\n@httpError(403005033,CpcnPayStatusQueryErr,\"中金支付支付状态查询错误\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005004,AccountChannelNotFoundErr,\"收款账户未开通当前支付渠道\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/trans/{transID}/bankTransferDoSplit": {
      "post": {
        "tags": [
          "trans"
        ],
        "summary": "@Deprecated 执行分账，仅支持中金来账识别",
        "operationId": "BankTransferDoSplitByTransReq",
        "parameters": [
          {
            "name": "transID",
            "in": "path",
            "description": "交易单号",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "minimum": 1,
              "x-go-validate": "@uint64[1,]"
            },
            "x-go-name": "TransID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankTransferDoSplitByTransBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005093,AccountModeErr,\"账户模式错误\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005074,TransIDChannelTypeNotSupportDoSplitErr,\"支付渠道不支持此分账方式\",\"\",true);\n@httpError(403005053,TransAlreadySplitErr,\"当前交易单已经执行过确认分账操作，不能再次执行\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n@httpError(500005019,CreateSplitBillsInternalError,\"创建分账账单内部处理失败\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v0/trans/{transID}/close": {
      "put": {
        "tags": [
          "trans"
        ],
        "summary": "实时关闭交易单",
        "operationId": "CloseTransReq",
        "parameters": [
          {
            "name": "transID",
            "in": "path",
            "description": "交易单号",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "minimum": 1,
              "x-go-validate": "@uint64[1,]"
            },
            "x-go-name": "TransID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseTransBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005102,TransPayStatusCantCloseErr,\"交易单状态不能关闭\",\"\",true);\n@httpError(400005059,CpcnCloseOrderFaildErr,\"中金支付关单失败\",\"\",true);\n@httpError(400005165,AllinpayCloseOrderErr,\"通联执行关单失败\",\"\",true);\n@httpError(400005076,MyBankCloseOrderErr,\"网商银行执行关单失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005004,AccountChannelNotFoundErr,\"收款账户未开通当前支付渠道\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/trans/{transID}/doBatchAgentPay": {
      "put": {
        "tags": [
          "trans"
        ],
        "summary": "查询交易单",
        "operationId": "DoBatchAgentPayReq",
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "",
              "x-go-validate": "@char[0,32]"
            },
            "x-go-name": "UserAgent"
          },
          {
            "name": "transID",
            "in": "path",
            "description": "交易单号",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "minimum": 1,
              "x-go-validate": "@uint64[1,]"
            },
            "x-go-name": "TransID"
          }
        ],
        "responses": {
          "204": {},
          "403": {
            "description": "@httpError(403005000,ForbiddenErr,\"非法操作\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/trans/{transID}/doSplit": {
      "post": {
        "tags": [
          "trans"
        ],
        "summary": "执行分账，仅支持交易单为预分账时使用",
        "operationId": "DoSplitByTransReq",
        "parameters": [
          {
            "name": "transID",
            "in": "path",
            "description": "交易单号",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "minimum": 1,
              "x-go-validate": "@uint64[1,]"
            },
            "x-go-name": "TransID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DoSplitByTransBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005150,AccountModeNotSupportPreSplitErr,\"账户模式不支持预分账\",\"\",true);\n@httpError(400005050,BadSplitValueFormatErr,\"分账值格式错误\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005053,TransAlreadySplitErr,\"当前交易单已经执行过确认分账操作，不能再次执行\",\"\",true);\n@httpError(403005052,TransSplitIsNotPreSplitCantDoThisAactionErr,\"当前交易单不为预分账模式，不能执行此操作\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005015,ReceiptSubAccountNotFoundErr,\"收款账户子账户未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v0/upload": {
      "post": {
        "tags": [
          "upload"
        ],
        "summary": "@Deprecated 证书文件上传",
        "operationId": "UploadFilesReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadFilesBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadFilesResp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005021,UploadSignFileErr,\"证书文件上传失败\",\"\",true);\n@httpError(400005028,UploadPFXCertPleasePostPassErr,\"上传PFX类型证书，请同事提供证书秘密\",\"\",true);\n@httpError(400005031,CertUploadAndVerifyFaildErr,\"证书上传校验失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v1/handingFee/0/getAccountByHandingFee": {
      "get": {
        "tags": [
          "handing_fee"
        ],
        "summary": "获取手续费低于x的账户列表, 不传递金额返回所有列表",
        "operationId": "GetAccountByHandingFeeReq",
        "parameters": [
          {
            "name": "amount",
            "in": "query",
            "description": "预警金额",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@int64[0,]"
            },
            "x-go-name": "Amount"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountListByHandingFeeResp"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v1/handingFee/0/getAccountByMybankBalance": {
      "get": {
        "tags": [
          "handing_fee"
        ],
        "summary": "@Deprecated 获取网商银行智能收款剩余量低于x的账户列表, 不传递金额返回所有列表",
        "operationId": "GetAccountByMybankBalanceReq",
        "parameters": [
          {
            "name": "mybankBalance",
            "in": "query",
            "description": "预警值",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@int64[0,]"
            },
            "x-go-name": "MybankBalance"
          },
          {
            "name": "size",
            "in": "query",
            "description": "每页数据大小",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "default": "10",
              "x-go-validate": "@int32[1,100]"
            },
            "x-go-name": "Size"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "偏移量",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@int32[0,]"
            },
            "x-go-name": "Offset"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountListByMybankBalanceResp"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v1/handingFee/{uid}/createReduceRule": {
      "post": {
        "tags": [
          "handing_fee"
        ],
        "summary": "创建手续费扣费规则, 注意: 不管任何模式，若需要结算均需要添加结算手续费扣费规则，否则结算将失败",
        "description": "同一个收款账户，同一种支付方式同时只能有一种扣费模式, 若已经创建过该支付方式扣费规则，再次创建将会修改原数据",
        "operationId": "CreateReduceRuleReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "付款账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReduceRuleBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAccountHandingFeeReduceRule"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005057,ReduceValueRequiredErr,\"创建手续费扣费规则,reduceValue必填\",\"\",true);\n@httpError(400005055,CreateReduceFeeMybankConfigRequiredErr,\"创建手续费扣费规则，当选择网商来账识别时config必填\",\"\",true);\n@httpError(400005056,CreateRefuceForMybankErr,\"创建来账识别手续费扣费规则失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v1/handingFee/{uid}/getHandingFeeBalance": {
      "get": {
        "tags": [
          "handing_fee"
        ],
        "summary": "获取充值手续费余额",
        "operationId": "GetHandingFeeBalanceReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "付款账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHandingFeeBalanceResp"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n@httpError(404005022,ReceiptAccountMybankBalanceErr,\"获取网商银行来账识别剩余交易量失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v1/handingFee/{uid}/getHandingFeeDetailByHFID": {
      "get": {
        "tags": [
          "handing_fee"
        ],
        "summary": "根据UID获取手续费充值消费列表",
        "operationId": "GetHandingFeeDetailByHFIDReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "付款账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          },
          {
            "name": "hfID",
            "in": "query",
            "description": "手续费流水ID",
            "required": true,
            "schema": {
              "type": "string",
              "items": {
                "type": "integer",
                "format": "uint64"
              }
            },
            "x-go-name": "HfID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHandingFeeDetailByHFIDResp"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v1/handingFee/{uid}/getHandingFeeList": {
      "get": {
        "tags": [
          "handing_fee"
        ],
        "summary": "获取手续费充值消费列表包含账户信息, UID为0时返回所有消费流水",
        "operationId": "GetHandingFeeListReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "付款账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "default": "",
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          },
          {
            "name": "channelType",
            "in": "query",
            "description": "支付渠道, 多个逗号分隔",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseSrvChannelType"
              },
              "default": ""
            },
            "x-go-name": "ChannelType"
          },
          {
            "name": "startCreateTime",
            "in": "query",
            "description": "创建时间开始",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MySQLTimestamp"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "StartCreateTime"
          },
          {
            "name": "endCreateTime",
            "in": "query",
            "description": "创建时间结束",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MySQLTimestamp"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "EndCreateTime"
          },
          {
            "name": "type",
            "in": "query",
            "description": "类型",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseSrvHandingFeeType"
              },
              "default": ""
            },
            "x-go-name": "Type"
          },
          {
            "name": "size",
            "in": "query",
            "description": "每页数据大小",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "default": "10",
              "x-go-validate": "@int32[1,100]"
            },
            "x-go-name": "Size"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "偏移量",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@int32[0,]"
            },
            "x-go-name": "Offset"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHandingFeeListWithAccountResp"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v1/handingFee/{uid}/getHandingFeeListByUID": {
      "get": {
        "tags": [
          "handing_fee"
        ],
        "summary": "根据UID获取手续费充值消费列表",
        "operationId": "GetHandingFeeListByUIDReq",
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "description": "每页数据大小",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 2000,
              "minimum": 1,
              "default": "10",
              "x-go-validate": "@int32[1,2000]"
            },
            "x-go-name": "Size"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "偏移量",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@int32[0,]"
            },
            "x-go-name": "Offset"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "付款账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          },
          {
            "name": "startCreateTime",
            "in": "query",
            "description": "创建时间开始",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MySQLTimestamp"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "StartCreateTime"
          },
          {
            "name": "endCreateTime",
            "in": "query",
            "description": "创建时间结束",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MySQLTimestamp"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "EndCreateTime"
          },
          {
            "name": "channelType",
            "in": "query",
            "description": "支付渠道, 多个逗号分隔",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseSrvChannelType"
              },
              "default": ""
            },
            "x-go-name": "ChannelType"
          },
          {
            "name": "type",
            "in": "query",
            "description": "类型",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseSrvHandingFeeType"
              },
              "default": ""
            },
            "x-go-name": "Type"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetHandingFeeListResp"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v1/handingFee/{uid}/getMybankBalanceList": {
      "get": {
        "tags": [
          "handing_fee"
        ],
        "summary": "@Deprecated 获取网商银行智能收款手续费充值消费列表包含账户信息, UID为0时返回所有消费流水, 仅用于运营后台",
        "operationId": "GetMybankBalanceListReq",
        "parameters": [
          {
            "name": "endCreateTime",
            "in": "query",
            "description": "创建时间结束",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MySQLTimestamp"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "EndCreateTime"
          },
          {
            "name": "type",
            "in": "query",
            "description": "类型",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseSrvHandingFeeType"
              },
              "default": ""
            },
            "x-go-name": "Type"
          },
          {
            "name": "size",
            "in": "query",
            "description": "每页数据大小",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "default": "10",
              "x-go-validate": "@int32[1,100]"
            },
            "x-go-name": "Size"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "偏移量",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@int32[0,]"
            },
            "x-go-name": "Offset"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "付款账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "default": "",
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          },
          {
            "name": "startCreateTime",
            "in": "query",
            "description": "创建时间开始",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MySQLTimestamp"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "StartCreateTime"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMybankBalanceListResp"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v1/handingFee/{uid}/getMybankBalanceListByUID": {
      "get": {
        "tags": [
          "handing_fee"
        ],
        "summary": "@Deprecated 网商银行智能收款根据UID获取手续费充值消费列表",
        "operationId": "GetMybankBalanceListByUIDReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "付款账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          },
          {
            "name": "startCreateTime",
            "in": "query",
            "description": "创建时间开始",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MySQLTimestamp"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "StartCreateTime"
          },
          {
            "name": "endCreateTime",
            "in": "query",
            "description": "创建时间结束",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MySQLTimestamp"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "EndCreateTime"
          },
          {
            "name": "type",
            "in": "query",
            "description": "类型",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseSrvHandingFeeType"
              },
              "default": ""
            },
            "x-go-name": "Type"
          },
          {
            "name": "size",
            "in": "query",
            "description": "每页数据大小",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "default": "10",
              "x-go-validate": "@int32[1,100]"
            },
            "x-go-name": "Size"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "偏移量",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@int32[0,]"
            },
            "x-go-name": "Offset"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMybankBalanceListResp"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v1/handingFee/{uid}/recharge": {
      "put": {
        "tags": [
          "handing_fee"
        ],
        "summary": "充值手续费",
        "operationId": "RechargeHandingFeeReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "收款账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "x-go-validate": "@char[1,32]"
            },
            "x-go-name": "UID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RechargeHandingFeeBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "403": {
            "description": "@httpError(403005057,NotSupportRechargeErr,\"暂不支持此充值类型\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v1/handingFee/{uid}/rule": {
      "get": {
        "tags": [
          "handing_fee"
        ],
        "summary": "获取扣费规则",
        "operationId": "GetHandingFeeRuleReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "主账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          },
          {
            "name": "reduceMethod",
            "in": "query",
            "description": "扣费方式",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/BaseSrvReducePayMethodType"
                },
                {}
              ]
            },
            "x-go-name": "ReduceMethod"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAccountHandingFeeReduceRule"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v1/handingFee/{uid}/rules": {
      "get": {
        "tags": [
          "handing_fee"
        ],
        "summary": "获取扣费规则, 仅返回设置的特殊扣费规则",
        "operationId": "GetHandingFeeRulesByAccountReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "主账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAccountHandingFeeReduceRuleList"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v1/quick/{uid}/delBindCard": {
      "delete": {
        "tags": [
          "quick"
        ],
        "summary": "快捷支付解除银行卡绑定关系",
        "operationId": "DeleteBindCardReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "付款账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          },
          {
            "name": "bindID",
            "in": "query",
            "description": "绑定流水",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uint64",
              "minimum": 1,
              "x-go-validate": "@uint64[1,]"
            },
            "x-go-name": "BindID"
          }
        ],
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005030,QuickPayAlreadyDelBindCardErr,\"解除绑卡信息失败，此卡已解除绑定，请勿重复解绑\",\"\",true);\n@httpError(400005029,QuickPayDelBindCardNotMatchErr,\"解除绑卡信息失败，账户不匹配\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005004,AccountChannelNotFoundErr,\"收款账户未开通当前支付渠道\",\"\",false);\n@httpError(404005008,PaymentAccountNotFoundErr,\"付款账户信息未找到\",\"\",true);\n@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n@httpError(404005013,ReceiptAccountNotConfigModeErr,\"收款账户尚未配置交易模式\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v1/quick/{uid}/getQuickPayBindCardList": {
      "get": {
        "tags": [
          "quick"
        ],
        "summary": "快捷支付获取付款账户在收款账户（机构）下已经绑定的银行卡列表",
        "operationId": "GetQuickPayBindCardListByUIDAndReceiptUIDReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "付款账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          },
          {
            "name": "receiptUID",
            "in": "query",
            "description": "收款账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "x-go-validate": "@char[1,32]"
            },
            "x-go-name": "ReceiptUID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetQuickPayBindCardListByUIDAndReceiptUIDResp"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005008,PaymentAccountNotFoundErr,\"付款账户信息未找到\",\"\",true);\n@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v1/quick/{uid}/sendBindCardSms": {
      "post": {
        "tags": [
          "quick"
        ],
        "summary": "快捷支付，发送绑卡短信",
        "operationId": "SendBindCardSmsReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "付款账户UID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendBindCardSmsBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendBindCardSmsResp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005163,RealNameErr,\"持卡人信息认证失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005047,NotSupportCardErr,\"暂不支持此银行卡\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005013,ReceiptAccountNotConfigModeErr,\"收款账户尚未配置交易模式\",\"\",true);\n@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n@httpError(404005004,AccountChannelNotFoundErr,\"收款账户未开通当前支付渠道\",\"\",false);\n@httpError(404005008,PaymentAccountNotFoundErr,\"付款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v1/quick/{uid}/sendPaySms": {
      "post": {
        "tags": [
          "quick"
        ],
        "summary": "快捷支付，发送支付短信",
        "operationId": "SendPaySmsReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "付款账户UID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendPaySmsBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005069,QuickPayErr,\"快捷支付支付失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005001,TransIDReceiptAccountIDErr,\"收款账户不匹配\",\"\",true);\n@httpError(403005004,TransIDStatusNotUnpayErr,\"当前支付状态不为【未支付】不能付款\",\"\",true);\n@httpError(403005002,TransIDPaymentAccountIDErr,\"付款账户不匹配\",\"\",true);\n@httpError(403005003,TransIDTotalAmountErr,\"付款金额不匹配\",\"\",true);\n@httpError(403005044,BindCardStatusErr,\"绑卡流水状态错误\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005008,PaymentAccountNotFoundErr,\"付款账户信息未找到\",\"\",true);\n@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n@httpError(404005013,ReceiptAccountNotConfigModeErr,\"收款账户尚未配置交易模式\",\"\",true);\n@httpError(404005004,AccountChannelNotFoundErr,\"收款账户未开通当前支付渠道\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v1/quick/{uid}/verifyAndBind": {
      "post": {
        "tags": [
          "quick"
        ],
        "summary": "快捷支付，验证绑卡短信并绑定银行卡",
        "operationId": "VerifyAndBindReq",
        "parameters": [
          {
            "name": "uid",
            "in": "path",
            "description": "付款账户UID",
            "required": true,
            "schema": {
              "type": "string",
              "x-go-validate": "@char[1,32]"
            },
            "x-go-name": "UID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyAndBindBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyAndBindResp"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005086,QuickPayReqParamsThpInfoRequiredErr,\"快捷支付参数错误, 透传信息(thpInfo)为必填\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005004,AccountChannelNotFoundErr,\"收款账户未开通当前支付渠道\",\"\",false);\n@httpError(404005008,PaymentAccountNotFoundErr,\"付款账户信息未找到\",\"\",true);\n@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n@httpError(404005013,ReceiptAccountNotConfigModeErr,\"收款账户尚未配置交易模式\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v1/splitBill": {
      "get": {
        "tags": [
          "split_bill"
        ],
        "summary": "获取分账账单列表",
        "operationId": "GetSplitBillListReq",
        "parameters": [
          {
            "name": "tradeNo",
            "in": "query",
            "description": "业务方订单号",
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 0,
              "default": "",
              "x-go-validate": "@string[0,32]"
            },
            "x-go-name": "TradeNo"
          },
          {
            "name": "settlementID",
            "in": "query",
            "description": "结算单号",
            "schema": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0,
              "default": "",
              "x-go-validate": "@uint64[0,]"
            },
            "x-go-name": "SettlementID"
          },
          {
            "name": "startCreateTime",
            "in": "query",
            "description": "创建时间开始",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MySQLTimestamp"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "StartCreateTime"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "偏移量",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@int32[0,]"
            },
            "x-go-name": "Offset"
          },
          {
            "name": "uid",
            "in": "query",
            "description": "分账账户UID",
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 0,
              "default": "",
              "x-go-validate": "@string[0,32]"
            },
            "x-go-name": "UID"
          },
          {
            "name": "transID",
            "in": "query",
            "description": "交易单号",
            "schema": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0,
              "default": "",
              "x-go-validate": "@uint64[0,]"
            },
            "x-go-name": "TransID"
          },
          {
            "name": "status",
            "in": "query",
            "description": "分账账单状态\n状态",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/BaseSrvSplitBillStatus"
                },
                {
                  "enum": [
                    "",
                    "PRE_SPLIT",
                    "DEALING",
                    "WAIT_SPLIT",
                    "SETTLED"
                  ],
                  "default": "",
                  "x-go-validate": "@string{,PRE_SPLIT,DEALING,WAIT_SPLIT,SETTLED}"
                }
              ]
            },
            "x-go-name": "Status"
          },
          {
            "name": "endCreateTime",
            "in": "query",
            "description": "创建时间结束",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MySQLTimestamp"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "EndCreateTime"
          },
          {
            "name": "size",
            "in": "query",
            "description": "每页数据大小",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "default": "10",
              "x-go-validate": "@int32[1,100]"
            },
            "x-go-name": "Size"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSplitBillListResp"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v1/splitBill/updateSplitBill": {
      "put": {
        "tags": [
          "split_bill"
        ],
        "summary": "更新分账账单订单号",
        "operationId": "UpdateSplitBillOrderNoReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSplitBillOrderNoBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005095,UpdateSplitBillOrderNoErr,\"更新分账账单订单号失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v2/mybank/disabledMerchant": {
      "post": {
        "tags": [
          "mybank"
        ],
        "summary": "@Deprecated 关闭商户",
        "operationId": "DisabledMerchantReqReq",
        "parameters": [
          {
            "name": "uid",
            "in": "query",
            "description": "收款账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "x-go-validate": "@char[1,15]"
            },
            "x-go-name": "UID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DisabledMerchantBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FreezeResp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005025,CreaeTransReceiptUIDNotOpenThisChannelErr,\"收款账户未开通当前支付渠道\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v2/mybank/doSplit": {
      "get": {
        "tags": [
          "mybank"
        ],
        "summary": "@Deprecated 分账",
        "operationId": "DoSplitReq",
        "parameters": [
          {
            "name": "transID",
            "in": "query",
            "description": "交易单号",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "minimum": 1,
              "x-go-validate": "@uint64[1,]"
            },
            "x-go-name": "TransID"
          }
        ],
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005075,MyBankDoSplitErr,\"网商银行执行分账失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005055,MybankPayStatusQueryErr,\"网商银行来账识别查询渠道方汇款状态失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005004,AccountChannelNotFoundErr,\"收款账户未开通当前支付渠道\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v2/mybank/enabledMerchant": {
      "post": {
        "tags": [
          "mybank"
        ],
        "summary": "@Deprecated 开启商户",
        "operationId": "EnabledMerchantReqReq",
        "parameters": [
          {
            "name": "uid",
            "in": "query",
            "description": "收款账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "x-go-validate": "@char[1,15]"
            },
            "x-go-name": "UID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnabledMerchantBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnfreezeResp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005025,CreaeTransReceiptUIDNotOpenThisChannelErr,\"收款账户未开通当前支付渠道\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v2/mybank/getArea": {
      "get": {
        "tags": [
          "mybank"
        ],
        "summary": "@Deprecated 网商银联城市地区信息",
        "operationId": "GetAreaReq",
        "parameters": [
          {
            "name": "parentAreaId",
            "in": "query",
            "description": "父级区域ID",
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 0,
              "default": "1",
              "x-go-validate": "@int64[0,]"
            },
            "x-go-name": "ParentAreaId"
          },
          {
            "name": "size",
            "in": "query",
            "description": "每页数据大小",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "minimum": -1,
              "default": "100",
              "x-go-validate": "@int32[-1,100]"
            },
            "x-go-name": "Size"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "偏移量",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@int32[0,]"
            },
            "x-go-name": "Offset"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMybankAreqResp"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v2/mybank/getMccTypeList": {
      "get": {
        "tags": [
          "mybank"
        ],
        "summary": "@Deprecated 获取经营类目列表",
        "operationId": "GetMccTypeListReq",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMccTypeListResp"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v2/mybank/miniAppDoSplit": {
      "post": {
        "tags": [
          "mybank"
        ],
        "summary": "云资金小程序支付分账 [内部接口业务端勿调用]",
        "operationId": "MiniAppDoSplitReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MiniAppDoSplitBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "404": {
            "description": "@httpError(404005004,AccountChannelNotFoundErr,\"收款账户未开通当前支付渠道\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v2/mybank/queryMerchant": {
      "get": {
        "tags": [
          "mybank"
        ],
        "summary": "@Deprecated 查询商户信息",
        "operationId": "QueryMerchantReq",
        "parameters": [
          {
            "name": "uid",
            "in": "query",
            "description": "收款账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "x-go-validate": "@char[1,32]"
            },
            "x-go-name": "UID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MerchantQueryResponseBody"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005025,CreaeTransReceiptUIDNotOpenThisChannelErr,\"收款账户未开通当前支付渠道\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v2/mybank/queryMerchantBalance": {
      "get": {
        "tags": [
          "mybank"
        ],
        "summary": "@Deprecated 查询商户余额",
        "operationId": "QueryMerchantBalanceReq",
        "parameters": [
          {
            "name": "uid",
            "in": "query",
            "description": "收款账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "x-go-validate": "@char[1,32]"
            },
            "x-go-name": "UID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MerchantBalanceQueryResp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005025,CreaeTransReceiptUIDNotOpenThisChannelErr,\"收款账户未开通当前支付渠道\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v2/mybank/queryMiniAppDoSplit": {
      "post": {
        "tags": [
          "mybank"
        ],
        "summary": "云资金小程序支付分账结果查询",
        "operationId": "QueryMiniAppDoSplitReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryMiniAppDoSplitBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MiniAppQueryOrderShareRsp"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005077,QuerySplitStatusErr,\"云资金分账账单查询失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005004,AccountChannelNotFoundErr,\"收款账户未开通当前支付渠道\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v2/mybank/querySplitRefund": {
      "post": {
        "tags": [
          "mybank"
        ],
        "summary": "云资金小程序支付分账退回查询",
        "operationId": "QuerySplitRefundReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuerySplitRefundBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MiniAppQueryOrderShareRefundRsp"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005004,AccountChannelNotFoundErr,\"收款账户未开通当前支付渠道\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v2/mybank/register": {
      "post": {
        "tags": [
          "mybank"
        ],
        "summary": "@Deprecated 网商银行入驻申请, 由运营后台管理申请单数据，申请通过后走开户流程",
        "operationId": "RegisterReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterResp"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "put": {
        "tags": [
          "mybank"
        ],
        "summary": "@Deprecated 网商银行入驻修改",
        "operationId": "UpdateRegisterReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRegisterBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRegisterResp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005025,CreaeTransReceiptUIDNotOpenThisChannelErr,\"收款账户未开通当前支付渠道\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v2/mybank/registerQuery": {
      "get": {
        "tags": [
          "mybank"
        ],
        "summary": "@Deprecated 商户入驻结果查询",
        "operationId": "RegisterQueryReq",
        "parameters": [
          {
            "name": "orderNo",
            "in": "query",
            "description": "网商返回的申请单号",
            "required": true,
            "schema": {
              "type": "string",
              "x-go-validate": "@char[1,64]"
            },
            "x-go-name": "OrderNo"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegisterQueryResp"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v2/mybank/sendSmsCode": {
      "post": {
        "tags": [
          "mybank"
        ],
        "summary": "@Deprecated 短信验证码发送",
        "operationId": "SendSmsCodeReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendSmsCodeBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendSmsCodeResp"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v2/mybank/splitRefund": {
      "post": {
        "tags": [
          "mybank"
        ],
        "summary": "云资金小程序支付分账退回",
        "operationId": "SplitRefundReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SplitRefundBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MiniAppOrderShareRefundRsp"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005004,AccountChannelNotFoundErr,\"收款账户未开通当前支付渠道\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v2/mybank/uploadPhoto": {
      "post": {
        "tags": [
          "mybank"
        ],
        "summary": "@Deprecated 上传图片到网商银行，商户入驻图片上传",
        "operationId": "UploadPhotoReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadPhotoBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadPhotoResp"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v3/cpcnAccount": {
      "post": {
        "tags": [
          "cpcnAccount"
        ],
        "summary": "@Deprecated 开通中金账户,调用此接口前请确认已经开通收款账户,此接口将使用收款账户id作为中金账户userId",
        "operationId": "CreateCpcnAccountReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCpcnAccountBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCpcnAccountResp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005061,OpenCpcnAccountSubmitErr,\"开通账户，提交申请失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v3/cpcnAccount/bindCard": {
      "post": {
        "tags": [
          "cpcnAccount"
        ],
        "summary": "@Deprecated 开通中金账户-绑卡",
        "operationId": "BindCardReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BindCardBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BindCardResp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005063,CpcnSubmitBindCardErr,\"提交绑卡申请失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v3/cpcnAccount/bindCardConfirm": {
      "post": {
        "tags": [
          "cpcnAccount"
        ],
        "summary": "@Deprecated 开通中金账户-绑卡确认",
        "operationId": "BindCardConfirmReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BindCardConfirmBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BindCardConfirmResp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005065,ConfirmBindCardErr,\"确认绑卡失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n@httpError(404005023,BindCardByBindIdNotFoundErr,\"获取绑卡信息失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v3/cpcnAccount/calFee": {
      "post": {
        "tags": [
          "cpcnAccount"
        ],
        "summary": "@Deprecated CalFeeReq 中金账户-查询商户交易手续费",
        "operationId": "CalFeeReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CalFeeBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalFeeRsp"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005043,ReduceHandingFeeRuleNotFoundErr,\"手续费扣费规则未找到，请设置手续费扣除规则\",\"\",true);\n@httpError(403005048,CalSettlemntHandingFeeReduceErr,\"计算结算单手续费失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v3/cpcnAccount/createWhitelist": {
      "post": {
        "tags": [
          "cpcnAccount"
        ],
        "summary": "@Deprecated 中金账户创建异名白名单",
        "operationId": "CreateWhitelistReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWhitelistBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAccountWhitelist"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005101,WhiteListExitErr,\"白名单已存在\",\"\",true);\n@httpError(400005088,CreateWhitelistErr,\"添加白名单失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n@httpError(404005008,PaymentAccountNotFoundErr,\"付款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v3/cpcnAccount/deleteWhitelist": {
      "delete": {
        "tags": [
          "cpcnAccount"
        ],
        "summary": "@Deprecated 中金账户删除异名白名单",
        "operationId": "DeleteWhitelistReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteWhitelistBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005089,DeleteWhitelistErr,\"注销白名单失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n@httpError(404005008,PaymentAccountNotFoundErr,\"付款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v3/cpcnAccount/getWhitelist": {
      "get": {
        "tags": [
          "cpcnAccount"
        ],
        "summary": "@Deprecated 中金账户, 获取异名白名单列表",
        "operationId": "GetWhitelistReq",
        "parameters": [
          {
            "name": "paymentUID",
            "in": "query",
            "description": "付款账户id",
            "required": true,
            "schema": {
              "type": "string",
              "x-go-validate": "@char[0,32]"
            },
            "x-go-name": "PaymentUID"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/BaseSrvWhitelistStatus"
                },
                {
                  "default": "OPENED"
                }
              ]
            },
            "x-go-name": "Status"
          },
          {
            "name": "size",
            "in": "query",
            "description": "每页数据大小",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "default": "10",
              "x-go-validate": "@int32[1,100]"
            },
            "x-go-name": "Size"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "偏移量",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@int32[0,]"
            },
            "x-go-name": "Offset"
          },
          {
            "name": "receiveUID",
            "in": "query",
            "description": "收款账户ID",
            "required": true,
            "schema": {
              "type": "string",
              "x-go-validate": "@char[1,32]"
            },
            "x-go-name": "ReceiveUID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetWhitelistRsp"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n@httpError(404005008,PaymentAccountNotFoundErr,\"付款账户信息未找到\",\"\",true);\n@httpError(404005029,FindWhitelistErr,\"获取白名单列表失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v3/cpcnAccount/queryAccount": {
      "post": {
        "tags": [
          "cpcnAccount"
        ],
        "summary": "@Deprecated 中金账户-查询商户信息，余额，冻结余额 (已废弃勿使用)",
        "operationId": "QueryCpcnAccountReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryCpcnAccountBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryCpcnAccountResp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005064,QueryCpcnAccountErr,\"查询商户信息失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005043,ReduceHandingFeeRuleNotFoundErr,\"手续费扣费规则未找到，请设置手续费扣除规则\",\"\",true);\n@httpError(403005048,CalSettlemntHandingFeeReduceErr,\"计算结算单手续费失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v3/cpcnAccount/queryAccountList": {
      "post": {
        "tags": [
          "cpcnAccount"
        ],
        "summary": "@Deprecated 4692-用户账户明细查询",
        "operationId": "QueryCpcnAccountListReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryCpcnAccountListBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryCpcnAccountListResp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005064,QueryCpcnAccountErr,\"查询商户信息失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v3/cpcnAccount/queryBindCardAndAccount": {
      "post": {
        "tags": [
          "cpcnAccount"
        ],
        "summary": "@Deprecated 中金账户-绑卡/开户查询",
        "operationId": "QueryBindCardAndAccountReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryBindCardAndAccountBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryBindCardAndAccountResp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005062,QueryCpcnAccountAndBindCardErr,\"查询开户/绑卡,查询失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v3/cpcnAccount/queryGatewayMerchantInfo": {
      "get": {
        "tags": [
          "cpcnAccount"
        ],
        "summary": "@Deprecated 开通中金账户-查询支付网关商户进件",
        "operationId": "QueryGatewayMerchantInfoReq",
        "parameters": [
          {
            "name": "uID",
            "in": "query",
            "description": "绑定用户中心UID",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 1,
              "x-go-validate": "@string[1,32]"
            },
            "x-go-name": "UID"
          },
          {
            "name": "payWay",
            "in": "query",
            "description": "支付方式",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/BaseSrvMerchantPayWay"
                },
                {}
              ]
            },
            "x-go-name": "PayWay"
          },
          {
            "name": "payType",
            "in": "query",
            "description": "支付类别",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/BaseSrvMerchantPayType"
                },
                {}
              ]
            },
            "x-go-name": "PayType"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseAccountMerchant"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005066,NotFoundMerchantInfoErr,\"公众号支付，商户进件信息不存在\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v3/cpcnAccount/queryInstitutionPayAccount": {
      "post": {
        "tags": [
          "cpcnAccount"
        ],
        "summary": "@Deprecated 中金账户-查询机构支付账户余额",
        "operationId": "QueryInstitutionPayAccountReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryInstitutionPayAccountBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryInstitutionPayAccountResp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005082,QueryInstitutionPayAccountErr,\"查询机构支付账户信息失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v3/cpcnAccount/querySubmitMerchantInfo": {
      "post": {
        "tags": [
          "cpcnAccount"
        ],
        "summary": "@Deprecated 开通中金账户-查询商户进件",
        "operationId": "QuerySubmitMerchantInfoReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuerySubmitMerchantInfoBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuerySubmitMerchantInfoResp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005067,QueryCpcnAccountOpenChannelErr,\"商户进件查询失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v3/cpcnAccount/removebindCard": {
      "post": {
        "tags": [
          "cpcnAccount"
        ],
        "summary": "@Deprecated 开通中金账户-解绑",
        "operationId": "RemoveBindCardReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveBindCardBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RemoveBindCardResp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005073,CpcnSubmitRemoveBindCardErr,\"提交解除绑卡申请失败\",\"\",true);\n@httpError(400005085,BindCardRemoveErr,\"银行卡解除绑失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v3/cpcnAccount/searchWhitelist": {
      "get": {
        "tags": [
          "cpcnAccount"
        ],
        "summary": "@Deprecated 搜索白名单列表",
        "operationId": "SearchWhitelistReq",
        "parameters": [
          {
            "name": "receiveUID",
            "in": "query",
            "description": "收款账户ID",
            "schema": {
              "type": "string",
              "default": "",
              "x-go-validate": "@char[0,32]"
            },
            "x-go-name": "ReceiveUID"
          },
          {
            "name": "paymentUID",
            "in": "query",
            "description": "付款账户UID",
            "schema": {
              "type": "string",
              "default": "",
              "x-go-validate": "@char[0,32]"
            },
            "x-go-name": "PaymentUID"
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "卡号/持卡人名称",
            "schema": {
              "type": "string",
              "default": "",
              "x-go-validate": "@char[0,100]"
            },
            "x-go-name": "Keyword"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchWhitelistDataRsp"
                  }
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n@httpError(404005008,PaymentAccountNotFoundErr,\"付款账户信息未找到\",\"\",true);\n@httpError(404005029,FindWhitelistErr,\"获取白名单列表失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v3/cpcnAccount/submitMerchantInfo": {
      "post": {
        "tags": [
          "cpcnAccount"
        ],
        "summary": "@Deprecated 开通中金账户-商户进件",
        "operationId": "SubmitMerchantInfoReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitMerchantInfoBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005072,SubmitMerchantJsapiMiniAppAppIdRequiredErr,\"JSAPI,小程序进件APPID必填\",\"\",true);\n@httpError(400005066,CpcnAccountSubmitErr,\"商户进件失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005064,CreateAccountMerchantErr,\"创建商户进件信息失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v3/cpcnAccount/test": {
      "get": {
        "tags": [
          "cpcnAccount"
        ],
        "summary": "@Deprecated  开通中金账户-上传印象资料, 同一用户的影印件资料不能分开多次上传,必须一次全部上传",
        "operationId": "TestReq",
        "responses": {
          "204": {},
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v3/cpcnAccount/uploadPhoto": {
      "post": {
        "tags": [
          "cpcnAccount"
        ],
        "summary": "@Deprecated 开通中金账户-上传印象资料, 同一用户的影印件资料不能分开多次上传,必须一次全部上传",
        "operationId": "CreateCpcnAccountUploadPhotoReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCpcnAccountUploadBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCpcnAccountUploadPhotoResp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005060,CpcnAccountUploadFailedErr,\"上传影像资料失败\",\"\",true);\n@httpError(400005091,UploadFileTypeErr,\"图片格式错误，当前仅支持JPG格式图片\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v3/gathering": {
      "post": {
        "tags": [
          "gathering"
        ],
        "summary": "@Deprecated 创建并提交代付单, 流程：先从客户账户发起转账到系统账户,再用系统账户发起代付",
        "operationId": "CreateGatheringAndSubmitReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGatheringAndSubmitBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gathering"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005079,SubmitGatheringErr,\"提交代付申请失败\",\"\",true);\n@httpError(400005080,FindGatheringNotFoundErr,\"查询代付单失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005068,CreateGatheringErr,\"创建代付单失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005023,BindCardByBindIdNotFoundErr,\"获取绑卡信息失败\",\"\",true);\n@httpError(404005024,UpdateGatheringStatusErr,\"更新代付单状态失败\",\"\",true);\n@httpError(404005008,PaymentAccountNotFoundErr,\"付款账户信息未找到\",\"\",true);\n@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v3/gathering/{gatheringID}": {
      "get": {
        "tags": [
          "gathering"
        ],
        "summary": "@Deprecated 查询代付单",
        "operationId": "QueryGatheringReq",
        "parameters": [
          {
            "name": "gatheringID",
            "in": "path",
            "description": "代付单号",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-go-name": "GatheringID"
          },
          {
            "name": "withChannelStatus",
            "in": "query",
            "description": "是否实时查询渠道方代付状态",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {
                  "default": "FALSE"
                }
              ]
            },
            "x-go-name": "WithChannelStatus"
          },
          {
            "name": "withNotifyTask",
            "in": "query",
            "description": "是否拉起通知任务",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {
                  "default": "FALSE"
                }
              ]
            },
            "x-go-name": "WithNotifyTask"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Gathering"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005080,FindGatheringNotFoundErr,\"查询代付单失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005069,GatheringStatusQueryProcessingErr,\"代付单状态查询, 渠道方状态为处理中\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500005020,ComplateGatheringInternalError,\"完成代付单内部处理错误\",\"\",false);\n@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v4/transfer": {
      "get": {
        "tags": [
          "transfer"
        ],
        "summary": "查询转账单，结算状态",
        "operationId": "QueryTransferReq",
        "parameters": [
          {
            "name": "transID",
            "in": "query",
            "description": "转账交易单号",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "minimum": 1,
              "x-go-validate": "@uint64[1,]"
            },
            "x-go-name": "TransID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryTransferRsp"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005005,TransNotFoundErr,\"当前交易单未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "transfer"
        ],
        "summary": "创建转账单，并提交提现申请(结算)",
        "description": "注意： \u003cbr/\u003e\n1、中金渠道转账仅需要调用此接口，即可完成转账支付 \u003cbr/\u003e\n2、通联渠道转账，调用转账接口后还需调用确认转账接口确认支付",
        "operationId": "CreateTransferReq",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "default": ""
            },
            "x-go-name": "Authorization"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransferBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTransferRsp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005094,AccountRealNameErr,\"账户名称错误\",\"\",true);\n@httpError(400005093,AccountModeErr,\"账户模式错误\",\"\",true);\n@httpError(400005175,FeeSettThan30PercentErr,\"费用结算总额不得大于总收款金额的30%\",\"\",true);\n@httpError(400005086,SettlementBalanceNotEnoughErr,\"可结算余额不足，结算失败\",\"\",true);\n@httpError(400005145,SettlementErr,\"结算失败\",\"\",true);\n@httpError(400005130,TokenExpireErr,\"token已过期，请重新获取\",\"\",true);\n@httpError(400005126,ParseTokenErr,\"token解析失败\",\"\",false);\n@httpError(400005129,TokenErr,\"无效token\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005029,WechatAppletPayStatusQueryCompleteTransErr,\"微信小程序支付状态查询, 完成交易单失败\",\"\",true);\n@httpError(403005046,ReceiptAccountBalanceNotWorthErr,\"收款账户手续费不足，不能继续交易\",\"\",true);\n@httpError(403005043,ReduceHandingFeeRuleNotFoundErr,\"手续费扣费规则未找到，请设置手续费扣除规则\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005011,GetReceiptAccountBalanceErr,\"获取收款账户手续费余额失败\",\"\",true);\n@httpError(404005004,AccountChannelNotFoundErr,\"收款账户未开通当前支付渠道\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v4/transfer/confirm": {
      "post": {
        "tags": [
          "transfer"
        ],
        "summary": "ConfirmReq 确认转账，通联渠道适用",
        "operationId": "ConfirmReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005093,AccountModeErr,\"账户模式错误\",\"\",true);\n@httpError(400005146,BalancePayErr,\"余额支付失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005062,CompleteTransErr,\"完成交易单失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v4/transfer/doTransferFee": {
      "post": {
        "tags": [
          "transfer"
        ],
        "summary": "创建手续费转账单，仅用于坐扣时，转账，结算交易[内部接口业务端勿调用]",
        "operationId": "DoCreateTransferFeeReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DoCreateTransferFeeBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "403": {
            "description": "@httpError(403005000,ForbiddenErr,\"非法操作\",\"\",false);\n@httpError(403005029,WechatAppletPayStatusQueryCompleteTransErr,\"微信小程序支付状态查询, 完成交易单失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply": {
      "delete": {
        "tags": [
          "apply"
        ],
        "summary": "DelApplyReq 前端调用-删除申请单 \u003cGET /v5/apply/delete\u003e",
        "operationId": "DelApplyReq",
        "parameters": [
          {
            "name": "X-Product-Code",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ProductCode"
          },
          {
            "name": "X-Is-Main",
            "in": "header",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {}
              ]
            },
            "x-go-name": "IsMain"
          },
          {
            "name": "X-Company-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "x-go-name": "CompanyID"
          },
          {
            "name": "X-User-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "UserID"
          },
          {
            "name": "X-Parent-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ParentUserID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DelApplyBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005139,OnlyDelSelfApplyErr,\"仅可删除自己的申请单\",\"\",true);\n@httpError(400005140,DelApplyErr,\"删除申请单失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "401": {
            "description": "@httpError(401005000,Unauthorized,\"未授权\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005001,AccountNotFoundError,\"账户信息未找到\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "apply"
        ],
        "summary": "GetApplyQueryReq 前端调用-获取申请单详情 \u003cGET /v5/apply/detail\u003e",
        "operationId": "GetApplyQueryReq",
        "parameters": [
          {
            "name": "X-Company-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "x-go-name": "CompanyID"
          },
          {
            "name": "X-User-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "UserID"
          },
          {
            "name": "X-Parent-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ParentUserID"
          },
          {
            "name": "X-Product-Code",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ProductCode"
          },
          {
            "name": "X-Is-Main",
            "in": "header",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {}
              ]
            },
            "x-go-name": "IsMain"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetApplyQueryRsp"
                }
              }
            }
          },
          "401": {
            "description": "@httpError(401005000,Unauthorized,\"未授权\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005001,AccountNotFoundError,\"账户信息未找到\",\"\",false);\n@httpError(404005030,ProductNotFoundErr,\"开户产品未找到\",\"\",true);\n@httpError(404005031,ApplyNotFoundErr,\"开户申请单未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "apply"
        ],
        "summary": "CreateApplyReq \u003cPOST /v5/apply/create\u003e 前端-创建开户申请, 同时开通虚拟收款户， 主账户，子账户都为必填，主账户开户时，子账户和主账户一致",
        "description": "网商云资金-子账户不走申请单流程，需要业务端自行调用开户接口开通收款户",
        "operationId": "CreateApplyReq",
        "parameters": [
          {
            "name": "X-Company-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "x-go-name": "CompanyID"
          },
          {
            "name": "X-User-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "UserID"
          },
          {
            "name": "X-Parent-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ParentUserID"
          },
          {
            "name": "X-Product-Code",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ProductCode"
          },
          {
            "name": "X-Is-Main",
            "in": "header",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {}
              ]
            },
            "x-go-name": "IsMain"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApplyBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateApplyRsp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005106,NotSupportProviderErr,\"不支持的服务商\",\"\",true);\n@httpError(400005122,CloudFundsApplyRequiredErr,\"云资金小程序入驻开户信息必填\",\"\",true);\n@httpError(400005172,AccountModErr,\"账户模式错误，子账户账户模式必须同主账户保持一致\",\"\",true);\n@httpError(400005107,ApplyStatusCantUpdateErr,\"申请单当前状态不允许修改\",\"\",true);\n@httpError(400005151,AllInPayApplyRequiredErr,\"开户信息必填\",\"\",true);\n@httpError(400005142,CpcnAccountExitErr,\"账户已经提交开户申请, 请更换账户后重试\",\"\",true);\n@httpError(400005169,IDOcrOKErr,\"身份证认证已经通过，请勿重复上传\",\"\",true);\n@httpError(400005170,BizOcrOKErr,\"营业执照认证已经通过，请勿重复上传\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "401": {
            "description": "@httpError(401005000,Unauthorized,\"未授权\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005031,ApplyNotFoundErr,\"开户申请单未找到\",\"\",true);\n@httpError(404005044,ApplyAttNotFoundErr,\"开户申请单附件信息未找到\",\"\",true);\n@httpError(404005001,AccountNotFoundError,\"账户信息未找到\",\"\",false);\n@httpError(404005030,ProductNotFoundErr,\"开户产品未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "apply"
        ],
        "summary": "SubmitApplyReq 前端调用-提交开户申请 \u003cPUT /v5/apply/submit\u003e",
        "description": "中金为提交申请单至初审状态，网商为提交申请单至服务商审核状态\n网商云资金调用此接口后，可使用此接口返回的账户ID，获取注册二维码\n渠道为通联时：\n1、收银宝: 提交申请单成功，立即开启收银宝附件采集任务\n2、云商通: 收到企业会员信息审核通过通知，开启附件采集任务",
        "operationId": "SubmitApplyReq",
        "parameters": [
          {
            "name": "X-Company-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "x-go-name": "CompanyID"
          },
          {
            "name": "X-User-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "UserID"
          },
          {
            "name": "X-Parent-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ParentUserID"
          },
          {
            "name": "X-Product-Code",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ProductCode"
          },
          {
            "name": "X-Is-Main",
            "in": "header",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {}
              ]
            },
            "x-go-name": "IsMain"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitApplyBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmitApplyRsp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005108,SubmitApplyErr,\"提交申请单失败\",\"\",true);\n@httpError(400005106,NotSupportProviderErr,\"不支持的服务商\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "401": {
            "description": "@httpError(401005000,Unauthorized,\"未授权\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005030,ProductNotFoundErr,\"开户产品未找到\",\"\",true);\n@httpError(404005001,AccountNotFoundError,\"账户信息未找到\",\"\",false);\n@httpError(404005031,ApplyNotFoundErr,\"开户申请单未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/bindCard": {
      "post": {
        "tags": [
          "apply"
        ],
        "summary": "ApplyBindCardReq 绑卡 \u003cPOST /v5/apply/bindCard\u003e",
        "operationId": "ApplyBindCardReq",
        "parameters": [
          {
            "name": "X-Company-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "x-go-name": "CompanyID"
          },
          {
            "name": "X-User-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "UserID"
          },
          {
            "name": "X-Parent-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ParentUserID"
          },
          {
            "name": "X-Product-Code",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ProductCode"
          },
          {
            "name": "X-Is-Main",
            "in": "header",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {}
              ]
            },
            "x-go-name": "IsMain"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyBindCardBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplyBindCardRsp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005093,AccountModeErr,\"账户模式错误\",\"\",true);\n@httpError(400005063,CpcnSubmitBindCardErr,\"提交绑卡申请失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "401": {
            "description": "@httpError(401005000,Unauthorized,\"未授权\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005001,AccountNotFoundError,\"账户信息未找到\",\"\",false);\n@httpError(404005031,ApplyNotFoundErr,\"开户申请单未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/bindCardConfirm": {
      "post": {
        "tags": [
          "apply"
        ],
        "summary": "ApplyBindCardConfirmReq 绑卡确认 \u003cPOST /v5/apply/bindCardConfirm\u003e",
        "operationId": "ApplyBindCardConfirmReq",
        "parameters": [
          {
            "name": "X-Is-Main",
            "in": "header",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {}
              ]
            },
            "x-go-name": "IsMain"
          },
          {
            "name": "X-Company-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "x-go-name": "CompanyID"
          },
          {
            "name": "X-User-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "UserID"
          },
          {
            "name": "X-Parent-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ParentUserID"
          },
          {
            "name": "X-Product-Code",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ProductCode"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyBindCardConfirmBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplyBindCardConfirmResp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005065,ConfirmBindCardErr,\"确认绑卡失败\",\"\",true);\n@httpError(400005093,AccountModeErr,\"账户模式错误\",\"\",true);\n@httpError(400005149,ConfirmBindCardErrMaxNumErr,\"确认绑卡，超过验证错误次数，请重新发起绑卡\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "401": {
            "description": "@httpError(401005000,Unauthorized,\"未授权\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005030,ProductNotFoundErr,\"开户产品未找到\",\"\",true);\n@httpError(404005001,AccountNotFoundError,\"账户信息未找到\",\"\",false);\n@httpError(404005031,ApplyNotFoundErr,\"开户申请单未找到\",\"\",true);\n@httpError(404005023,BindCardByBindIdNotFoundErr,\"获取绑卡信息失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/cloudUpload": {
      "post": {
        "tags": [
          "apply"
        ],
        "summary": "CloudApplyUploadReq 通联上传图片,前端勿调用",
        "operationId": "CloudApplyUploadReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloudApplyUploadBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005060,CpcnAccountUploadFailedErr,\"上传影像资料失败\",\"\",true);\n@httpError(400005091,UploadFileTypeErr,\"图片格式错误，当前仅支持JPG格式图片\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005031,ApplyNotFoundErr,\"开户申请单未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/complianceReview": {
      "put": {
        "tags": [
          "apply"
        ],
        "summary": "ComplianceReviewReq 合规审核",
        "operationId": "ComplianceReviewReq",
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "",
              "x-go-validate": "@char[0,32]"
            },
            "x-go-name": "UserAgent"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComplianceReviewBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "403": {
            "description": "@httpError(403005000,ForbiddenErr,\"非法操作\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005031,ApplyNotFoundErr,\"开户申请单未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/confirmBindPhone": {
      "post": {
        "tags": [
          "apply"
        ],
        "summary": "ConfirmBindPhoneReq 确认绑定手机短信 \u003cPOST /v5/apply/confirmBindPhone\u003e",
        "operationId": "ConfirmBindPhoneReq",
        "parameters": [
          {
            "name": "X-Product-Code",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ProductCode"
          },
          {
            "name": "X-Is-Main",
            "in": "header",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {}
              ]
            },
            "x-go-name": "IsMain"
          },
          {
            "name": "X-Company-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "x-go-name": "CompanyID"
          },
          {
            "name": "X-User-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "UserID"
          },
          {
            "name": "X-Parent-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ParentUserID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmBindPhoneBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfirmBindPhoneRsp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005154,BindMobileErr,\"绑定手机失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "401": {
            "description": "@httpError(401005000,Unauthorized,\"未授权\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005041,ChannelNotSupportErr,\"通道不支持\",\"\",true);\n@httpError(404005031,ApplyNotFoundErr,\"开户申请单未找到\",\"\",true);\n@httpError(404005001,AccountNotFoundError,\"账户信息未找到\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/createApplyLog": {
      "post": {
        "tags": [
          "apply"
        ],
        "summary": "CreateApplyLogReq 运营后台-开户申请添加日志",
        "operationId": "CreateApplyLogReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApplyLogBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/delMerchantInfo": {
      "delete": {
        "tags": [
          "apply"
        ],
        "summary": "DelApplyMerchantInfoReq 前端调用-删除申请单的进件信息 \u003cDELETE /v5/apply/deleteMerchant\u003e",
        "operationId": "DelApplyMerchantInfoReq",
        "parameters": [
          {
            "name": "X-Company-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "x-go-name": "CompanyID"
          },
          {
            "name": "X-User-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "UserID"
          },
          {
            "name": "X-Parent-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ParentUserID"
          },
          {
            "name": "X-Product-Code",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ProductCode"
          },
          {
            "name": "X-Is-Main",
            "in": "header",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {}
              ]
            },
            "x-go-name": "IsMain"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DelApplyMerchantInfoBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005139,OnlyDelSelfApplyErr,\"仅可删除自己的申请单\",\"\",true);\n@httpError(400005144,DelApplyMerchantInfoErr,\"删除申请单进件信息失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "401": {
            "description": "@httpError(401005000,Unauthorized,\"未授权\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005001,AccountNotFoundError,\"账户信息未找到\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/detail": {
      "get": {
        "tags": [
          "apply"
        ],
        "summary": "GetApplyDetailReq 运营后台调用-获取申请单详情",
        "operationId": "GetApplyDetailReq",
        "parameters": [
          {
            "name": "applyID",
            "in": "query",
            "description": "申请单id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uint64",
              "minimum": 1,
              "x-go-validate": "@uint64[1,]"
            },
            "x-go-name": "ApplyID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetApplyDetailRsp"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005031,ApplyNotFoundErr,\"开户申请单未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/getBindCard": {
      "get": {
        "tags": [
          "apply"
        ],
        "summary": "GetBindCardInfoReq 前端调用-获取绑卡信息 \u003cGET /v5/apply/getBindCard\u003e",
        "operationId": "GetBindCardInfoReq",
        "parameters": [
          {
            "name": "X-User-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "UserID"
          },
          {
            "name": "X-Parent-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ParentUserID"
          },
          {
            "name": "X-Product-Code",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ProductCode"
          },
          {
            "name": "X-Is-Main",
            "in": "header",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {}
              ]
            },
            "x-go-name": "IsMain"
          },
          {
            "name": "X-Company-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "x-go-name": "CompanyID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBindCardInfoResp"
                }
              }
            }
          },
          "401": {
            "description": "@httpError(401005000,Unauthorized,\"未授权\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005001,AccountNotFoundError,\"账户信息未找到\",\"\",false);\n@httpError(404005023,BindCardByBindIdNotFoundErr,\"获取绑卡信息失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/getBindPhone": {
      "get": {
        "tags": [
          "apply"
        ],
        "summary": "GetBindPhoneReq 前端调用-获取绑定的手机号 \u003cGET /v5/apply/getBindPhone\u003e",
        "operationId": "GetBindPhoneReq",
        "parameters": [
          {
            "name": "X-Company-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "x-go-name": "CompanyID"
          },
          {
            "name": "X-User-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "UserID"
          },
          {
            "name": "X-Parent-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ParentUserID"
          },
          {
            "name": "X-Product-Code",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ProductCode"
          },
          {
            "name": "X-Is-Main",
            "in": "header",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {}
              ]
            },
            "x-go-name": "IsMain"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBindPhoneRsp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005037,AccountNotHaveExtErr,\"所属子账号无扩展信息\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "401": {
            "description": "@httpError(401005000,Unauthorized,\"未授权\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005001,AccountNotFoundError,\"账户信息未找到\",\"\",false);\n@httpError(404005041,ChannelNotSupportErr,\"通道不支持\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/getMerchantInfo": {
      "get": {
        "tags": [
          "apply"
        ],
        "summary": "ApplyGetMerchantInfoReq 获取商户进件信息 \u003cGET /v5/apply/getMerchantInfo\u003e",
        "operationId": "ApplyGetMerchantInfoReq",
        "parameters": [
          {
            "name": "X-Is-Main",
            "in": "header",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {}
              ]
            },
            "x-go-name": "IsMain"
          },
          {
            "name": "X-Company-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "x-go-name": "CompanyID"
          },
          {
            "name": "X-User-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "UserID"
          },
          {
            "name": "X-Parent-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ParentUserID"
          },
          {
            "name": "X-Product-Code",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ProductCode"
          },
          {
            "name": "applyId",
            "in": "query",
            "description": "申请单id, 若出现，将仅获取此申请单的商户进件信息, 否则获取此商户已经提交到中金的商户进件信息",
            "schema": {
              "type": "string",
              "format": "uint64",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@uint64[0,]"
            },
            "x-go-name": "ApplyID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplyGetMerchantInfoData"
                }
              }
            }
          },
          "401": {
            "description": "@httpError(401005000,Unauthorized,\"未授权\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005001,AccountNotFoundError,\"账户信息未找到\",\"\",false);\n@httpError(404005031,ApplyNotFoundErr,\"开户申请单未找到\",\"\",true);\n@httpError(404005037,ApplyMerchantInfoNotFoundErr,\"查询开户申请商户进件信息失败\",\"\",true);\n@httpError(404005038,MerchantInfoNotFoundErr,\"查询商户进件信息失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/getMerchantInfoList": {
      "get": {
        "tags": [
          "apply"
        ],
        "summary": "ApplyGetMerchantInfoListReq 运营后台调用-查询商户新进件/使用中的进件信息s",
        "operationId": "ApplyGetMerchantInfoListReq",
        "parameters": [
          {
            "name": "applyId",
            "in": "query",
            "description": "申请单id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uint64",
              "minimum": 1,
              "x-go-validate": "@uint64[1,]"
            },
            "x-go-name": "ApplyID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplyGetMerchantInfoListRsp"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005031,ApplyNotFoundErr,\"开户申请单未找到\",\"\",true);\n@httpError(404005037,ApplyMerchantInfoNotFoundErr,\"查询开户申请商户进件信息失败\",\"\",true);\n@httpError(404005038,MerchantInfoNotFoundErr,\"查询商户进件信息失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/lastApply": {
      "get": {
        "tags": [
          "apply"
        ],
        "summary": "GetLastApplyByAccountIdReq 运营后台调用-获取账户最新一条申请单",
        "operationId": "GetLastApplyByAccountIdReq",
        "parameters": [
          {
            "name": "accountID",
            "in": "query",
            "description": "账户id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uint64",
              "minimum": 1,
              "x-go-validate": "@uint64[1,]"
            },
            "x-go-name": "AccountID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLastApplyByAccountIdRsp"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005031,ApplyNotFoundErr,\"开户申请单未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/ocrReview": {
      "put": {
        "tags": [
          "apply"
        ],
        "summary": "OcrReviewReq OCR对比状态",
        "operationId": "OcrReviewReq",
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "",
              "x-go-validate": "@char[0,32]"
            },
            "x-go-name": "UserAgent"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OcrReviewBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "403": {
            "description": "@httpError(403005000,ForbiddenErr,\"非法操作\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005031,ApplyNotFoundErr,\"开户申请单未找到\",\"\",true);\n@httpError(404005001,AccountNotFoundError,\"账户信息未找到\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/open": {
      "put": {
        "tags": [
          "apply"
        ],
        "summary": "OpenApplyReq 运营后台-开通开户申请, 状态为入网签约成功后，方可执行开通操作",
        "operationId": "OpenApplyReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenApplyBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005136,OpenApplyFailedErr,\"开通开户申请失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005039,ApplyExitOpenedErr,\"商户开户申请单已开通\",\"\",true);\n@httpError(404005031,ApplyNotFoundErr,\"开户申请单未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/product": {
      "get": {
        "tags": [
          "apply"
        ],
        "summary": "GetProductReq 前端调用-获取开户产品配置详情 \u003cGET /v5/apply/product\u003e",
        "operationId": "GetProductReq",
        "parameters": [
          {
            "name": "X-User-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "UserID"
          },
          {
            "name": "X-Parent-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ParentUserID"
          },
          {
            "name": "X-Product-Code",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ProductCode"
          },
          {
            "name": "X-Is-Main",
            "in": "header",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {}
              ]
            },
            "x-go-name": "IsMain"
          },
          {
            "name": "X-Company-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "x-go-name": "CompanyID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductRsp"
                }
              }
            }
          },
          "401": {
            "description": "@httpError(401005000,Unauthorized,\"未授权\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005030,ProductNotFoundErr,\"开户产品未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/queryCloudAccount": {
      "get": {
        "tags": [
          "apply"
        ],
        "summary": "QueryCloudAccountReq 查询通联云商通会员信息",
        "operationId": "QueryCloudAccountReq",
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "description": "账户id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uint64",
              "minimum": 1,
              "x-go-validate": "@uint64[1,]"
            },
            "x-go-name": "AccountID"
          },
          {
            "name": "withChannelStatus",
            "in": "query",
            "description": "是否实时查询渠道方支付状态",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {
                  "default": "FALSE"
                }
              ]
            },
            "x-go-name": "WithChannelStatus"
          },
          {
            "name": "checkTime",
            "in": "query",
            "description": "时间",
            "schema": {
              "type": "string",
              "default": ""
            },
            "x-go-name": "CheckTime"
          },
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "",
              "x-go-validate": "@char[0,32]"
            },
            "x-go-name": "UserAgent"
          }
        ],
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005163,RealNameErr,\"持卡人信息认证失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005000,ForbiddenErr,\"非法操作\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/queryCloudsign": {
      "post": {
        "tags": [
          "apply"
        ],
        "summary": "QueryCloudSignApplyReq",
        "operationId": "QueryCloudSignApplyReq",
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "",
              "x-go-validate": "@char[0,32]"
            },
            "x-go-name": "UserAgent"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryCloudSignApplyBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryCloudSignApplyRsp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005132,ReviewApplyFailedErr,\"审核开户申请失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005000,ForbiddenErr,\"非法操作\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/queryVspAccount": {
      "get": {
        "tags": [
          "apply"
        ],
        "summary": "QueryVspAccountReq 查询通联收银宝会员信息",
        "operationId": "QueryVspAccountReq",
        "parameters": [
          {
            "name": "vspMID",
            "in": "query",
            "description": "云商通账户id",
            "schema": {
              "type": "string",
              "format": "uint64",
              "minimum": 0,
              "default": "",
              "x-go-validate": "@uint64[0,]"
            },
            "x-go-name": "VspMID"
          },
          {
            "name": "accountID",
            "in": "query",
            "description": "账户id",
            "schema": {
              "type": "string",
              "format": "uint64",
              "minimum": 0,
              "default": "",
              "x-go-validate": "@uint64[0,]"
            },
            "x-go-name": "AccountID"
          },
          {
            "name": "reqId",
            "in": "query",
            "description": "请求id",
            "schema": {
              "type": "string",
              "default": ""
            },
            "x-go-name": "ReqID"
          },
          {
            "name": "withChannelStatus",
            "in": "query",
            "description": "是否实时查询渠道方支付状态",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {
                  "default": "FALSE"
                }
              ]
            },
            "x-go-name": "WithChannelStatus"
          },
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "",
              "x-go-validate": "@char[0,32]"
            },
            "x-go-name": "UserAgent"
          }
        ],
        "responses": {
          "204": {},
          "403": {
            "description": "@httpError(403005000,ForbiddenErr,\"非法操作\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005042,VspUserStateErr,\"收银宝状态查询失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/queryVspsign": {
      "post": {
        "tags": [
          "apply"
        ],
        "summary": "QueryVspSignApplyReq 查询收银宝签约状态，勿调用",
        "operationId": "QueryVspSignApplyReq",
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "",
              "x-go-validate": "@char[0,32]"
            },
            "x-go-name": "UserAgent"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryVspSignApplyBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005132,ReviewApplyFailedErr,\"审核开户申请失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005000,ForbiddenErr,\"非法操作\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005031,ApplyNotFoundErr,\"开户申请单未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/removeBindCard": {
      "delete": {
        "tags": [
          "apply"
        ],
        "summary": "ApplyRemoveBindCardReq 解除绑定 \u003cDELETE /v5/apply/removeBindCard\u003e",
        "operationId": "ApplyRemoveBindCardReq",
        "parameters": [
          {
            "name": "X-Company-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "x-go-name": "CompanyID"
          },
          {
            "name": "X-User-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "UserID"
          },
          {
            "name": "X-Parent-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ParentUserID"
          },
          {
            "name": "X-Product-Code",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ProductCode"
          },
          {
            "name": "X-Is-Main",
            "in": "header",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {}
              ]
            },
            "x-go-name": "IsMain"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyRemoveBindCardBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplyRemoveBindCardRsp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005065,ConfirmBindCardErr,\"确认绑卡失败\",\"\",true);\n@httpError(400005085,BindCardRemoveErr,\"银行卡解除绑失败\",\"\",true);\n@httpError(400005073,CpcnSubmitRemoveBindCardErr,\"提交解除绑卡申请失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "401": {
            "description": "@httpError(401005000,Unauthorized,\"未授权\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005041,ChannelNotSupportErr,\"通道不支持\",\"\",true);\n@httpError(404005001,AccountNotFoundError,\"账户信息未找到\",\"\",false);\n@httpError(404005023,BindCardByBindIdNotFoundErr,\"获取绑卡信息失败\",\"\",true);\n@httpError(404005031,ApplyNotFoundErr,\"开户申请单未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/removeBindPhone": {
      "delete": {
        "tags": [
          "apply"
        ],
        "summary": "RemoveBindPhoneReq 解除绑定手机 \u003cDELETE /v5/apply/removeBindPhone\u003e",
        "operationId": "RemoveBindPhoneReq",
        "parameters": [
          {
            "name": "X-Is-Main",
            "in": "header",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {}
              ]
            },
            "x-go-name": "IsMain"
          },
          {
            "name": "X-Company-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "x-go-name": "CompanyID"
          },
          {
            "name": "X-User-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "UserID"
          },
          {
            "name": "X-Parent-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ParentUserID"
          },
          {
            "name": "X-Product-Code",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ProductCode"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveBindPhoneBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005154,BindMobileErr,\"绑定手机失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "401": {
            "description": "@httpError(401005000,Unauthorized,\"未授权\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005041,ChannelNotSupportErr,\"通道不支持\",\"\",true);\n@httpError(404005001,AccountNotFoundError,\"账户信息未找到\",\"\",false);\n@httpError(404005031,ApplyNotFoundErr,\"开户申请单未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/repair": {
      "put": {
        "tags": [
          "apply"
        ],
        "summary": "RepairApplyReq 通联合规审核，补录资料 \u003cPUT /v5/apply/repair\u003e 前端-合规审核补录资料",
        "operationId": "RepairApplyReq",
        "parameters": [
          {
            "name": "X-Company-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "x-go-name": "CompanyID"
          },
          {
            "name": "X-User-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "UserID"
          },
          {
            "name": "X-Parent-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ParentUserID"
          },
          {
            "name": "X-Product-Code",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ProductCode"
          },
          {
            "name": "X-Is-Main",
            "in": "header",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {}
              ]
            },
            "x-go-name": "IsMain"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RepairApplyRsp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005162,ApplyStatusCantErr,\"申请单当前状态不允许此操作\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "401": {
            "description": "@httpError(401005000,Unauthorized,\"未授权\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005001,AccountNotFoundError,\"账户信息未找到\",\"\",false);\n@httpError(404005041,ChannelNotSupportErr,\"通道不支持\",\"\",true);\n@httpError(404005030,ProductNotFoundErr,\"开户产品未找到\",\"\",true);\n@httpError(404005031,ApplyNotFoundErr,\"开户申请单未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/review": {
      "put": {
        "tags": [
          "apply"
        ],
        "summary": "ReviewApplyReq 运营后台-审核开户申请",
        "description": "FIRST_APPROVED 初审通过 (若产品配置跳过初审，则无此步骤):\n\t\tapplyStatus为FIRST_APPROVED初审通过时, 自动提交到服务商审核：初审通过 -\u003e 提交服务商审核 -\u003e 服务商审核中\nFIRST_REJECTED 初审拒绝 (若产品配置跳过初审，则无此步骤):\n\t\tapplyStatus为FIRST_REJECTED初审拒绝时, 回到申请单已创建：初审拒绝 -\u003e 申请单已创建\nOPENED: 开通\n     applyStatus为OPENED 开通",
        "operationId": "ReviewApplyReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewApplyBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005174,AccountContactPersonRequiredErr,\"商户负责人电话必填\",\"\",true);\n@httpError(400005152,AllInPayShowFeeRateRequiredErr,\"协议展示手续费费率必填\",\"\",true);\n@httpError(400005173,AccountModFeeModeRequiredErr,\"账户扣费模式为必填\",\"\",true);\n@httpError(400005064,QueryCpcnAccountErr,\"查询商户信息失败\",\"\",true);\n@httpError(400005132,ReviewApplyFailedErr,\"审核开户申请失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005030,ProductNotFoundErr,\"开户产品未找到\",\"\",true);\n@httpError(404005031,ApplyNotFoundErr,\"开户申请单未找到\",\"\",true);\n@httpError(404005023,BindCardByBindIdNotFoundErr,\"获取绑卡信息失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/search": {
      "get": {
        "tags": [
          "apply"
        ],
        "summary": "SearchApplysReq 运营后台-查询申请单列表",
        "operationId": "SearchApplysReq",
        "parameters": [
          {
            "name": "endTime",
            "in": "query",
            "description": "创建结束时间",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MySQLTimestamp"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "EndTime"
          },
          {
            "name": "status",
            "in": "query",
            "description": "申请单状态",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseSrvApplyStatus"
              },
              "default": ""
            },
            "x-go-name": "Status"
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "关键词",
            "schema": {
              "type": "string",
              "default": "",
              "x-go-validate": "@char[0,64]"
            },
            "x-go-name": "Keyword"
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "创建开始时间",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MySQLTimestamp"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "StartTime"
          },
          {
            "name": "size",
            "in": "query",
            "description": "每页数据大小",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "default": "10",
              "x-go-validate": "@int32[1,100]"
            },
            "x-go-name": "Size"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "平台",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/BaseSrvPlatform"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "Platform"
          },
          {
            "name": "provider",
            "in": "query",
            "description": "服务商",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/BaseSrvProviderType"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "Provider"
          },
          {
            "name": "merchantUserType",
            "in": "query",
            "description": "商户开户用户类型",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/BaseSrvMerchantUserType"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "MerchantUserType"
          },
          {
            "name": "productID",
            "in": "query",
            "description": "申请产品",
            "schema": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0,
              "default": "",
              "x-go-validate": "@uint64[0,]"
            },
            "x-go-name": "ProductID"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "偏移量",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@int32[0,]"
            },
            "x-go-name": "Offset"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchApplyRsp"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/sendPhoneSms": {
      "post": {
        "tags": [
          "apply"
        ],
        "summary": "SendPhoneSmsReq 发送绑定/解绑手机短信 \u003cPOST /v5/apply/sendPhoneSms\u003e",
        "operationId": "SendPhoneSmsReq",
        "parameters": [
          {
            "name": "X-Is-Main",
            "in": "header",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {}
              ]
            },
            "x-go-name": "IsMain"
          },
          {
            "name": "X-Company-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "x-go-name": "CompanyID"
          },
          {
            "name": "X-User-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "UserID"
          },
          {
            "name": "X-Parent-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ParentUserID"
          },
          {
            "name": "X-Product-Code",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ProductCode"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendPhoneSmsBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005153,SendSMSForBindMobileErr,\"发送绑定手机验证短信失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "401": {
            "description": "@httpError(401005000,Unauthorized,\"未授权\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005001,AccountNotFoundError,\"账户信息未找到\",\"\",false);\n@httpError(404005041,ChannelNotSupportErr,\"通道不支持\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/sign": {
      "get": {
        "tags": [
          "apply"
        ],
        "summary": "QuerySignApplyReq 前端调用-查询申请入网签约状态 \u003cGET /v5/apply/sign\u003e",
        "operationId": "QuerySignApplyReq",
        "parameters": [
          {
            "name": "X-User-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "UserID"
          },
          {
            "name": "X-Parent-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ParentUserID"
          },
          {
            "name": "X-Product-Code",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ProductCode"
          },
          {
            "name": "X-Is-Main",
            "in": "header",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {}
              ]
            },
            "x-go-name": "IsMain"
          },
          {
            "name": "X-Company-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "x-go-name": "CompanyID"
          },
          {
            "name": "applyID",
            "in": "query",
            "description": "申请单id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uint64",
              "minimum": 1,
              "x-go-validate": "@uint64[1,]"
            },
            "x-go-name": "ApplyID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuerySignApplyRsp"
                }
              }
            }
          },
          "401": {
            "description": "@httpError(401005000,Unauthorized,\"未授权\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005001,AccountNotFoundError,\"账户信息未找到\",\"\",false);\n@httpError(404005031,ApplyNotFoundErr,\"开户申请单未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "apply"
        ],
        "summary": "SignApplyReq 前端调用-开户申请入网签约, 仅支持企业、个体户 \u003cPOST /v5/apply/sign\u003e",
        "operationId": "SignApplyReq",
        "parameters": [
          {
            "name": "X-Company-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "x-go-name": "CompanyID"
          },
          {
            "name": "X-User-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "UserID"
          },
          {
            "name": "X-Parent-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ParentUserID"
          },
          {
            "name": "X-Product-Code",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ProductCode"
          },
          {
            "name": "X-Is-Main",
            "in": "header",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {}
              ]
            },
            "x-go-name": "IsMain"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignApplyBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignApplyRsp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005158,ApplySignedErr,\"已签约完成\",\"\",true);\n@httpError(400005160,NotSupportSignErr,\"个人不支持签约\",\"\",true);\n@httpError(400005141,ApplySignErr,\"签约申请提交失败\",\"\",true);\n@httpError(400005106,NotSupportProviderErr,\"不支持的服务商\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "401": {
            "description": "@httpError(401005000,Unauthorized,\"未授权\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005001,AccountNotFoundError,\"账户信息未找到\",\"\",false);\n@httpError(404005031,ApplyNotFoundErr,\"开户申请单未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/submitMerchant": {
      "put": {
        "tags": [
          "apply"
        ],
        "summary": "SubmitApplyMerchantInfoReq 运营后台调用-提交开户申请商户进件信息",
        "operationId": "SubmitApplyMerchantInfoReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitApplyMerchantInfoBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005148,ReSubmitMerchantOnlyOneErr,\"修改进件信息每次只能修改一条\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005031,ApplyNotFoundErr,\"开户申请单未找到\",\"\",true);\n@httpError(404005030,ProductNotFoundErr,\"开户产品未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/updateMerchantInfo": {
      "put": {
        "tags": [
          "apply"
        ],
        "summary": "ApplyUpdateMerchantInfoReq 更新商户进件信息 \u003cPUT /v5/apply/updateMerchantInfo\u003e",
        "operationId": "ApplyUpdateMerchantInfoReq",
        "parameters": [
          {
            "name": "X-Company-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "x-go-name": "CompanyID"
          },
          {
            "name": "X-User-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "UserID"
          },
          {
            "name": "X-Parent-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ParentUserID"
          },
          {
            "name": "X-Product-Code",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ProductCode"
          },
          {
            "name": "X-Is-Main",
            "in": "header",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {}
              ]
            },
            "x-go-name": "IsMain"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyUpdateMerchantInfoBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005134,UpdateApplyMerchantInfoErr,\"更新商户进件信息失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "401": {
            "description": "@httpError(401005000,Unauthorized,\"未授权\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005031,ApplyNotFoundErr,\"开户申请单未找到\",\"\",true);\n@httpError(404005001,AccountNotFoundError,\"账户信息未找到\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/updateMerchantInfoForBack": {
      "put": {
        "tags": [
          "apply"
        ],
        "summary": "ApplyUpdateMerchantInfoForBackReq 更新商户进件信息",
        "operationId": "ApplyUpdateMerchantInfoForBackReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyUpdateMerchantInfoForBackBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005134,UpdateApplyMerchantInfoErr,\"更新商户进件信息失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005031,ApplyNotFoundErr,\"开户申请单未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/updateSort": {
      "put": {
        "tags": [
          "apply"
        ],
        "summary": "UpdateApplySortReq 运营后台调用-更新开户申请排序",
        "operationId": "UpdateApplySortReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApplySortBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/upload": {
      "post": {
        "tags": [
          "apply"
        ],
        "summary": "ApplyUploadReq 上传图片, 仅中金使用 \u003cPOST /v5/apply/upload\u003e",
        "operationId": "ApplyUploadReq",
        "parameters": [
          {
            "name": "X-Company-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "x-go-name": "CompanyID"
          },
          {
            "name": "X-User-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "UserID"
          },
          {
            "name": "X-Parent-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ParentUserID"
          },
          {
            "name": "X-Product-Code",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ProductCode"
          },
          {
            "name": "X-Is-Main",
            "in": "header",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {}
              ]
            },
            "x-go-name": "IsMain"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyUploadBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplyUploadRsp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005091,UploadFileTypeErr,\"图片格式错误，当前仅支持JPG格式图片\",\"\",true);\n@httpError(400005060,CpcnAccountUploadFailedErr,\"上传影像资料失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "401": {
            "description": "@httpError(401005000,Unauthorized,\"未授权\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005001,AccountNotFoundError,\"账户信息未找到\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000001,UnknownError,\"内部未明确定义的错误\",\"\",false);\n@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/apply/vspUpload": {
      "post": {
        "tags": [
          "apply"
        ],
        "summary": "VspApplyUploadReq 通联收银宝上传图片,前端勿调用",
        "operationId": "VspApplyUploadReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VspApplyUploadBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005060,CpcnAccountUploadFailedErr,\"上传影像资料失败\",\"\",true);\n@httpError(400005091,UploadFileTypeErr,\"图片格式错误，当前仅支持JPG格式图片\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005031,ApplyNotFoundErr,\"开户申请单未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v5/cloudAccount": {
      "get": {
        "tags": [
          "cloud_register"
        ],
        "summary": "AccountRegisterQueryReq 前端调用-网商云资金-小程序商户入驻结果查询, 主账户，子账户必须，从token中获取",
        "operationId": "AccountRegisterQueryReq",
        "parameters": [
          {
            "name": "X-Company-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "x-go-name": "CompanyID"
          },
          {
            "name": "X-User-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "UserID"
          },
          {
            "name": "X-Parent-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ParentUserID"
          },
          {
            "name": "X-Product-Code",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ProductCode"
          },
          {
            "name": "X-Is-Main",
            "in": "header",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {}
              ]
            },
            "x-go-name": "IsMain"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountRegisterQueryRsp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005025,CreaeTransReceiptUIDNotOpenThisChannelErr,\"收款账户未开通当前支付渠道\",\"\",true);\n@httpError(400005111,CloudFundsRegisterQueryStatusErr,\"云资金小程序入驻结果查询失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "401": {
            "description": "@httpError(401005000,Unauthorized,\"未授权\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005001,AccountNotFoundError,\"账户信息未找到\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "cloud_register"
        ],
        "summary": "MiniAppAccountRegisterReq 前端调用-网商云资金-账户 小程序账户注册，主账户，子账户必须，从token中获取",
        "description": "### 自然人支付宝测试账号1如下\n\n\u003e userid：2088402102469754 \u003cbr/\u003e\n\u003e 手机号：15943963926 \u003cbr/\u003e\n\u003e 身份证证件号码：652101197009187876 \u003cbr/\u003e\n\u003e 用户名：钟亚青 \u003cbr/\u003e\n\u003e 支付宝绑定银行卡：6212260508002821553 \u003cbr/\u003e\n\n### 自然人支付宝测试账号2如下\n\n\u003e userid：2088402102470501 \u003cbr/\u003e\n\u003e 手机号：13567538020 \u003cbr/\u003e\n\u003e 身份证证件号码：542625197302245302 \u003cbr/\u003e\n\u003e 用户名：戴丽园 \u003cbr/\u003e\n\u003e 支付宝绑定银行卡：6212264100011335373 \u003cbr/\u003e\n\n### 自然人支付宝测试账号3如下\n\u003e userid：2088402148374065 \u003cbr/\u003e\n\u003e 手机号：13541661726 \u003cbr/\u003e\n\u003e 身份证证件号码：813736192912160283 \u003cbr/\u003e\n\u003e 用户名：许雄伯 \u003cbr/\u003e\n\u003e 支付宝绑定银行卡：6212264100011336233 \u003cbr/\u003e\n\n### 企业\n\u003e 负责人（经办人）手机号：13592401795 \u003cbr/\u003e\n\u003e 法定代表人证件号码：610630196102024110 \u003cbr/\u003e\n\u003e 法定代表人姓名：贾维斯 \u003cbr/\u003e\n\u003e\n\u003e 公司名称：马斯克科技公司 \u003cbr/\u003e\n\u003e 企业统一信用代码证：3300000682208700XX \u003cbr/\u003e\n\u003e 银行卡：6212261202002415210 \u003cbr/\u003e\n\u003e 用户ID：2088402535531167 \u003cbr/\u003e\n\n### 开户信息\n\u003e IsvOrgId: 202210000000000001486  \u003cbr/\u003e\n\u003e AppID: 2019062700000456 \u003cbr/\u003e\n\u003e 私钥:  \u003cbr/\u003e\n\u003e -----BEGIN PRIVATE KEY----- \u003cbr/\u003e\n\u003e MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC+DjjKuBYNScrh \u003cbr/\u003e\n\u003e p7/+yf/vqsZbyWAMuvLZ76rv9wLA3XTCY1Cb3xxm7xvux/OzhzDlQdURRrEhjjsV \u003cbr/\u003e\n\u003e dP9Bx0Ig5yfGyDec/4Z50dcRgqsu17QU/m2WXHEwFd4yBAGomWXzy/q7+8JJ9YoT \u003cbr/\u003e\n\u003e raSDfKhfV3qWx7/vBzqk0QNzZ3AgFwSMiP5Azz8K2GhkHWxbVLlji9+/oRL5yj13 \u003cbr/\u003e\n\u003e a8P9bbtIrdUB/PZ+Fk3klxhBL9Vxii0YmX96nwVuJgkmgyiRCwmLhIQBFdL7H63c \u003cbr/\u003e\n\u003e NgUi9UoCsFC6lV4ErEcHCUFsLqggukKPmTlr4KSnFvf9bZoIYC9I7XBWcM+KDGTS \u003cbr/\u003e\n\u003e dxeGpXbvAgMBAAECggEABIJr4It7oncUxEPpr071rqcbq8PcbpDlADzKjoUK4K6g \u003cbr/\u003e\n\u003e fZhDql8h2mNkA0dlReY4R8hHGPDXdRdd2YV8JQBoVkWF0RahEy2Q8EUFWFoEW8ks \u003cbr/\u003e\n\u003e ca8TxJSO7vgl3IPx0iFJpP47BcjUdFLKIutk0uXbTN/Tfc5hhHdkcdKvxUY4B9rZ \u003cbr/\u003e\n\u003e YSNI5+YdIGjJj/nBWNGBndIqKnLfs2AhpCqPkADC3xo73fxiM/77TPB7RiaFeK9j \u003cbr/\u003e\n\u003e k80kLAwaZeOKArCIY7YSpnyhqvPi4kO9vxTeGGHONhN+mfAsMG94AY83vZ6qhUiZ \u003cbr/\u003e\n\u003e ZuofslbUt7beOw2PTmzGi8jXDI8k6WVHKqNnwYt/+QKBgQD/fT8sG3oJyRpvfhc/ \u003cbr/\u003e\n\u003e gPM+ovYGL3MH+6B3Gtq32K+ZyAmtoHnfLFkaa1bOLUEklvr2xViFTU4NlUyEWNE1 \u003cbr/\u003e\n\u003e jGW1JFC9AhU3JUnVKmiG/BSURH8neYsNUQ/yKOmjRyTvQmELp2Qb7h46ZWM6kWOz \u003cbr/\u003e\n\u003e rJtiXMvkoAjWwgO/4YOxEazJdQKBgQC+b3zZW/yh/cOTCAzfN8AR/luSq9TJ7D8C \u003cbr/\u003e\n\u003e ZxHVOpXRL3YP950SUWEfuyOby4ddhFDwU3b6+BhtOtClMrBKO2Q9wbPVjVD5plGl \u003cbr/\u003e\n\u003e hhMaLiNJmbFL63hEazrMOE3UVbOY8EYBJyyeUguqiYyRJkUbiVubRsdbFLUbGai8 \u003cbr/\u003e\n\u003e qWg5BvTOUwKBgEFOUoeDvn4h2ZAGOwsQexzXquuJ1W2E9E99ncrAqKI2b8Lh8kUJ \u003cbr/\u003e\n\u003e oP0P0vCAwNYJgbzyVN4+FGWEdDqgOVnmuVjEH58wmRuvfF/wpydZ6Ci+GYKNnu2Y \u003cbr/\u003e\n\u003e eur7aj1CQj6mSQghkYVSKIfkwqiF4WZcCJvr/HJENf4vOaYijvcD/ZbBAoGBAKoZ \u003cbr/\u003e\n\u003e FyFnIq7m5cvtAuJW/76SveSyiuyZkmZo/erB25PvmrsEZ043VlNrapD8KLsFNu6S \u003cbr/\u003e\n\u003e /tGIzPiz8i28qu6DQjRPUnxLL6ruPjtlGKbn0ykomM7BUrl6Nhi3qf0hV7wh0cWx \u003cbr/\u003e\n\u003e 4g7AJh97oQz9a/j+pc56WBMo2eOM9cUeZDOb3Qp1AoGAQwB8ndcxkt4UCfC+87Rp \u003cbr/\u003e\n\u003e y5yrxVuaVKDZfTIy4qpuLrHRqCIHvAl41EnJTE8MPIemXhdTmPeLmGWe7KjGDo0F \u003cbr/\u003e\n\u003e 0GPRqBMVKrLrCnM52FUx/Wp5P2h8ZVXvm7TR5/b3jhCb7qC0gjey+HunyEn78H9V \u003cbr/\u003e\n\u003e xty4XzcSlF0zu8uVUSgwIJ8= \u003cbr/\u003e\n\u003e -----END PRIVATE KEY----- \u003cbr/\u003e\n\u003e 公钥： \u003cbr/\u003e\n\u003e -----BEGIN PUBLIC KEY----- \u003cbr/\u003e\n\u003e MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvg44yrgWDUnK4ae//sn/ \u003cbr/\u003e\n\u003e 76rGW8lgDLry2e+q7/cCwN10wmNQm98cZu8b7sfzs4cw5UHVEUaxIY47FXT/QcdC \u003cbr/\u003e\n\u003e IOcnxsg3nP+GedHXEYKrLte0FP5tllxxMBXeMgQBqJll88v6u/vCSfWKE62kg3yo \u003cbr/\u003e\n\u003e X1d6lse/7wc6pNEDc2dwIBcEjIj+QM8/CthoZB1sW1S5Y4vfv6ES+co9d2vD/W27 \u003cbr/\u003e\n\u003e SK3VAfz2fhZN5JcYQS/VcYotGJl/ep8FbiYJJoMokQsJi4SEARXS+x+t3DYFIvVK \u003cbr/\u003e\n\u003e ArBQupVeBKxHBwlBbC6oILpCj5k5a+Ckpxb3/W2aCGAvSO1wVnDPigxk0ncXhqV2 \u003cbr/\u003e\n\u003e 7wIDAQAB \u003cbr/\u003e\n\u003e -----END PUBLIC KEY----- \u003cbr/\u003e",
        "operationId": "MiniAppAccountRegisterReq",
        "parameters": [
          {
            "name": "X-Product-Code",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ProductCode"
          },
          {
            "name": "X-Is-Main",
            "in": "header",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {}
              ]
            },
            "x-go-name": "IsMain"
          },
          {
            "name": "X-Company-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "x-go-name": "CompanyID"
          },
          {
            "name": "X-User-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "UserID"
          },
          {
            "name": "X-Parent-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ParentUserID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MiniAppAccountRegisterBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MiniAppAccountRegisterRsp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005109,TestEnvUIDRequiredErr,\"测试环境网商UID必填\",\"\",true);\n@httpError(400005025,CreaeTransReceiptUIDNotOpenThisChannelErr,\"收款账户未开通当前支付渠道\",\"\",true);\n@httpError(400005110,CloudFundsRegisterCodeErr,\"云资金小程序获取注册二维码失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "401": {
            "description": "@httpError(401005000,Unauthorized,\"未授权\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005001,AccountNotFoundError,\"账户信息未找到\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "cloud_register"
        ],
        "summary": "MiniAppAccountLoginReq 前端调用-网商云资金-账户 小程序账户登陆",
        "operationId": "MiniAppAccountLoginReq",
        "parameters": [
          {
            "name": "X-Is-Main",
            "in": "header",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {}
              ]
            },
            "x-go-name": "IsMain"
          },
          {
            "name": "X-Company-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "x-go-name": "CompanyID"
          },
          {
            "name": "X-User-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "UserID"
          },
          {
            "name": "X-Parent-ID",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ParentUserID"
          },
          {
            "name": "X-Product-Code",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-go-name": "ProductCode"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MiniAppAccountLoginBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MiniAppAccountLoginRsp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005109,TestEnvUIDRequiredErr,\"测试环境网商UID必填\",\"\",true);\n@httpError(400005025,CreaeTransReceiptUIDNotOpenThisChannelErr,\"收款账户未开通当前支付渠道\",\"\",true);\n@httpError(400005123,CloudFundsLoginCodeErr,\"云资金小程序获取登陆二维码失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "401": {
            "description": "@httpError(401005000,Unauthorized,\"未授权\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005001,AccountNotFoundError,\"账户信息未找到\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v6/statement/search": {
      "get": {
        "tags": [
          "statement"
        ],
        "summary": "查询账户流水",
        "operationId": "SearchStatementReq",
        "parameters": [
          {
            "name": "startCreateTime",
            "in": "query",
            "description": "创建开始时间",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MySQLTimestamp"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "StartCreateTime"
          },
          {
            "name": "endCreateTime",
            "in": "query",
            "description": "创建结束时间",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MySQLTimestamp"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "EndCreateTime"
          },
          {
            "name": "mainUID",
            "in": "query",
            "description": "主账户UID",
            "required": true,
            "schema": {
              "type": "string",
              "x-go-validate": "@char[1,32]"
            },
            "x-go-name": "MainUID"
          },
          {
            "name": "uID",
            "in": "query",
            "description": "账户UID, 多个逗号分隔",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": "",
              "x-go-validate": "@array[0,100]"
            },
            "x-go-name": "UID"
          },
          {
            "name": "tradeNo",
            "in": "query",
            "description": "关联业务单号, 支付为交易单号，提现为结算单号",
            "schema": {
              "type": "string",
              "maxLength": 32,
              "minLength": 0,
              "default": "",
              "x-go-validate": "@string[0,32]"
            },
            "x-go-name": "TradeNo"
          },
          {
            "name": "transType",
            "in": "query",
            "description": "交易类型",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseSrvTransType"
              },
              "default": ""
            },
            "x-go-name": "TransType"
          },
          {
            "name": "size",
            "in": "query",
            "description": "每页数据大小",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "default": "10",
              "x-go-validate": "@int32[1,100]"
            },
            "x-go-name": "Size"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "偏移量",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@int32[0,]"
            },
            "x-go-name": "Offset"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchStatementRsp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005103,SearchStatementErr,\"查询账户流水失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005014,ReceiptMainAccountNotFoundErr,\"收款账户主账户未找到\",\"\",true);\n@httpError(404005012,SubAccountNotFoundErr,\"该账户尚未开通子账户\",\"\",true);\n@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v7/auth/checkSms": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "CheckSmsReq 验证公司财务手机号验证短信获取token",
        "operationId": "CheckSmsReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CheckSmsBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CheckSmsRsp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005128,CheckFinanceMobileErr,\"验证财务手机失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005033,CompanyNotFoundErr,\"公司信息未找到\",\"\",true);\n@httpError(404005036,FinanceMobileNotFoundErr,\"未绑定财务手机号\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v7/auth/sendCheckSms": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "SendCheckSmsReq 发送公司财务手机号验证短信",
        "operationId": "SendCheckSmsReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendCheckSmsBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005127,SendCheckFinanceMobileErr,\"发送财务手机验证短信失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005033,CompanyNotFoundErr,\"公司信息未找到\",\"\",true);\n@httpError(404005036,FinanceMobileNotFoundErr,\"未绑定财务手机号\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v7/company": {
      "get": {
        "tags": [
          "company"
        ],
        "summary": "获取公司信息",
        "operationId": "GetCompanyReq",
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "公司id",
            "schema": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@uint64[0,]"
            },
            "x-go-name": "CompanyID"
          },
          {
            "name": "buCompanyId",
            "in": "query",
            "description": "业务方公司id, 和支付服务CompanyID二选一",
            "schema": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@uint64[0,]"
            },
            "x-go-name": "BUCompanyID"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "平台，BUCompanyID不为空时必填",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/BaseSrvAccountPlatformType"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "Platform"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005033,CompanyNotFoundErr,\"公司信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "company"
        ],
        "summary": "CreateCompanyReq 创建公司, 调用开户接口（POST service-payment-gateway/v0/account） 时若传递companyID 会自动创建公司信息",
        "operationId": "CreateCompanyReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompanyBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005124,CreateCompanyErr,\"创建公司失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v7/company/confirmRemoveBindSms": {
      "post": {
        "tags": [
          "company"
        ],
        "summary": "ConfirmRemoveBindSmsReq 确认解除财务手机号绑定",
        "operationId": "ConfirmRemoveBindSmsReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmRemoveBindSmsBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005125,BindMobileVerifCodeErr,\"验证码错误\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005033,CompanyNotFoundErr,\"公司信息未找到\",\"\",true);\n@httpError(404005034,CompanyBindMobileErr,\"绑定财务手机号失败\",\"\",true);\n@httpError(404005035,RemoveBindMobileErr,\"移除财务手机号失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v7/company/reBind": {
      "post": {
        "tags": [
          "company"
        ],
        "summary": "ReBindReq 确认解除旧财务手机号，绑定新手机号",
        "operationId": "ReBindReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReBindBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReBindRsp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005125,BindMobileVerifCodeErr,\"验证码错误\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005034,CompanyBindMobileErr,\"绑定财务手机号失败\",\"\",true);\n@httpError(404005033,CompanyNotFoundErr,\"公司信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v7/company/sendBindSms": {
      "post": {
        "tags": [
          "company"
        ],
        "summary": "SendBindSmsReq 发送公司财务手机号绑定短信",
        "operationId": "SendBindSmsReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendBindSmsBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "404": {
            "description": "@httpError(404005033,CompanyNotFoundErr,\"公司信息未找到\",\"\",true);\n@httpError(404005034,CompanyBindMobileErr,\"绑定财务手机号失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v7/company/sendRemoveBindSms": {
      "post": {
        "tags": [
          "company"
        ],
        "summary": "RemoveBindSmsReq 解除公司财务手机号绑定, 解绑短信验证码5分钟内有效",
        "operationId": "SendRemoveBindSmsReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendRemoveBindSmsBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "404": {
            "description": "@httpError(404005033,CompanyNotFoundErr,\"公司信息未找到\",\"\",true);\n@httpError(404005034,CompanyBindMobileErr,\"绑定财务手机号失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v7/company/verifyBindSms": {
      "post": {
        "tags": [
          "company"
        ],
        "summary": "VerifyBindSmsReq 验证公司财务手机号绑定短信",
        "operationId": "VerifyBindSmsReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyBindSmsBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VerifyBindSmsRsp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005125,BindMobileVerifCodeErr,\"验证码错误\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005034,CompanyBindMobileErr,\"绑定财务手机号失败\",\"\",true);\n@httpError(404005033,CompanyNotFoundErr,\"公司信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v7/electronic": {
      "post": {
        "tags": [
          "electronic"
        ],
        "summary": "@Deprecated CreateElectronicReq 电子回单申请",
        "operationId": "CreateElectronicReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateElectronicBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005176,TransCantApplyElectronicErr,\"当前交易单状态不能申请单子回单\",\"\",true);\n@httpError(400005177,CreateElectronicErr,\"创建电子回单失败\",\"\",true);\n@httpError(400005178,ElectronicApplyErr,\"电子回单申请失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005004,AccountChannelNotFoundErr,\"收款账户未开通当前支付渠道\",\"\",false);\n@httpError(404005041,ChannelNotSupportErr,\"通道不支持\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v7/electronic/{eID}": {
      "get": {
        "tags": [
          "electronic"
        ],
        "summary": "@Deprecated  电子回单查询",
        "operationId": "QueryElectronicReq",
        "parameters": [
          {
            "name": "withChannelStatus",
            "in": "query",
            "description": "是否实时查询渠道方支付状态",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {
                  "default": "FALSE"
                }
              ]
            },
            "x-go-name": "WithChannelStatus"
          },
          {
            "name": "eID",
            "in": "path",
            "description": "电子回单id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "minimum": 1,
              "x-go-validate": "@uint64[1,]"
            },
            "x-go-name": "EID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Electronic"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005004,AccountChannelNotFoundErr,\"收款账户未开通当前支付渠道\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/service-payment-gateway/v7/funds/createBill": {
      "post": {
        "tags": [
          "cloud_funds"
        ],
        "summary": "CreateBillReq 网商云资金-补单创单接口",
        "operationId": "CreateBillReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBillBody"
              }
            }
          }
        },
        "responses": {
          "204": {}
        }
      }
    },
    "/service-payment-gateway/v7/funds/login": {
      "post": {
        "tags": [
          "cloud_funds"
        ],
        "summary": "运营后台-网商云资金-小程序账户登陆",
        "operationId": "MiniAppLoginReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MiniAppLoginBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MiniAppLoginRsp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005109,TestEnvUIDRequiredErr,\"测试环境网商UID必填\",\"\",true);\n@httpError(400005025,CreaeTransReceiptUIDNotOpenThisChannelErr,\"收款账户未开通当前支付渠道\",\"\",true);\n@httpError(400005110,CloudFundsRegisterCodeErr,\"云资金小程序获取注册二维码失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005001,AccountNotFoundError,\"账户信息未找到\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v7/funds/merchantBalance": {
      "post": {
        "tags": [
          "cloud_funds"
        ],
        "summary": "运营后台-网商云资金-商户余额查询接口",
        "operationId": "MiniAppMerchantBalanceReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MiniAppMerchantBalanceBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MerchantBalanceQueryResp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005115,MyBankMerchantNotOpenErr,\"网商商户暂未开通\",\"\",true);\n@httpError(400005121,MyBankMerchantBalanceErr,\"网商云资金商户余额查询失败\",\"\",true);\n@httpError(400005025,CreaeTransReceiptUIDNotOpenThisChannelErr,\"收款账户未开通当前支付渠道\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005001,AccountNotFoundError,\"账户信息未找到\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v7/funds/merchantDetail": {
      "post": {
        "tags": [
          "cloud_funds"
        ],
        "summary": "运营后台-网商云资金-小程序商户账户详情",
        "operationId": "MiniAppMerchantDetailReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MiniAppDetailBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MiniAppMerchantQueryRsp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005115,MyBankMerchantNotOpenErr,\"网商商户暂未开通\",\"\",true);\n@httpError(400005025,CreaeTransReceiptUIDNotOpenThisChannelErr,\"收款账户未开通当前支付渠道\",\"\",true);\n@httpError(400005116,MyBankMerchantDetailErr,\"网商云资金商户详情查询失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005001,AccountNotFoundError,\"账户信息未找到\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v7/funds/merchantSceneBalance": {
      "post": {
        "tags": [
          "cloud_funds"
        ],
        "summary": "运营后台-网商云资金-账户场景余额查询",
        "operationId": "MiniAppMerchantSceneBalanceReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MiniAppMerchantSceneBalanceBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MiniAppMerchantSceneBalanceQueryRsp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005121,MyBankMerchantBalanceErr,\"网商云资金商户余额查询失败\",\"\",true);\n@httpError(400005115,MyBankMerchantNotOpenErr,\"网商商户暂未开通\",\"\",true);\n@httpError(400005025,CreaeTransReceiptUIDNotOpenThisChannelErr,\"收款账户未开通当前支付渠道\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005001,AccountNotFoundError,\"账户信息未找到\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v7/funds/register": {
      "post": {
        "tags": [
          "cloud_funds"
        ],
        "summary": "运营后台-网商云资金-小程序账户注册",
        "description": "### 自然人支付宝测试账号1如下\n\n\u003e userid：2088402102469754 \u003cbr/\u003e\n\u003e 手机号：15943963926 \u003cbr/\u003e\n\u003e 身份证证件号码：652101197009187876 \u003cbr/\u003e\n\u003e 用户名：钟亚青 \u003cbr/\u003e\n\u003e 支付宝绑定银行卡：6212260508002821553 \u003cbr/\u003e\n\n### 自然人支付宝测试账号2如下\n\n\u003e userid：2088402102470501 \u003cbr/\u003e\n\u003e 手机号：13567538020 \u003cbr/\u003e\n\u003e 身份证证件号码：542625197302245302 \u003cbr/\u003e\n\u003e 用户名：戴丽园 \u003cbr/\u003e\n\u003e 支付宝绑定银行卡：6212264100011335373 \u003cbr/\u003e\n\n### 自然人支付宝测试账号3如下\n\u003e userid：2088402148374065 \u003cbr/\u003e\n\u003e 手机号：13541661726 \u003cbr/\u003e\n\u003e 身份证证件号码：813736192912160283 \u003cbr/\u003e\n\u003e 用户名：许雄伯 \u003cbr/\u003e\n\u003e 支付宝绑定银行卡：6212264100011336233 \u003cbr/\u003e\n\n### 企业测试账户\n\u003e 企业：雷神科技有限公司 \u003cbr/\u003e\n\u003e 企业统一社会信用代码：3300000682208738XX \u003cbr/\u003e\n\u003e 企业对公账户：工商卡  6212261202002455275 \u003cbr/\u003e\n\u003e 法人代表：浩克 \u003cbr/\u003e\n\u003e\n\u003e 法人代表支付宝测试账号如下 \u003cbr/\u003e\n\u003e userid：2088402102472024 \u003cbr/\u003e\n\u003e 手机号：15847440075 \u003cbr/\u003e\n\u003e 身份证证件号码：611021196708237059 \u003cbr/\u003e\n\u003e 用户名：浩克 \u003cbr/\u003e\n\u003e 支付宝绑定银行卡：6222023602024155635 \u003cbr/\u003e",
        "operationId": "MiniAppRegisterReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MiniAppRegisterBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MiniAppRegisterRsp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005109,TestEnvUIDRequiredErr,\"测试环境网商UID必填\",\"\",true);\n@httpError(400005025,CreaeTransReceiptUIDNotOpenThisChannelErr,\"收款账户未开通当前支付渠道\",\"\",true);\n@httpError(400005110,CloudFundsRegisterCodeErr,\"云资金小程序获取注册二维码失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005001,AccountNotFoundError,\"账户信息未找到\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v7/funds/registerQuery": {
      "post": {
        "tags": [
          "cloud_funds"
        ],
        "summary": "网商云资金-小程序商户入驻结果查询【内部接口勿调用】",
        "operationId": "MiniAppRegisterQueryReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MiniAppRegisterQueryBody"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MiniAppRegisterQueryRsp"
                }
              }
            }
          },
          "400": {
            "description": "@httpError(400005025,CreaeTransReceiptUIDNotOpenThisChannelErr,\"收款账户未开通当前支付渠道\",\"\",true);\n@httpError(400005111,CloudFundsRegisterQueryStatusErr,\"云资金小程序入驻结果查询失败\",\"\",true);\n@httpError(400005114,OpenFaildUpdateMerchantIdErr,\"开通申请单失败，更新网商商户号失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005001,AccountNotFoundError,\"账户信息未找到\",\"\",false);\n@httpError(404005032,MainAccountNotFoundError,\"主账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v7/product": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "运营后台-查询开户支付产品列表",
        "operationId": "SearchProductsReq",
        "parameters": [
          {
            "name": "provider",
            "in": "query",
            "description": "服务商",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/BaseSrvProviderType"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "Provider"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "平台",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/BaseSrvPlatform"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "Platform"
          },
          {
            "name": "size",
            "in": "query",
            "description": "每页数据大小",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "default": "100",
              "x-go-validate": "@int32[1,100]"
            },
            "x-go-name": "Size"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "偏移量",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@int32[0,]"
            },
            "x-go-name": "Offset"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductListRsp"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "product"
        ],
        "summary": "运营后台-创建支付产品",
        "operationId": "CreateProductReq",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v7/product/{productId}": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "运营后台-查询开户支付产品详情",
        "operationId": "GetProductDetailReq",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "产品id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "minimum": 1,
              "x-go-validate": "@uint64[1,]"
            },
            "x-go-name": "ProductID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProductDetailRsp"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v7/settTask/dispatchClear": {
      "post": {
        "tags": [
          "sett_task"
        ],
        "summary": "DispatchClearReq 每清算日（1时）跑批清算，生成D0结算任务，待渠道方清算跑批完成后执行D0结算",
        "description": "说明:\n1、清算仅对前一日23时之前提交的结算申请，进行跑批清算，23时之后的结算申请顺延至下一清算日\n2、对同一日提交的结算申请，执行跑批清算后，会合并交易作为一笔结算\n3、D0结算发起时间为每清算日10:30开始，结算状态会根据渠道方返回及时更新",
        "operationId": "DispatchClearReq",
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "",
              "x-go-validate": "@char[0,32]"
            },
            "x-go-name": "UserAgent"
          }
        ],
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005157,RepeatExecErr,\"重复执行\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005000,ForbiddenErr,\"非法操作\",\"\",false);\n@httpError(403005084,NotWorkDayErr,\"非清算日\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v7/settTask/dispatchWithdrawal": {
      "post": {
        "tags": [
          "sett_task"
        ],
        "summary": "DispatchWithdrawalReq 前置清算任务完成后，待渠道方清算完成（10:30）开始分发结算提现任务，",
        "operationId": "DispatchWithdrawalReq",
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "",
              "x-go-validate": "@char[0,32]"
            },
            "x-go-name": "UserAgent"
          }
        ],
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005157,RepeatExecErr,\"重复执行\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005000,ForbiddenErr,\"非法操作\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v7/settTask/doClear": {
      "post": {
        "tags": [
          "sett_task"
        ],
        "summary": "DoClearReq 按商户执行清算",
        "operationId": "DoClearReq",
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "",
              "x-go-validate": "@char[0,32]"
            },
            "x-go-name": "UserAgent"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DoClearBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005157,RepeatExecErr,\"重复执行\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005000,ForbiddenErr,\"非法操作\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v7/settTask/doWithdrawal": {
      "post": {
        "tags": [
          "sett_task"
        ],
        "summary": "DoWithdrawalReq 按商户执行清算",
        "operationId": "DoWithdrawalReq",
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "schema": {
              "type": "string",
              "default": "",
              "x-go-validate": "@char[0,32]"
            },
            "x-go-name": "UserAgent"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DoWithdrawalBody"
              }
            }
          }
        },
        "responses": {
          "204": {},
          "400": {
            "description": "@httpError(400005086,SettlementBalanceNotEnoughErr,\"可结算余额不足，结算失败\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005037,SettlementStatusQueryCompleteSettlementErr,\"结算状态查询, 完成结算单失败\",\"\",true);\n@httpError(403005000,ForbiddenErr,\"非法操作\",\"\",false);\n@httpError(403005085,SettTaskStatusErr,\"结算单据状态错误\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005016,ReceiptAccountNotBindBankCardErr,\"收款账户未绑定银行卡\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v7/settTask/queryWithdrawal": {
      "get": {
        "tags": [
          "sett_task"
        ],
        "summary": "QueryWithdrawalReq 查询结算状态",
        "operationId": "QueryWithdrawalReq",
        "parameters": [
          {
            "name": "taskID",
            "in": "query",
            "description": "任务号",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "uint64",
              "minimum": 1,
              "x-go-validate": "@uint64[1,]"
            },
            "x-go-name": "TaskID"
          },
          {
            "name": "withChannelStatus",
            "in": "query",
            "description": "是否实时查询渠道方支付状态",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Bool"
                },
                {
                  "default": "FALSE"
                }
              ]
            },
            "x-go-name": "WithChannelStatus"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSettTaskReqResponse"
                }
              }
            }
          },
          "403": {
            "description": "@httpError(403005037,SettlementStatusQueryCompleteSettlementErr,\"结算状态查询, 完成结算单失败\",\"\",true);\n@httpError(403005085,SettTaskStatusErr,\"结算单据状态错误\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v7/settTask/search": {
      "get": {
        "tags": [
          "sett_task"
        ],
        "operationId": "SearchSettTaskReq",
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "description": "每页数据大小",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "default": "10",
              "x-go-validate": "@int32[1,100]"
            },
            "x-go-name": "Size"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "偏移量",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@int32[0,]"
            },
            "x-go-name": "Offset"
          },
          {
            "name": "startCreateTime",
            "in": "query",
            "description": "创建开始时间",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MySQLTimestamp"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "StartCreateTime"
          },
          {
            "name": "endCreateTime",
            "in": "query",
            "description": "创建结束时间",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MySQLTimestamp"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "EndCreateTime"
          },
          {
            "name": "merchantAccountID",
            "in": "query",
            "description": "商户账户",
            "schema": {
              "type": "integer",
              "format": "uint64",
              "default": "0"
            },
            "x-go-name": "MerchantAccountID"
          },
          {
            "name": "paymentAccountID",
            "in": "query",
            "description": "付款账户",
            "schema": {
              "type": "integer",
              "format": "uint64",
              "default": "0"
            },
            "x-go-name": "PaymentAccountID"
          },
          {
            "name": "receiveAccountID",
            "in": "query",
            "description": "收款账户",
            "schema": {
              "type": "integer",
              "format": "uint64",
              "default": "0"
            },
            "x-go-name": "ReceiveAccountID"
          },
          {
            "name": "status",
            "in": "query",
            "description": "状态",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/BaseSrvSettTaskStatus"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "Status"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchSettTaskRsp"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v7/tradingFee/search": {
      "get": {
        "tags": [
          "trading_fee"
        ],
        "operationId": "SearchTradingFeeReq",
        "parameters": [
          {
            "name": "feeUID",
            "in": "query",
            "description": "系统收取手续费账户uid",
            "schema": {
              "type": "string",
              "default": ""
            },
            "x-go-name": "FeeUID"
          },
          {
            "name": "size",
            "in": "query",
            "description": "每页数据大小",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "default": "10",
              "x-go-validate": "@int32[1,100]"
            },
            "x-go-name": "Size"
          },
          {
            "name": "endCreateTime",
            "in": "query",
            "description": "创建结束时间",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MySQLTimestamp"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "EndCreateTime"
          },
          {
            "name": "startCreateTime",
            "in": "query",
            "description": "创建开始时间",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MySQLTimestamp"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "StartCreateTime"
          },
          {
            "name": "payeeAccountId",
            "in": "query",
            "description": "支付手续费账户uid, 商户账户UID",
            "schema": {
              "type": "string",
              "default": ""
            },
            "x-go-name": "PayeeUID"
          },
          {
            "name": "payerAccountId",
            "in": "query",
            "description": "客户付款账户ID，下游客户的账户UID",
            "schema": {
              "type": "string",
              "default": ""
            },
            "x-go-name": "PayerUID"
          },
          {
            "name": "tradeNo",
            "in": "query",
            "description": "关联单号，交易为交易单号，结算为结算单号",
            "schema": {
              "type": "string",
              "format": "uint64",
              "default": ""
            },
            "x-go-name": "TradeNo"
          },
          {
            "name": "feeType",
            "in": "query",
            "description": "类型",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseSrvTradingFeeType"
              },
              "default": ""
            },
            "x-go-name": "FeeType"
          },
          {
            "name": "channelType",
            "in": "query",
            "description": "支付方式, 为支付时有效，结算时无效",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseSrvChannelType"
              },
              "default": ""
            },
            "x-go-name": "ChannelType"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "偏移量",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@int32[0,]"
            },
            "x-go-name": "Offset"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchTradingFeeRsp"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n@httpError(404005008,PaymentAccountNotFoundErr,\"付款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    },
    "/service-payment-gateway/v7/tradingFee/searchAndCount": {
      "get": {
        "tags": [
          "trading_fee"
        ],
        "operationId": "SearchAndCountTradingFeeReq",
        "parameters": [
          {
            "name": "payeeAccountId",
            "in": "query",
            "description": "支付手续费账户uid, 商户账户UID",
            "schema": {
              "type": "string",
              "default": ""
            },
            "x-go-name": "PayeeUID"
          },
          {
            "name": "tradeNo",
            "in": "query",
            "description": "关联单号，交易为交易单号，结算为结算单号",
            "schema": {
              "type": "string",
              "format": "uint64",
              "default": ""
            },
            "x-go-name": "TradeNo"
          },
          {
            "name": "feeType",
            "in": "query",
            "description": "类型",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseSrvTradingFeeType"
              },
              "default": ""
            },
            "x-go-name": "FeeType"
          },
          {
            "name": "size",
            "in": "query",
            "description": "每页数据大小",
            "schema": {
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "minimum": 1,
              "default": "10",
              "x-go-validate": "@int32[1,100]"
            },
            "x-go-name": "Size"
          },
          {
            "name": "startCreateTime",
            "in": "query",
            "description": "创建开始时间",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MySQLTimestamp"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "StartCreateTime"
          },
          {
            "name": "feeUID",
            "in": "query",
            "description": "系统收取手续费账户uid",
            "schema": {
              "type": "string",
              "default": ""
            },
            "x-go-name": "FeeUID"
          },
          {
            "name": "payerAccountId",
            "in": "query",
            "description": "客户付款账户ID，下游客户的账户UID",
            "schema": {
              "type": "string",
              "default": ""
            },
            "x-go-name": "PayerUID"
          },
          {
            "name": "channelType",
            "in": "query",
            "description": "支付方式, 为支付时有效，结算时无效",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BaseSrvChannelType"
              },
              "default": ""
            },
            "x-go-name": "ChannelType"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "偏移量",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": "0",
              "x-go-validate": "@int32[0,]"
            },
            "x-go-name": "Offset"
          },
          {
            "name": "endCreateTime",
            "in": "query",
            "description": "创建结束时间",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/MySQLTimestamp"
                },
                {
                  "default": ""
                }
              ]
            },
            "x-go-name": "EndCreateTime"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchTotalTradingFeeRsp"
                }
              }
            }
          },
          "404": {
            "description": "@httpError(404005009,ReceiptAccountNotFoundErr,\"收款账户信息未找到\",\"\",true);\n@httpError(404005008,PaymentAccountNotFoundErr,\"付款账户信息未找到\",\"\",true);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          },
          "500": {
            "description": "@httpError(500000002,InvalidStruct,\"内部用于接收参数时非法的结构\",\"\",false);\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusError"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "http://service-payment-gateway.newdhb.com",
      "description": "测试环境"
    }
  ],
  "components": {
    "schemas": {
      "AccountList": {
        "type": "object",
        "properties": {
          "accountID": {
            "type": "integer",
            "format": "uint64",
            "description": "收款账户ID",
            "x-go-json": "accountID",
            "x-go-name": "AccountID"
          },
          "accountName": {
            "type": "string",
            "description": "账户名称",
            "x-go-json": "accountName",
            "x-go-name": "AccountName"
          },
          "handingFeeBalance": {
            "type": "integer",
            "format": "int64",
            "description": "手续费余额",
            "x-go-json": "handingFeeBalance",
            "x-go-name": "HandingFeeBalance"
          },
          "uid": {
            "type": "string",
            "description": "用户中心UID",
            "x-go-json": "uid",
            "x-go-name": "UID"
          }
        },
        "required": [
          "accountID",
          "accountName",
          "handingFeeBalance",
          "uid"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.AccountList"
      },
      "AccountRegisterQueryRsp": {
        "type": "object",
        "properties": {
          "accountID": {
            "type": "string",
            "format": "uint64",
            "description": "账户ID",
            "x-go-json": "accountID,string",
            "x-go-name": "AccountID"
          },
          "accountRealName": {
            "type": "string",
            "description": "商户名称",
            "x-go-json": "accountRealName",
            "x-go-name": "AccountRealName"
          },
          "merchantId": {
            "type": "string",
            "description": "网商商户号",
            "x-go-json": "merchantId",
            "x-go-name": "MerchantId"
          },
          "registerStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceMybankGatewayRegisterStatus"
              },
              {
                "description": "注册状态 0：注册中 1：成功 2：失败"
              }
            ],
            "x-go-json": "registerStatus",
            "x-go-name": "RegisterStatus"
          },
          "uID": {
            "type": "string",
            "description": "账户UID",
            "x-go-json": "uID",
            "x-go-name": "UID"
          }
        },
        "required": [
          "uID",
          "accountID",
          "merchantId",
          "registerStatus",
          "accountRealName"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cloud_register.AccountRegisterQueryRsp"
      },
      "AllinPayApply": {
        "type": "object",
        "properties": {
          "corporationInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CloudCompanyInfo"
              },
              {
                "description": "企业开户选择域"
              }
            ],
            "x-go-json": "corporationInfo,omitempty",
            "x-go-name": "CorporationInfo",
            "x-pointer": 1
          },
          "individualInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CloudIndividualInfo"
              },
              {
                "description": "个人开户选择域"
              }
            ],
            "x-go-json": "individualInfo,omitempty",
            "x-go-name": "IndividualInfo",
            "x-pointer": 1
          },
          "merchantInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MerchantInfo"
            },
            "description": "进件信息",
            "x-go-json": "merchantInfo,omitempty",
            "x-go-name": "MerchantInfo"
          },
          "retailerInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CloudCompanyInfo"
              },
              {
                "description": "个体户开户域"
              }
            ],
            "x-go-json": "retailerInfo,omitempty",
            "x-go-name": "RetailerInfo",
            "x-pointer": 1
          }
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.AllinPayApply"
      },
      "AllinpayApplyDetail": {
        "type": "object",
        "properties": {
          "corporationInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplyCloudVsp"
              },
              {
                "description": "企业开户信息"
              }
            ],
            "x-go-json": "corporationInfo",
            "x-go-name": "CorporationInfo"
          },
          "individualInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplyIndividual"
              },
              {
                "description": "个人开户信息"
              }
            ],
            "x-go-json": "individualInfo",
            "x-go-name": "IndividualInfo"
          },
          "isSetRealName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountRealNameStatus"
              },
              {
                "description": "是否已经实名认证, 通联渠道，个人/个体户有效, NO=未认证， DOING=认证处理中， SUCCESS=认证成功"
              }
            ],
            "x-go-json": "isSetRealName",
            "x-go-name": "IsSetRealName"
          },
          "merchantInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplyMerchantInfoList"
              },
              {
                "description": "进件信息"
              }
            ],
            "x-go-json": "merchantInfo",
            "x-go-name": "MerchantInfo"
          },
          "retailerInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplyCloudVsp"
              },
              {
                "description": "个体户开户信息"
              }
            ],
            "x-go-json": "retailerInfo",
            "x-go-name": "RetailerInfo"
          }
        },
        "required": [
          "corporationInfo",
          "individualInfo",
          "retailerInfo",
          "merchantInfo",
          "isSetRealName"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.AllinpayApplyDetail"
      },
      "AllinpayGatewayVerificationCodeType": {
        "type": "string",
        "enum": [
          "BIND_PHONE",
          "REMOVE_PHONE"
        ],
        "x-enum-labels": [
          "绑定手机",
          "解绑手机"
        ],
        "x-enum-vals": [
          1,
          2
        ],
        "x-enum-values": [
          "BIND_PHONE",
          "REMOVE_PHONE"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_allinpay_gateway.AllinpayGatewayVerificationCodeType"
      },
      "AllowOpen": {
        "type": "object",
        "properties": {
          "corporation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bool"
              },
              {
                "description": "企业"
              }
            ],
            "x-go-json": "corporation",
            "x-go-name": "Corporation"
          },
          "individual": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bool"
              },
              {
                "description": "个人"
              }
            ],
            "x-go-json": "individual",
            "x-go-name": "Individual"
          },
          "retailer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bool"
              },
              {
                "description": "个体户"
              }
            ],
            "x-go-json": "retailer",
            "x-go-name": "Retailer"
          }
        },
        "required": [
          "corporation",
          "individual",
          "retailer"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.AllowOpen"
      },
      "AppPayType": {
        "type": "string",
        "enum": [
          "ALIPAY",
          "UNIONPAY",
          "WECHAT"
        ],
        "x-enum-labels": [
          "支付宝",
          "银联",
          "微信"
        ],
        "x-enum-vals": [
          2,
          3,
          1
        ],
        "x-enum-values": [
          "ALIPAY",
          "UNIONPAY",
          "WECHAT"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/constants/types.AppPayType"
      },
      "Apply": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "$ref": "#/components/schemas/OperateTime"
          },
          {
            "$ref": "#/components/schemas/SoftDelete"
          },
          {
            "type": "object",
            "properties": {
              "ComplianceStatus": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvComplianceStatus"
                  },
                  {
                    "description": "收银宝合规审核"
                  }
                ],
                "x-go-json": "ComplianceStatus",
                "x-go-name": "ComplianceStatus"
              },
              "IsSetInfo": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bool"
                  },
                  {
                    "description": "云商通实名认证，企业信息是否已经提交"
                  }
                ],
                "x-go-json": "IsSetInfo",
                "x-go-name": "IsSetInfo"
              },
              "IsVspSetInfo": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bool"
                  },
                  {
                    "description": "收银宝，企业信息是否已经提交"
                  }
                ],
                "x-go-json": "IsVspSetInfo",
                "x-go-name": "IsVspSetInfo"
              },
              "accountID": {
                "type": "string",
                "format": "uint64",
                "description": "用户ID",
                "x-go-json": "accountID,string",
                "x-go-name": "AccountID"
              },
              "applyID": {
                "type": "string",
                "format": "uint64",
                "description": "申请单ID",
                "x-go-json": "applyID,string",
                "x-go-name": "ApplyID"
              },
              "companyID": {
                "type": "string",
                "format": "uint64",
                "description": "公司id",
                "x-go-json": "companyID,string",
                "x-go-name": "CompanyID"
              },
              "companyName": {
                "type": "string",
                "description": "公司名称",
                "x-go-json": "companyName",
                "x-go-name": "CompanyName"
              },
              "contact": {
                "type": "string",
                "description": "联系人",
                "x-go-json": "contact",
                "x-go-name": "Contact"
              },
              "contactPhone": {
                "type": "string",
                "description": "联系人手机号",
                "x-go-json": "contactPhone",
                "x-go-name": "ContactPhone"
              },
              "legalOcrStatus": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvOcrStatus"
                  },
                  {
                    "description": "ocr 企业法人实名信息是否一致"
                  }
                ],
                "x-go-json": "legalOcrStatus",
                "x-go-name": "LegalOcrStatus"
              },
              "merchantUserType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvMerchantUserType"
                  },
                  {
                    "description": "商户开户用户类型"
                  }
                ],
                "x-go-json": "merchantUserType",
                "x-go-name": "MerchantUserType"
              },
              "ocrStatus": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvOcrStatus"
                  },
                  {
                    "description": "ocr 企业工商认证信息是否一致"
                  }
                ],
                "x-go-json": "ocrStatus",
                "x-go-name": "OcrStatus"
              },
              "parentAccountID": {
                "type": "string",
                "format": "uint64",
                "description": "归属父级用户ID",
                "x-go-json": "parentAccountID,string",
                "x-go-name": "ParentAccountID"
              },
              "platform": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvPlatform"
                  },
                  {
                    "description": "平台"
                  }
                ],
                "x-go-json": "platform",
                "x-go-name": "Platform"
              },
              "productID": {
                "type": "string",
                "format": "uint64",
                "description": "申请产品id",
                "x-go-json": "productID,string",
                "x-go-name": "ProductID"
              },
              "provider": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvProviderType"
                  },
                  {
                    "description": "服务商"
                  }
                ],
                "x-go-json": "provider",
                "x-go-name": "Provider"
              },
              "providerSN": {
                "type": "string",
                "description": "服务商流水号",
                "x-go-json": "providerSN",
                "x-go-name": "ProviderSN"
              },
              "remark": {
                "type": "string",
                "description": "最后一条备注",
                "x-go-json": "remark",
                "x-go-name": "Remark"
              },
              "signSn": {
                "type": "string",
                "description": "网签流水号",
                "x-go-json": "signSn",
                "x-go-name": "SignSn"
              },
              "signStatus": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvSignStatus"
                  },
                  {
                    "description": "中金/云商通签约状态"
                  }
                ],
                "x-go-json": "signStatus",
                "x-go-name": "SignStatus"
              },
              "sort": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvApplySort"
                  },
                  {
                    "description": "排序"
                  }
                ],
                "x-go-json": "sort",
                "x-go-name": "Sort"
              },
              "status": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvApplyStatus"
                  },
                  {
                    "description": "申请单状态"
                  }
                ],
                "x-go-json": "status",
                "x-go-name": "Status"
              },
              "subStatus": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvApplyStatus"
                  },
                  {
                    "description": "子状态, (云商通审核状态)"
                  }
                ],
                "x-go-json": "subStatus",
                "x-go-name": "SubStatus"
              },
              "vspSignStatus": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvSignStatus"
                  },
                  {
                    "description": "收银宝签约状态"
                  }
                ],
                "x-go-json": "vspSignStatus",
                "x-go-name": "VspSignStatus"
              },
              "vspStatus": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvApplyStatus"
                  },
                  {
                    "description": "收银宝审核状态"
                  }
                ],
                "x-go-json": "vspStatus",
                "x-go-name": "VspStatus"
              }
            },
            "required": [
              "ComplianceStatus",
              "IsSetInfo",
              "IsVspSetInfo",
              "accountID",
              "applyID",
              "companyID",
              "companyName",
              "contact",
              "contactPhone",
              "legalOcrStatus",
              "merchantUserType",
              "ocrStatus",
              "parentAccountID",
              "platform",
              "productID",
              "provider",
              "providerSN",
              "remark",
              "signSn",
              "signStatus",
              "sort",
              "status",
              "subStatus",
              "vspSignStatus",
              "vspStatus"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.Apply"
      },
      "ApplyAtt": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "$ref": "#/components/schemas/SoftDelete"
          },
          {
            "type": "object",
            "properties": {
              "applyID": {
                "type": "string",
                "format": "uint64",
                "description": "申请单ID",
                "x-go-json": "applyID,string",
                "x-go-name": "ApplyID"
              },
              "attID": {
                "type": "string",
                "format": "uint64",
                "description": "附件",
                "x-go-json": "attID,string",
                "x-go-name": "AttID"
              },
              "attType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvApplyAttType"
                  },
                  {
                    "description": "附件类型"
                  }
                ],
                "x-go-json": "attType",
                "x-go-name": "AttType"
              },
              "imageCollectionTxSN": {
                "type": "string",
                "description": "影印件采集交易流水号",
                "x-go-json": "imageCollectionTxSN",
                "x-go-name": "ImageCollectionTxSN"
              },
              "name": {
                "type": "string",
                "description": "附件名称",
                "x-go-json": "name",
                "x-go-name": "Name"
              },
              "result": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bool"
                  },
                  {
                    "description": "上传结果"
                  }
                ],
                "x-go-json": "result",
                "x-go-name": "Result"
              },
              "url": {
                "type": "string",
                "description": "附件地址",
                "x-go-json": "url",
                "x-go-name": "Url"
              }
            },
            "required": [
              "applyID",
              "attID",
              "attType",
              "imageCollectionTxSN",
              "name",
              "result",
              "url"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.ApplyAtt"
      },
      "ApplyAttList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ApplyAtt"
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.ApplyAttList"
      },
      "ApplyBindCardBody": {
        "type": "object",
        "properties": {
          "applyId": {
            "type": "string",
            "format": "uint64",
            "minimum": 0,
            "description": "申请单id, 若出现，绑卡时会同步更新申请单状态",
            "default": "0",
            "x-go-json": "applyId,string",
            "x-go-name": "ApplyID",
            "x-go-validate": "@uint64[0,]"
          },
          "bankAccountName": {
            "type": "string",
            "description": "银行账户",
            "x-go-json": "bankAccountName",
            "x-go-name": "BankAccountName",
            "x-go-validate": "@char[1,128]"
          },
          "bankAccountNumber": {
            "type": "string",
            "description": "银行账户号码 注:操作标识 OperationFlag=10 时必填",
            "x-go-json": "bankAccountNumber",
            "x-go-name": "BankAccountNumber",
            "x-go-validate": "@char[1,32]"
          },
          "bankAccountType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayAccountUserType"
              },
              {
                "description": "账户类型: 11=个人账户, 12=企业账户, 13=个体户, 注：通联渠道仅支持个人/个体户使用方式绑卡"
              }
            ],
            "x-go-json": "bankAccountType",
            "x-go-name": "BankAccountType"
          },
          "bankCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvBankType"
              },
              {
                "description": "绑定银行ID,中金渠道操作标识 OperationFlag=10 时必填"
              }
            ],
            "x-go-json": "bankCode",
            "x-go-name": "BankCode"
          },
          "bankPhoneNumber": {
            "type": "string",
            "description": "银行卡预留手机号码,注:操作标识 OperationFlag=10 和个人时必填",
            "x-go-json": "bankPhoneNumber",
            "x-go-name": "BankPhoneNumber",
            "x-go-validate": "@char[0,16]"
          },
          "branchName": {
            "type": "string",
            "description": "分支行名称,注:操作标识 OperationFlag=10 和企业时必填, 通联企业绑卡时填写具体分支行名称如：“中国工商银行股份有限公司北京樱桃园支行”",
            "x-go-json": "branchName",
            "x-go-name": "BranchName",
            "x-go-validate": "@char[0,100]"
          },
          "city": {
            "type": "integer",
            "format": "int64",
            "description": "城市",
            "default": "0",
            "x-go-json": "city",
            "x-go-name": "City"
          },
          "cnapsCode": {
            "type": "string",
            "description": "人民银行联行号",
            "x-go-json": "cnapsCode",
            "x-go-name": "CNAPSCode",
            "x-go-validate": "@char[0,32]"
          },
          "credentialNumber": {
            "type": "string",
            "description": "身份证号",
            "x-go-json": "credentialNumber",
            "x-go-name": "CredentialNumber",
            "x-go-validate": "@char[0,18]"
          },
          "cvn2": {
            "type": "string",
            "description": "信用卡背面的末3位数字,注:个人贷记卡时必填",
            "x-go-json": "cvn2",
            "x-go-name": "CVN2",
            "x-go-validate": "@char[0,3]"
          },
          "parentBankCode": {
            "type": "string",
            "description": "收银宝开户银行编码 /v0/tools/getBankList?isVSP=TRUE",
            "x-go-json": "parentBankCode",
            "x-go-name": "ParentBankCode",
            "x-go-validate": "@char[0,32]"
          },
          "parentBankName": {
            "type": "string",
            "description": "收银宝开户银行名称,通联企业绑卡时必填 /v0/tools/getBankList?isVSP=TRUE",
            "x-go-json": "parentBankName",
            "x-go-name": "ParentBankName",
            "x-go-validate": "@char[0,100]"
          },
          "province": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayProvince"
              },
              {
                "description": "省份"
              }
            ],
            "x-go-json": "province",
            "x-go-name": "Province"
          },
          "validDate": {
            "type": "string",
            "description": "信用卡有效期 注:格式 YYMM;个人贷记卡时必填",
            "x-go-json": "validDate",
            "x-go-name": "ValidDate",
            "x-go-validate": "@char[0,4]"
          }
        },
        "required": [
          "bankAccountType",
          "bankAccountName",
          "bankAccountNumber"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.ApplyBindCardBody"
      },
      "ApplyBindCardConfirmBody": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "description": "打款金额,注:单位:分，验证方式:20 时必填;100 分(1 元)以内 随机金额",
            "x-go-json": "amount",
            "x-go-name": "Amount",
            "x-go-validate": "@int64[0,]"
          },
          "applyId": {
            "type": "string",
            "format": "uint64",
            "minimum": 0,
            "description": "申请单id, 若出现，绑卡时会同步更新申请单状态",
            "default": "0",
            "x-go-json": "applyId,string",
            "x-go-name": "ApplyID",
            "x-go-validate": "@uint64[0,]"
          },
          "bindId": {
            "type": "string",
            "format": "uint64",
            "minimum": 1,
            "description": "绑定流水号",
            "x-go-json": "bindId,string",
            "x-go-name": "BindId",
            "x-go-validate": "@uint64[1,]"
          },
          "cvn2": {
            "type": "string",
            "description": "信用卡背面的末3位数字,注:验证方式:10=短信验证时原绑卡申请为绑定信用卡该项必填",
            "x-go-json": "cvn2",
            "x-go-name": "CVN2",
            "x-go-validate": "@char[0,3]"
          },
          "smsCode": {
            "type": "string",
            "description": "短信验证码,注:有效时间:15 分钟，验证方式:10时必填",
            "x-go-json": "smsCode",
            "x-go-name": "SMSCode",
            "x-go-validate": "@char[0,6]"
          },
          "validDate": {
            "type": "string",
            "description": "信用卡有效期，格式YYMM, 注:验证方式:10=短信验证时原绑卡申请为绑定信用卡该项必填",
            "x-go-json": "validDate",
            "x-go-name": "ValidDate",
            "x-go-validate": "@char[0,4]"
          },
          "verifyWay": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayAccountBindCardVerifyWay"
              },
              {
                "description": "验证方式: 10=短信验证 20=企业被动小额打款验证\n注:\n1、验证方式:20=企业被动小额打款验证;仅限企业绑卡;\n2、通联渠道仅支持 个人/个体户 通过次方式绑卡"
              }
            ],
            "x-go-json": "verifyWay",
            "x-go-name": "VerifyWay"
          }
        },
        "required": [
          "bindId",
          "verifyWay"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.ApplyBindCardConfirmBody"
      },
      "ApplyBindCardConfirmResp": {
        "type": "object",
        "properties": {
          "availableVeriCount": {
            "type": "integer",
            "format": "int64",
            "description": "剩余可验证次数 注:企业银行账户绑定时不为空;最多可有效验证 3 次, 仅中金渠道企业绑卡返回",
            "x-go-json": "availableVeriCount",
            "x-go-name": "AvailableVeriCount"
          },
          "deadLine": {
            "type": "string",
            "description": "打款截止 日期; yyyyMMdd,企业银行账户绑定时不为空;注:有效期:3个自然日",
            "x-go-json": "deadLine",
            "x-go-name": "DeadLine"
          },
          "status": {
            "type": "string",
            "description": "状态: 18=被动已打款待验证 20=处理中 30=成功 40=失败，注:当企业绑卡确认、打款金 额已校验但未成功且剩余可验证次数\u003e=1 时，状态为 18=被动已打款待验证; 当接口字段均已校验成功，但交易未完成，状态为 20=处理中",
            "x-go-json": "status",
            "x-go-name": "Status"
          }
        },
        "required": [
          "status",
          "availableVeriCount",
          "deadLine"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.ApplyBindCardConfirmResp"
      },
      "ApplyBindCardRsp": {
        "type": "object",
        "properties": {
          "bindId": {
            "type": "string",
            "format": "uint64",
            "description": "绑定流水id",
            "x-go-json": "bindId,string",
            "x-go-name": "BindId"
          },
          "deadLine": {
            "type": "string",
            "description": "打款截止 日期; yyyyMMdd,企业银行账户绑定时不为空;注:有效期:3个自然日",
            "x-go-json": "deadLine",
            "x-go-name": "DeadLine"
          },
          "status": {
            "type": "string",
            "description": "状态: 10=处理中 15=待短信验证 17=待被动打款验证 18=被动已打款待验证 30=成功 40=失败",
            "x-go-json": "status",
            "x-go-name": "Status"
          },
          "txSn": {
            "type": "string",
            "description": "绑卡流水号",
            "x-go-json": "txSn",
            "x-go-name": "TxSN"
          }
        },
        "required": [
          "txSn",
          "bindId",
          "status",
          "deadLine"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.ApplyBindCardRsp"
      },
      "ApplyCloudVsp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "$ref": "#/components/schemas/SoftDelete"
          },
          {
            "type": "object",
            "properties": {
              "ProdList": {
                "type": "string",
                "description": "支付产品信息列表",
                "x-go-json": "ProdList",
                "x-go-name": "ProdList"
              },
              "addfacusID": {
                "type": "string",
                "description": "所属父客户,所在机构资金归集时，该字段不能为空",
                "x-go-json": "addfacusID",
                "x-go-name": "AddfacusID"
              },
              "agreeType": {
                "type": "string",
                "description": "无纸化标识,非电子协议进件可不填,1-电子协议 , 2-纸质协议",
                "x-go-json": "agreeType",
                "x-go-name": "AgreeType"
              },
              "allLicenceExpiryDate": {
                "type": "string",
                "description": "统一社会信息证代码有效期, 注:格式: yyyyMMdd;证件长期有效时为 20991231",
                "x-go-json": "allLicenceExpiryDate",
                "x-go-name": "AllLicenceExpiryDate"
              },
              "allLicenceIssDate": {
                "type": "string",
                "description": "统一社会信息证代码发证日, 注:格式: yyyyMMdd;",
                "x-go-json": "allLicenceIssDate",
                "x-go-name": "AllLicenceIssDate"
              },
              "applyID": {
                "type": "string",
                "format": "uint64",
                "description": "申请单ID",
                "x-go-json": "applyID,string",
                "x-go-name": "ApplyID"
              },
              "bankCityName": {
                "type": "string",
                "description": "开户行地区名称",
                "x-go-json": "bankCityName",
                "x-go-name": "BankCityName"
              },
              "bankCityNo": {
                "type": "string",
                "description": "开户行地区代码,根据中国地区代码表",
                "x-go-json": "bankCityNo",
                "x-go-name": "BankCityNo"
              },
              "bankName": {
                "type": "string",
                "description": "开户行支行名称,如：“中国工商银行股份有限公司北京樱桃园支行”",
                "x-go-json": "bankName",
                "x-go-name": "BankName"
              },
              "basicAcctNo": {
                "type": "string",
                "description": "企业银行账户",
                "x-go-json": "basicAcctNo",
                "x-go-name": "BasicAcctNo"
              },
              "busConactPerson": {
                "type": "string",
                "description": "业务联系人姓名, 非个人类商户必填",
                "x-go-json": "busConactPerson",
                "x-go-name": "BusConactPerson"
              },
              "busContactTel": {
                "type": "string",
                "description": "业务联系人电话,非个人类商户必填",
                "x-go-json": "busContactTel",
                "x-go-name": "BusContactTel"
              },
              "busDetail": {
                "type": "string",
                "description": "经营内容",
                "x-go-json": "busDetail",
                "x-go-name": "BusDetail"
              },
              "businessPlace": {
                "type": "string",
                "description": "经营场所\n1、独立门店、连锁店、专卖店\n2、综合卖场\n3、批发市场\n4、其它",
                "x-go-json": "businessPlace",
                "x-go-name": "BusinessPlace"
              },
              "city": {
                "type": "string",
                "description": "城市",
                "x-go-json": "city",
                "x-go-name": "City"
              },
              "cityName": {
                "type": "string",
                "description": "城市名称",
                "x-go-json": "cityName",
                "x-go-name": "CityName"
              },
              "clearMode": {
                "type": "string",
                "description": "结算方式, 0-商户自主提现,1-结算到银行卡,2-结算到通联电子账户",
                "x-go-json": "clearMode",
                "x-go-name": "ClearMode"
              },
              "contactPerson": {
                "type": "string",
                "description": "商户负责人,财务联系人（收短信用）",
                "x-go-json": "contactPerson",
                "x-go-name": "ContactPerson"
              },
              "contactPhone": {
                "type": "string",
                "description": "商户负责人电话,财务联系人电话",
                "x-go-json": "contactPhone",
                "x-go-name": "ContactPhone"
              },
              "corAddress": {
                "type": "string",
                "description": "企业地址",
                "x-go-json": "corAddress",
                "x-go-name": "CorAddress"
              },
              "corporationName": {
                "type": "string",
                "description": "企业名称,注:工商登记企业名称",
                "x-go-json": "corporationName",
                "x-go-name": "CorporationName"
              },
              "corporationShort": {
                "type": "string",
                "description": "客户简称,注:自定义简称",
                "x-go-json": "corporationShort",
                "x-go-name": "CorporationShort"
              },
              "cusUrl": {
                "type": "string",
                "description": "网站url或下载地址或平台名称,开通网关（含B2B、APP）、快捷、云闪付APP或线上场景必填",
                "x-go-json": "cusUrl",
                "x-go-name": "CusUrl"
              },
              "districtCode": {
                "type": "string",
                "description": "区/县",
                "x-go-json": "districtCode",
                "x-go-name": "DistrictCode"
              },
              "districtName": {
                "type": "string",
                "description": "区/县名称,注:详见附录(市县 区行政单位.pdf)，根据区县对应附录填写;新商户接入必填，存量商户可空",
                "x-go-json": "districtName",
                "x-go-name": "DistrictName"
              },
              "expandUser": {
                "type": "string",
                "description": "拓展人",
                "x-go-json": "expandUser",
                "x-go-name": "ExpandUser"
              },
              "holderExpire": {
                "type": "string",
                "description": "控股股东有效期",
                "x-go-json": "holderExpire",
                "x-go-name": "HolderExpire"
              },
              "holderIDNo": {
                "type": "string",
                "description": "控股股东身份证",
                "x-go-json": "holderIDNo",
                "x-go-name": "HolderIDNo"
              },
              "holderName": {
                "type": "string",
                "description": "控股股东姓名,商户性质为企业、个体户时必填",
                "x-go-json": "holderName",
                "x-go-name": "HolderName"
              },
              "industry": {
                "type": "string",
                "description": "通用行业代码",
                "x-go-json": "industry",
                "x-go-name": "Industry"
              },
              "industryName": {
                "type": "string",
                "description": "通用行业代码名称",
                "x-go-json": "industryName",
                "x-go-name": "IndustryName"
              },
              "inspect": {
                "type": "string",
                "description": "经营地段\n1：商业区\n2：工业区\n3：住宅区",
                "x-go-json": "inspect",
                "x-go-name": "Inspect"
              },
              "legalAddress": {
                "type": "string",
                "description": "法人身份证地址",
                "x-go-json": "legalAddress",
                "x-go-name": "LegalAddress"
              },
              "legalCredentialNumber": {
                "type": "string",
                "description": "法人证件号码",
                "x-go-json": "legalCredentialNumber",
                "x-go-name": "LegalCredentialNumber"
              },
              "legalCredentialType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvApplyCredentialType"
                  },
                  {
                    "description": "证件类型: 1-身份证, 2-外国护照, 5-港澳居民来往内地通行证, 6-台湾居民来往大陆通行证"
                  }
                ],
                "x-go-json": "legalCredentialType",
                "x-go-name": "LegalCredentialType"
              },
              "legalNationality": {
                "type": "string",
                "description": "法人国籍",
                "x-go-json": "legalNationality",
                "x-go-name": "LegalNationality"
              },
              "legalOccupation": {
                "type": "string",
                "description": "法人职业\n1：国家机关、党群组织、企业、事业单位人员\n2：专业技术人员\n3：办事人员和有关人员\n4：商业、服务业人员\n5：农、林、牧、渔、水利业生产人员\n6：生产、运输设备操作人员及有关人员\n7：军人\n8：其他",
                "x-go-json": "legalOccupation",
                "x-go-name": "LegalOccupation"
              },
              "legalPersonContactNumber": {
                "type": "string",
                "description": "法人联系电话",
                "x-go-json": "legalPersonContactNumber",
                "x-go-name": "LegalPersonContactNumber"
              },
              "legalPersonExpiryDate": {
                "type": "string",
                "description": "法人证件到期日,注:当证件长期有效 时为 99991231",
                "x-go-json": "legalPersonExpiryDate",
                "x-go-name": "LegalPersonExpiryDate"
              },
              "legalPersonIssDate": {
                "type": "string",
                "description": "法人证件发证日,注:格式: yyyyMMdd",
                "x-go-json": "legalPersonIssDate",
                "x-go-name": "LegalPersonIssDate"
              },
              "legalPersonName": {
                "type": "string",
                "description": "法人姓名",
                "x-go-json": "legalPersonName",
                "x-go-name": "LegalPersonName"
              },
              "legalSex": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvSexType"
                  },
                  {
                    "description": "法人性别,1-男 ,2-女"
                  }
                ],
                "x-go-json": "legalSex",
                "x-go-name": "LegalSex"
              },
              "mccID": {
                "type": "string",
                "description": "所属行业,详见获取mcc信息接口",
                "x-go-json": "mccID",
                "x-go-name": "MccID"
              },
              "mccName": {
                "type": "string",
                "description": "所属行业名称",
                "x-go-json": "mccName",
                "x-go-name": "MccName"
              },
              "ofFlag": {
                "type": "string",
                "description": "线上线下业务场景,0-线下,1-线上,为空时默认为线下场景",
                "x-go-json": "ofFlag",
                "x-go-name": "OfFlag"
              },
              "operateLimit": {
                "type": "string",
                "description": "经营区域\n1：城区\n2: 郊区\n3：边远地区",
                "x-go-json": "operateLimit",
                "x-go-name": "OperateLimit"
              },
              "organCode": {
                "type": "string",
                "description": "组织机构代码证号,三证合一否时需要填写",
                "x-go-json": "organCode",
                "x-go-name": "OrganCode"
              },
              "organExpire": {
                "type": "string",
                "description": "组织机构代码证有效期,三证合一否时需要填写 yyyy-mm-dd或长期",
                "x-go-json": "organExpire",
                "x-go-name": "OrganExpire"
              },
              "parentBankCode": {
                "type": "string",
                "description": "开户银行编码",
                "x-go-json": "parentBankCode",
                "x-go-name": "ParentBankCode"
              },
              "parentBankName": {
                "type": "string",
                "description": "开户银行名称，详细，需严格按照银行列表上送，部分银行支持多种上送方式，选其一上送即可。注：测试环境仅支持工农中建交。",
                "x-go-json": "parentBankName",
                "x-go-name": "ParentBankName"
              },
              "province": {
                "type": "string",
                "description": "省份",
                "x-go-json": "province",
                "x-go-name": "Province"
              },
              "provinceName": {
                "type": "string",
                "description": "省份名称",
                "x-go-json": "provinceName",
                "x-go-name": "ProvinceName"
              },
              "pubAcctInfo": {
                "type": "string",
                "description": "对公账户信息,格式如下：对公账户号#支付行号#对公账户名称,商户性质为企业，结算账户对私时必填，作为商户信息扩展字段，与结算信息无关",
                "x-go-json": "pubAcctInfo",
                "x-go-name": "PubAcctInfo"
              },
              "registerFund": {
                "type": "string",
                "description": "注册资本\n1: 注册资本\u003c10万元\n2: 10万元\u003c注册资本\u003c20万元\n3: 20万元\u003c注册资本\u003c50万元\n4: 50万元\u003c注册资本\u003c100万元\n5: 注册资本\u003e100万元",
                "x-go-json": "registerFund",
                "x-go-name": "RegisterFund"
              },
              "servicePhone": {
                "type": "string",
                "description": "客服电话",
                "x-go-json": "servicePhone",
                "x-go-name": "ServicePhone"
              },
              "settIDNo": {
                "type": "string",
                "description": "结算人身份证号,结算账户对私时，结算人身份证号不能为空",
                "x-go-json": "settIDNo",
                "x-go-name": "SettIDNo"
              },
              "settreMark": {
                "type": "string",
                "description": "结算摘要前缀,仅当非自主提现时获取",
                "x-go-json": "settreMark",
                "x-go-name": "SettreMark"
              },
              "staffTotal": {
                "type": "string",
                "description": "员工人数\n1: 员工数量\u003c10\n2: 10\u003c员工数量\u003c20\n3: 20\u003c员工数量\u003c50\n4: 50\u003c员工数量\u003c100\n5: 员工数量\u003e100",
                "x-go-json": "staffTotal",
                "x-go-name": "StaffTotal"
              },
              "subbranchList": {
                "type": "string",
                "description": "门店信息",
                "x-go-json": "subbranchList",
                "x-go-name": "SubbranchList"
              },
              "thrcertFlag": {
                "type": "string",
                "description": "是否三证合一 ,1-是 0-否,默认:1",
                "x-go-json": "thrcertFlag",
                "x-go-name": "ThrcertFlag"
              },
              "unifiedSocialCreditCode": {
                "type": "string",
                "description": "统一社会信息证代码",
                "x-go-json": "unifiedSocialCreditCode",
                "x-go-name": "UnifiedSocialCreditCode"
              },
              "unionBank": {
                "type": "string",
                "description": "支付行号，12位数字",
                "x-go-json": "unionBank",
                "x-go-name": "UnionBank"
              },
              "unsdRemark": {
                "type": "string",
                "description": "渠道备注",
                "x-go-json": "unsdRemark",
                "x-go-name": "UnsdRemark"
              },
              "webName": {
                "type": "string",
                "description": "网站名称/应用名称",
                "x-go-json": "webName",
                "x-go-name": "WebName"
              }
            },
            "required": [
              "ProdList",
              "addfacusID",
              "agreeType",
              "allLicenceExpiryDate",
              "allLicenceIssDate",
              "applyID",
              "bankCityName",
              "bankCityNo",
              "bankName",
              "basicAcctNo",
              "busConactPerson",
              "busContactTel",
              "busDetail",
              "businessPlace",
              "city",
              "cityName",
              "clearMode",
              "contactPerson",
              "contactPhone",
              "corAddress",
              "corporationName",
              "corporationShort",
              "cusUrl",
              "districtCode",
              "districtName",
              "expandUser",
              "holderExpire",
              "holderIDNo",
              "holderName",
              "industry",
              "industryName",
              "inspect",
              "legalAddress",
              "legalCredentialNumber",
              "legalCredentialType",
              "legalNationality",
              "legalOccupation",
              "legalPersonContactNumber",
              "legalPersonExpiryDate",
              "legalPersonIssDate",
              "legalPersonName",
              "legalSex",
              "mccID",
              "mccName",
              "ofFlag",
              "operateLimit",
              "organCode",
              "organExpire",
              "parentBankCode",
              "parentBankName",
              "province",
              "provinceName",
              "pubAcctInfo",
              "registerFund",
              "servicePhone",
              "settIDNo",
              "settreMark",
              "staffTotal",
              "subbranchList",
              "thrcertFlag",
              "unifiedSocialCreditCode",
              "unionBank",
              "unsdRemark",
              "webName"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.ApplyCloudVsp"
      },
      "ApplyCorporation": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "$ref": "#/components/schemas/SoftDelete"
          },
          {
            "type": "object",
            "properties": {
              "allLicenceExpiryDate": {
                "type": "string",
                "description": "统一社会信息证代码有效期, 注:格式: yyyyMMdd;证件长期有效时为 20991231",
                "x-go-json": "allLicenceExpiryDate",
                "x-go-name": "AllLicenceExpiryDate"
              },
              "allLicenceIssDate": {
                "type": "string",
                "description": "统一社会信息证代码发证日, 注:格式: yyyyMMdd;",
                "x-go-json": "allLicenceIssDate",
                "x-go-name": "AllLicenceIssDate"
              },
              "applyID": {
                "type": "string",
                "format": "uint64",
                "description": "申请单ID",
                "x-go-json": "applyID,string",
                "x-go-name": "ApplyID"
              },
              "approvalNo": {
                "type": "string",
                "description": "开户许可证核准号",
                "x-go-json": "approvalNo",
                "x-go-name": "ApprovalNo"
              },
              "authCapital": {
                "type": "integer",
                "format": "uint64",
                "description": "注册资本，单位分",
                "x-go-json": "authCapital",
                "x-go-name": "AuthCapital"
              },
              "basicAcctNo": {
                "type": "string",
                "description": "企业银行账户",
                "x-go-json": "basicAcctNo",
                "x-go-name": "BasicAcctNo"
              },
              "beneficiary": {
                "type": "string",
                "description": "实际收益人",
                "x-go-json": "beneficiary",
                "x-go-name": "Beneficiary"
              },
              "businessScope": {
                "type": "string",
                "description": "经营范围",
                "x-go-json": "businessScope",
                "x-go-name": "BusinessScope"
              },
              "categoryType": {
                "type": "string",
                "description": "分类类别",
                "x-go-json": "categoryType",
                "x-go-name": "CategoryType"
              },
              "categoryTypeName": {
                "type": "string",
                "description": "分类类别名称",
                "x-go-json": "categoryTypeName",
                "x-go-name": "CategoryTypeName"
              },
              "city": {
                "type": "string",
                "description": "城市",
                "x-go-json": "city",
                "x-go-name": "City"
              },
              "cityName": {
                "type": "string",
                "description": "城市名称",
                "x-go-json": "cityName",
                "x-go-name": "CityName"
              },
              "controller": {
                "type": "string",
                "description": "实际控制人",
                "x-go-json": "controller",
                "x-go-name": "Controller"
              },
              "corAddress": {
                "type": "string",
                "description": "企业地址",
                "x-go-json": "corAddress",
                "x-go-name": "CorAddress"
              },
              "corEmail": {
                "type": "string",
                "description": "企业邮箱",
                "x-go-json": "corEmail",
                "x-go-name": "CorEmail"
              },
              "corType": {
                "type": "string",
                "description": "企业类型: 01=企业单位 02=民办非企业单位",
                "x-go-json": "corType",
                "x-go-name": "CorType"
              },
              "corporationName": {
                "type": "string",
                "description": "企业名称,注:工商登记企业名称",
                "x-go-json": "corporationName",
                "x-go-name": "CorporationName"
              },
              "corporationShort": {
                "type": "string",
                "description": "客户简称,注:自定义简称",
                "x-go-json": "corporationShort",
                "x-go-name": "CorporationShort"
              },
              "district": {
                "type": "string",
                "description": "区/县",
                "x-go-json": "district",
                "x-go-name": "District"
              },
              "districtName": {
                "type": "string",
                "description": "区/县名称,注:详见附录(市县 区行政单位.pdf)，根据区县对应附录填写;新商户接入必填，存量商户可空",
                "x-go-json": "districtName",
                "x-go-name": "DistrictName"
              },
              "industry": {
                "type": "string",
                "description": "通用行业代码",
                "x-go-json": "industry",
                "x-go-name": "Industry"
              },
              "industryBelongType": {
                "type": "string",
                "description": "行业代码",
                "x-go-json": "industryBelongType",
                "x-go-name": "IndustryBelongType"
              },
              "industryBelongTypeName": {
                "type": "string",
                "description": "行业代码名称",
                "x-go-json": "industryBelongTypeName",
                "x-go-name": "IndustryBelongTypeName"
              },
              "industryName": {
                "type": "string",
                "description": "通用行业代码名称",
                "x-go-json": "industryName",
                "x-go-name": "IndustryName"
              },
              "legalCredentialNumber": {
                "type": "string",
                "description": "法人证件号码",
                "x-go-json": "legalCredentialNumber",
                "x-go-name": "LegalCredentialNumber"
              },
              "legalCredentialType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvApplyCredentialType"
                  },
                  {
                    "description": "证件类型: 1-身份证, 2-外国护照, 5-港澳居民来往内地通行证, 6-台湾居民来往大陆通行证"
                  }
                ],
                "x-go-json": "legalCredentialType",
                "x-go-name": "LegalCredentialType"
              },
              "legalPersonContactNumber": {
                "type": "string",
                "description": "法人联系电话",
                "x-go-json": "legalPersonContactNumber",
                "x-go-name": "LegalPersonContactNumber"
              },
              "legalPersonEmail": {
                "type": "string",
                "description": "法人邮箱",
                "x-go-json": "legalPersonEmail",
                "x-go-name": "LegalPersonEmail"
              },
              "legalPersonExpiryDate": {
                "type": "string",
                "description": "法人证件到期日,注:当证件长期有效 时为 99991231",
                "x-go-json": "legalPersonExpiryDate",
                "x-go-name": "LegalPersonExpiryDate"
              },
              "legalPersonIssDate": {
                "type": "string",
                "description": "法人证件发证日,注:格式: yyyyMMdd",
                "x-go-json": "legalPersonIssDate",
                "x-go-name": "LegalPersonIssDate"
              },
              "legalPersonName": {
                "type": "string",
                "description": "法人姓名",
                "x-go-json": "legalPersonName",
                "x-go-name": "LegalPersonName"
              },
              "province": {
                "type": "string",
                "description": "省份",
                "x-go-json": "province",
                "x-go-name": "Province"
              },
              "provinceName": {
                "type": "string",
                "description": "省份名称",
                "x-go-json": "provinceName",
                "x-go-name": "ProvinceName"
              },
              "scale": {
                "type": "string",
                "description": "企业规模: 01=大型 02=中型 03=小型 04=微型 98=其他",
                "x-go-json": "scale",
                "x-go-name": "Scale"
              },
              "shareholder": {
                "type": "string",
                "description": "控股股东",
                "x-go-json": "shareholder",
                "x-go-name": "Shareholder"
              },
              "unifiedSocialCreditCode": {
                "type": "string",
                "description": "统一社会信息证代码",
                "x-go-json": "unifiedSocialCreditCode",
                "x-go-name": "UnifiedSocialCreditCode"
              }
            },
            "required": [
              "allLicenceExpiryDate",
              "allLicenceIssDate",
              "applyID",
              "approvalNo",
              "authCapital",
              "basicAcctNo",
              "beneficiary",
              "businessScope",
              "categoryType",
              "categoryTypeName",
              "city",
              "cityName",
              "controller",
              "corAddress",
              "corEmail",
              "corType",
              "corporationName",
              "corporationShort",
              "district",
              "districtName",
              "industry",
              "industryBelongType",
              "industryBelongTypeName",
              "industryName",
              "legalCredentialNumber",
              "legalCredentialType",
              "legalPersonContactNumber",
              "legalPersonEmail",
              "legalPersonExpiryDate",
              "legalPersonIssDate",
              "legalPersonName",
              "province",
              "provinceName",
              "scale",
              "shareholder",
              "unifiedSocialCreditCode"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.ApplyCorporation"
      },
      "ApplyGetMerchantInfo": {
        "type": "object",
        "properties": {
          "appId": {
            "type": "string",
            "description": "AppId",
            "x-go-json": "appId",
            "x-go-name": "AppId"
          },
          "authPath": {
            "type": "string",
            "description": "当开通微信公众号支付时此字段必填,最多可填写5个路径，不同的路径使用英文逗号分隔",
            "x-go-json": "authPath",
            "x-go-name": "AuthPath"
          },
          "authStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvMerchantAuthStatus"
              },
              {
                "description": "进件信息状态"
              }
            ],
            "x-go-json": "authStatus",
            "x-go-name": "AuthStatus"
          },
          "payType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvMerchantPayType"
              },
              {
                "description": "支付类别"
              }
            ],
            "x-go-json": "payType",
            "x-go-name": "PayType"
          },
          "payWay": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvMerchantPayWay"
              },
              {
                "description": "支付方式"
              }
            ],
            "x-go-json": "payWay",
            "x-go-name": "PayWay"
          },
          "servicePhone": {
            "type": "string",
            "description": "客服电话",
            "x-go-json": "servicePhone",
            "x-go-name": "ServicePhone"
          }
        },
        "required": [
          "payWay",
          "payType",
          "servicePhone",
          "appId",
          "authPath",
          "authStatus"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.ApplyGetMerchantInfo"
      },
      "ApplyGetMerchantInfoData": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ApplyGetMerchantInfo"
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.ApplyGetMerchantInfoData"
      },
      "ApplyGetMerchantInfoListRsp": {
        "type": "object",
        "properties": {
          "new": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplyMerchantInfoList"
              },
              {
                "description": "申请单中新的进件信息"
              }
            ],
            "x-go-json": "new",
            "x-go-name": "New"
          },
          "used": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseAccountMerchantList"
              },
              {
                "description": "使用中的"
              }
            ],
            "x-go-json": "used",
            "x-go-name": "Used"
          }
        },
        "required": [
          "new",
          "used"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.ApplyGetMerchantInfoListRsp"
      },
      "ApplyIndividual": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "$ref": "#/components/schemas/SoftDelete"
          },
          {
            "type": "object",
            "properties": {
              "applyID": {
                "type": "string",
                "format": "uint64",
                "description": "申请单ID",
                "x-go-json": "applyID,string",
                "x-go-name": "ApplyID"
              },
              "credentialAddress": {
                "type": "string",
                "description": "身份证地址",
                "x-go-json": "credentialAddress",
                "x-go-name": "CredentialAddress"
              },
              "credentialNumber": {
                "type": "string",
                "description": "证件号码",
                "x-go-json": "credentialNumber",
                "x-go-name": "CredentialNumber"
              },
              "credentialType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvApplyCredentialType"
                  },
                  {
                    "description": "证件类型: 0-身份证"
                  }
                ],
                "x-go-json": "credentialType",
                "x-go-name": "CredentialType"
              },
              "expiryDate": {
                "type": "string",
                "description": "证件到期日,注:当证件长期有效时为 99991231",
                "x-go-json": "expiryDate",
                "x-go-name": "ExpiryDate"
              },
              "indAddress": {
                "type": "string",
                "description": "联系地址,注:常驻信息包括(国家、 省、市、县、详细地址 )",
                "x-go-json": "indAddress",
                "x-go-name": "IndAddress"
              },
              "indEmail": {
                "type": "string",
                "description": "个人邮箱",
                "x-go-json": "indEmail",
                "x-go-name": "IndEmail"
              },
              "issDate": {
                "type": "string",
                "description": "证件发证日,注:格式:yyyyMMdd",
                "x-go-json": "issDate",
                "x-go-name": "IssDate"
              },
              "phoneNumber": {
                "type": "string",
                "description": "开户手机号",
                "x-go-json": "phoneNumber",
                "x-go-name": "PhoneNumber"
              },
              "userName": {
                "type": "string",
                "description": "用户姓名",
                "x-go-json": "userName",
                "x-go-name": "UserName"
              }
            },
            "required": [
              "applyID",
              "credentialAddress",
              "credentialNumber",
              "credentialType",
              "expiryDate",
              "indAddress",
              "indEmail",
              "issDate",
              "phoneNumber",
              "userName"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.ApplyIndividual"
      },
      "ApplyList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Apply"
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.ApplyList"
      },
      "ApplyLog": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "$ref": "#/components/schemas/OperateTime"
          },
          {
            "$ref": "#/components/schemas/SoftDelete"
          },
          {
            "type": "object",
            "properties": {
              "applyID": {
                "type": "string",
                "format": "uint64",
                "description": "申请单ID",
                "x-go-json": "applyID,string",
                "x-go-name": "ApplyID"
              },
              "content": {
                "type": "string",
                "description": "操作内容",
                "x-go-json": "content",
                "x-go-name": "Content"
              },
              "isDisplay": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bool"
                  },
                  {
                    "description": "客户是否可见"
                  }
                ],
                "x-go-json": "isDisplay",
                "x-go-name": "IsDisplay"
              },
              "operatorID": {
                "type": "string",
                "description": "操作人",
                "x-go-json": "operatorID",
                "x-go-name": "OperatorID"
              },
              "operatorName": {
                "type": "string",
                "description": "操作人名称",
                "x-go-json": "operatorName",
                "x-go-name": "OperatorName"
              }
            },
            "required": [
              "applyID",
              "content",
              "isDisplay",
              "operatorID",
              "operatorName"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.ApplyLog"
      },
      "ApplyLogList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ApplyLog"
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.ApplyLogList"
      },
      "ApplyMerchantInfo": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "$ref": "#/components/schemas/OperateTime"
          },
          {
            "$ref": "#/components/schemas/SoftDelete"
          },
          {
            "type": "object",
            "properties": {
              "accountID": {
                "type": "string",
                "format": "uint64",
                "description": "账户ID",
                "x-go-json": "accountID,string",
                "x-go-name": "AccountID"
              },
              "appId": {
                "type": "string",
                "description": "AppId",
                "x-go-json": "appId",
                "x-go-name": "AppId"
              },
              "applyID": {
                "type": "string",
                "format": "uint64",
                "description": "申请单ID",
                "x-go-json": "applyID,string",
                "x-go-name": "ApplyID"
              },
              "authPath": {
                "type": "string",
                "description": "当开通微信公众号支付时此字段必填,最多可填写5个路径，不同的路径使用英文逗号分隔",
                "x-go-json": "authPath",
                "x-go-name": "AuthPath"
              },
              "payType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvMerchantPayType"
                  },
                  {
                    "description": "支付类别"
                  }
                ],
                "x-go-json": "payType",
                "x-go-name": "PayType"
              },
              "payWay": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvMerchantPayWay"
                  },
                  {
                    "description": "支付方式"
                  }
                ],
                "x-go-json": "payWay",
                "x-go-name": "PayWay"
              },
              "servicePhone": {
                "type": "string",
                "description": "客服电话",
                "x-go-json": "servicePhone",
                "x-go-name": "ServicePhone"
              }
            },
            "required": [
              "accountID",
              "appId",
              "applyID",
              "authPath",
              "payType",
              "payWay",
              "servicePhone"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.ApplyMerchantInfo"
      },
      "ApplyMerchantInfoList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ApplyMerchantInfo"
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.ApplyMerchantInfoList"
      },
      "ApplyMyBank": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "$ref": "#/components/schemas/OperateTime"
          },
          {
            "$ref": "#/components/schemas/SoftDelete"
          },
          {
            "type": "object",
            "properties": {
              "appID": {
                "type": "string",
                "description": "网商分配的APPID",
                "x-go-json": "appID",
                "x-go-name": "AppID"
              },
              "applyID": {
                "type": "string",
                "format": "uint64",
                "description": "申请单ID",
                "x-go-json": "applyID,string",
                "x-go-name": "ApplyID"
              },
              "isvOrgID": {
                "type": "string",
                "description": "网商分配机构号",
                "x-go-json": "isvOrgID",
                "x-go-name": "IsvOrgId"
              },
              "priKey": {
                "type": "string",
                "description": "在网商留存私钥",
                "x-go-json": "priKey",
                "x-go-name": "PriKey"
              },
              "pubKey": {
                "type": "string",
                "description": "在网商留存的公钥",
                "x-go-json": "pubKey",
                "x-go-name": "PubKey"
              },
              "sftpPwd": {
                "type": "string",
                "description": "sftp密码，补单时必填",
                "x-go-json": "sftpPwd",
                "x-go-name": "SftpPwd"
              },
              "sftpUser": {
                "type": "string",
                "description": "sftp账户，补单时必填",
                "x-go-json": "sftpUser",
                "x-go-name": "SftpUser"
              },
              "testUID": {
                "type": "string",
                "description": "支付宝测试环境UID， 仅用于测试环境",
                "x-go-json": "testUID",
                "x-go-name": "TestUID"
              }
            },
            "required": [
              "appID",
              "applyID",
              "isvOrgID",
              "priKey",
              "pubKey",
              "sftpPwd",
              "sftpUser",
              "testUID"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.ApplyMyBank"
      },
      "ApplyRemoveBindCardBody": {
        "type": "object",
        "properties": {
          "applyId": {
            "type": "string",
            "format": "uint64",
            "minimum": 0,
            "description": "申请单id",
            "x-go-json": "applyId,string",
            "x-go-name": "ApplyID",
            "x-go-validate": "@uint64[0,]"
          }
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.ApplyRemoveBindCardBody"
      },
      "ApplyRemoveBindCardRsp": {
        "type": "object",
        "properties": {
          "deadLine": {
            "type": "string",
            "description": "打款截止 日期; yyyyMMdd,企业银行账户绑定时不为空;注:有效期:3个自然日",
            "x-go-json": "deadLine",
            "x-go-name": "DeadLine"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayAccountBindCardStatus"
              },
              {
                "description": "状态: 18=被动已打 款待验证 20=处理中 30=成功 40=失败，注:当企业绑卡确认、打款金 额已校验但未成功且剩余可验证次数\u003e=1 时，状态为 18=被动已打款待验证; 当接口字段均已校验成功，但交易未完成，状态为 20=处理中"
              }
            ],
            "x-go-json": "status",
            "x-go-name": "Status"
          }
        },
        "required": [
          "status",
          "deadLine"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.ApplyRemoveBindCardRsp"
      },
      "ApplyRetailer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "$ref": "#/components/schemas/SoftDelete"
          },
          {
            "type": "object",
            "properties": {
              "applyID": {
                "type": "string",
                "format": "uint64",
                "description": "申请单ID",
                "x-go-json": "applyID,string",
                "x-go-name": "ApplyID"
              },
              "city": {
                "type": "string",
                "description": "城市",
                "x-go-json": "city",
                "x-go-name": "City"
              },
              "cityName": {
                "type": "string",
                "description": "城市名称",
                "x-go-json": "cityName",
                "x-go-name": "CityName"
              },
              "district": {
                "type": "string",
                "description": "区/县",
                "x-go-json": "district",
                "x-go-name": "District"
              },
              "districtName": {
                "type": "string",
                "description": "区/县名称,注:详见附录(市县 区行政单位.pdf)，根据区县对应附录填写;新商户接入必填，存量商户可空",
                "x-go-json": "districtName",
                "x-go-name": "DistrictName"
              },
              "managerContactNumber": {
                "type": "string",
                "description": "经营者手机号码",
                "x-go-json": "managerContactNumber",
                "x-go-name": "ManagerContactNumber"
              },
              "managerCredentialAddress": {
                "type": "string",
                "description": "经营者身份证地址",
                "x-go-json": "managerCredentialAddress",
                "x-go-name": "ManagerCredentialAddress"
              },
              "managerCredentialNumber": {
                "type": "string",
                "description": "经营者证件号码",
                "x-go-json": "managerCredentialNumber",
                "x-go-name": "ManagerCredentialNumber"
              },
              "managerCredentialType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvApplyCredentialType"
                  },
                  {
                    "description": "经营者证件类型: 0-身份证, 2-外国护照, 5-港澳居民来往内地通行证, 6-台湾居民来往大陆通行证"
                  }
                ],
                "x-go-json": "managerCredentialType",
                "x-go-name": "ManagerCredentialType"
              },
              "managerEmail": {
                "type": "string",
                "description": "经营者邮箱",
                "x-go-json": "managerEmail",
                "x-go-name": "ManagerEmail"
              },
              "managerExpiryDate": {
                "type": "string",
                "description": "经营者证件到期日, 注:格式: yyyyMMdd;证件长期有效时为 20991231",
                "x-go-json": "managerExpiryDate",
                "x-go-name": "ManagerExpiryDate"
              },
              "managerIssDate": {
                "type": "string",
                "description": "经营者证件发证日 注:格式: yyyyMMdd",
                "x-go-json": "managerIssDate",
                "x-go-name": "ManagerIssDate"
              },
              "managerName": {
                "type": "string",
                "description": "经营者姓名",
                "x-go-json": "managerName",
                "x-go-name": "ManagerName"
              },
              "managerOccupation": {
                "type": "string",
                "description": "经营者职业: 1A=各类专业，技术人员 1B=国家机关， 党群组织，企事业单位的负责人 1C=办事人员和有关人员 1D=商业工作人员 1E=服务性工作人员 1F=农林牧渔劳 动者 1G=生产工作， 运输工作和部分 体力劳动者 1H=不便分类的 其他劳动者",
                "x-go-json": "managerOccupation",
                "x-go-name": "ManagerOccupation"
              },
              "province": {
                "type": "string",
                "description": "省份",
                "x-go-json": "province",
                "x-go-name": "Province"
              },
              "provinceName": {
                "type": "string",
                "description": "省份名称",
                "x-go-json": "provinceName",
                "x-go-name": "ProvinceName"
              },
              "retailerAddress": {
                "type": "string",
                "description": "经营地址,注:银行存管模式必填;常驻信息包括 (国家、省、市、 县、详细地址 )",
                "x-go-json": "retailerAddress",
                "x-go-name": "RetailerAddress"
              },
              "retailerBusinessScope": {
                "type": "string",
                "description": "经营范围",
                "x-go-json": "retailerBusinessScope",
                "x-go-name": "RetailerBusinessScope"
              },
              "retailerFormation": {
                "type": "string",
                "description": "组成形式: 10=个人经营 20=家庭经营",
                "x-go-json": "retailerFormation",
                "x-go-name": "RetailerFormation"
              },
              "retailerLicenseExpiryDate": {
                "type": "string",
                "description": "个体工商执照到期日,注:格式: yyyyMMdd;证件长期 有效时为 20991231",
                "x-go-json": "retailerLicenseExpiryDate",
                "x-go-name": "RetailerLicenseExpiryDate"
              },
              "retailerLicenseIssDate": {
                "type": "string",
                "description": "个体工商执照发证日",
                "x-go-json": "retailerLicenseIssDate",
                "x-go-name": "RetailerLicenseIssDate"
              },
              "retailerName": {
                "type": "string",
                "description": "个体工商字号",
                "x-go-json": "retailerName",
                "x-go-name": "RetailerName"
              },
              "retailerRegNumber": {
                "type": "string",
                "description": "个体工商注册号码",
                "x-go-json": "retailerRegNumber",
                "x-go-name": "RetailerRegNumber"
              }
            },
            "required": [
              "applyID",
              "city",
              "cityName",
              "district",
              "districtName",
              "managerContactNumber",
              "managerCredentialAddress",
              "managerCredentialNumber",
              "managerCredentialType",
              "managerEmail",
              "managerExpiryDate",
              "managerIssDate",
              "managerName",
              "managerOccupation",
              "province",
              "provinceName",
              "retailerAddress",
              "retailerBusinessScope",
              "retailerFormation",
              "retailerLicenseExpiryDate",
              "retailerLicenseIssDate",
              "retailerName",
              "retailerRegNumber"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.ApplyRetailer"
      },
      "ApplyUpdateMerchantInfoBody": {
        "type": "object",
        "properties": {
          "applyId": {
            "type": "string",
            "format": "uint64",
            "minimum": 1,
            "description": "申请单id",
            "x-go-json": "applyId,string",
            "x-go-name": "ApplyID",
            "x-go-validate": "@uint64[1,]"
          },
          "merchantInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MerchantInfo"
            },
            "description": "进件信息",
            "x-go-json": "merchantInfo",
            "x-go-name": "MerchantInfo"
          }
        },
        "required": [
          "applyId",
          "merchantInfo"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.ApplyUpdateMerchantInfoBody"
      },
      "ApplyUpdateMerchantInfoForBackBody": {
        "type": "object",
        "properties": {
          "applyId": {
            "type": "string",
            "format": "uint64",
            "minimum": 1,
            "description": "申请单id",
            "x-go-json": "applyId,string",
            "x-go-name": "ApplyID",
            "x-go-validate": "@uint64[1,]"
          },
          "merchantInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MerchantInfo"
            },
            "description": "进件信息",
            "x-go-json": "merchantInfo",
            "x-go-name": "MerchantInfo"
          },
          "operatorID": {
            "type": "string",
            "description": "操作人id",
            "x-go-json": "operatorID",
            "x-go-name": "OperatorId",
            "x-go-validate": "@char[1,32]"
          },
          "operatorName": {
            "type": "string",
            "description": "操作人名称",
            "x-go-json": "operatorName",
            "x-go-name": "OperatorName",
            "x-go-validate": "@char[1,32]"
          }
        },
        "required": [
          "applyId",
          "merchantInfo",
          "operatorID",
          "operatorName"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.ApplyUpdateMerchantInfoForBackBody"
      },
      "ApplyUploadBody": {
        "type": "object",
        "properties": {
          "imageInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplyUploadImageInfo"
            },
            "description": "影印件明细，出现次数大于等于1次，单次最多上送4条明细",
            "x-go-json": "imageInfo",
            "x-go-name": "ImageInfo",
            "x-go-validate": "@array[1,4]"
          },
          "userType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayAccountUserType"
              },
              {
                "description": "用户类型"
              }
            ],
            "x-go-json": "userType",
            "x-go-name": "UserType"
          }
        },
        "required": [
          "userType",
          "imageInfo"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.ApplyUploadBody"
      },
      "ApplyUploadImageInfo": {
        "type": "object",
        "properties": {
          "imageContent": {
            "type": "string",
            "description": "影印件,图片JPG格式，大小不超过500KB，图片二进制数据转BASE64编码",
            "x-go-json": "imageContent",
            "x-go-name": "ImageContent"
          },
          "imageType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayImageType"
              },
              {
                "description": "影印件类别: 10=身份证人像面 11=身份证国徽面 20=统一社会信用代码证 30=个体工商营业执照"
              }
            ],
            "x-go-json": "imageType",
            "x-go-name": "ImageType"
          }
        },
        "required": [
          "imageType",
          "imageContent"
        ],
        "description": "影印件明细，出现次数大于等于1次，单次最 多上送 4 条明细",
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.ApplyUploadImageInfo"
      },
      "ApplyUploadRsp": {
        "type": "object",
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayUploadStatus"
              },
              {
                "description": "交易状态: 20=采集成功 30=采集失败"
              }
            ],
            "x-go-json": "status",
            "x-go-name": "Status"
          },
          "txSN": {
            "type": "string",
            "description": "交易流水号，同请求",
            "x-go-json": "txSN",
            "x-go-name": "TxSN"
          }
        },
        "required": [
          "txSN",
          "status"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.ApplyUploadRsp"
      },
      "AttachInfo": {
        "type": "object",
        "properties": {
          "appID": {
            "type": "string",
            "description": "当使用JSAPI、小程序时此字段必填",
            "x-go-json": "appID",
            "x-go-name": "AppID",
            "x-go-validate": "@char[0,32]"
          },
          "authPath": {
            "type": "string",
            "description": "当开通微信公众号支付时此字段必填,最多可填写5个路径，不同的路径使用英文逗号分隔",
            "x-go-json": "authPath",
            "x-go-name": "AuthPath",
            "x-go-validate": "@char[0,1024]"
          },
          "payType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayAccountPayType"
              },
              {
                "description": "支付类别 00-正扫 01-反扫 10-APP 11-JSAPI 12-小程序 13-H5， 11，12 必须进件，否则公众号支付无法使用"
              }
            ],
            "x-go-json": "payType",
            "x-go-name": "PayType"
          }
        },
        "required": [
          "payType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.AttachInfo"
      },
      "Attachment": {
        "type": "object",
        "properties": {
          "attType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvApplyAttType"
              },
              {
                "description": "附件类型:\nID_FACE 身份证人像面\nID_BACK 身份证国徽面\nORGANISMS 活体照片/经营者手持身份证照片\nCREDIT_CODE_CERTIFICATE 统一社会信用代码证\nOPEN_CERTIFICATE 基本户开户证明\nBUSINESS_LICENSE 个体工商营业执照\nSTORE 经营场所照片\nSTORE_AND_PERSON 经营者与店铺门头合照\nSTORE_INNER 经营场所内景照片\nSTORE_BIZ 经营场所证明文件,不限于营业场所租赁协议或者产权证明、集中经营场所管理方出具的证明文件等\nBANK_CARD 银行卡正面照片\nAUTH 签字授权书 (法人手机号仍不能通过运营商三要素验证，可上传签字授权书以便合规性审核)\nGOVER 事业单位法人证书\nSETT_AUTH 结算账户授权书(结算账户对私时，且允许法人与结算账户不一致时，必填)\nOTHER 其他审核材料"
              }
            ],
            "x-go-json": "attType",
            "x-go-name": "AttType"
          },
          "imageCollectionTxSN": {
            "type": "string",
            "description": "中金时有效，服务方影印件采集交易流水号, 类型为STORE=经营场所照片， 时可不填，其他类型均为必填",
            "x-go-json": "imageCollectionTxSN,omitempty",
            "x-go-name": "ImageCollectionTxSN",
            "x-go-validate": "@char[0,32]"
          },
          "name": {
            "type": "string",
            "description": "附件名称",
            "x-go-json": "name,omitempty",
            "x-go-name": "Name",
            "x-go-validate": "@char[0,64]"
          },
          "url": {
            "type": "string",
            "description": "附件地址",
            "x-go-json": "url",
            "x-go-name": "Url",
            "x-go-validate": "@char[1,256]"
          }
        },
        "required": [
          "attType",
          "url"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.Attachment"
      },
      "BackOCRReqBody": {
        "type": "object",
        "properties": {
          "images": {
            "type": "string",
            "description": "图片base64,图片大小建议不要超过 1.5M，防止网络传输延时过长",
            "x-go-json": "images",
            "x-go-name": "Images"
          }
        },
        "required": [
          "images"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/tools.BackOCRReqBody"
      },
      "BackOcrRsp": {
        "type": "object",
        "properties": {
          "configStr": {
            "type": "string",
            "description": "配置信息，同输入configure",
            "x-go-json": "configStr",
            "x-go-name": "ConfigStr"
          },
          "endDate": {
            "type": "string",
            "description": "有效期结束时间",
            "x-go-json": "endDate",
            "x-go-name": "EndDate"
          },
          "isFake": {
            "type": "boolean",
            "description": "是否是复印件",
            "x-go-json": "isFake",
            "x-go-name": "IsFake"
          },
          "issue": {
            "type": "string",
            "description": "签发机关",
            "x-go-json": "issue",
            "x-go-name": "Issue"
          },
          "startDate": {
            "type": "string",
            "description": "有效期起始时间",
            "x-go-json": "startDate",
            "x-go-name": "StartDate"
          },
          "success": {
            "type": "boolean",
            "description": "识别结果，true表示成功，false表示失败",
            "x-go-json": "success",
            "x-go-name": "Success"
          }
        },
        "required": [
          "configStr",
          "startDate",
          "endDate",
          "issue",
          "isFake",
          "success"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/tools.BackOcrRsp"
      },
      "BalanceInfo": {
        "type": "object",
        "properties": {
          "PAY": {
            "type": "string",
            "description": "可以支付金额",
            "x-go-json": "PAY",
            "x-go-name": "Pay"
          },
          "WITHDRAW": {
            "type": "string",
            "description": "可以提现金额",
            "x-go-json": "WITHDRAW",
            "x-go-name": "Withdraw"
          }
        },
        "required": [
          "PAY",
          "WITHDRAW"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_mybank_gateway.BalanceInfo"
      },
      "BalanceListResp": {
        "type": "object",
        "properties": {
          "accountExternalNo": {
            "type": "string",
            "x-go-json": "accountExternalNo",
            "x-go-name": "AccountExternalNo"
          },
          "accountType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceMybankGatewayBalanceType"
              },
              {
                "description": "金额类型 ［FREEZE, BALANCE, CLEARED, TRADE_DEPOSIT］ FREEZE-表示当前处于冻结（未分账）的余额。 BALANCE-标识当前可用于提现或余额支付的余额, CLEARED-待结算的余额, TRADE_DEPOSIT-表示当前仅用于支付的余额（通用开户接口开保证金户后可见"
              }
            ],
            "x-go-json": "accountType",
            "x-go-name": "AccountType"
          },
          "currency": {
            "type": "string",
            "description": "币种（默认为CNY-人民币）",
            "x-go-json": "currency",
            "x-go-name": "Currency"
          },
          "totalAmount": {
            "type": "integer",
            "format": "int64",
            "description": "金额单位为分",
            "x-go-json": "totalAmount",
            "x-go-name": "TotalAmount"
          }
        },
        "required": [
          "accountExternalNo",
          "accountType",
          "currency",
          "totalAmount"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_mybank_gateway.BalanceListResp"
      },
      "Bank": {
        "type": "object",
        "properties": {
          "bankCode": {
            "type": "string",
            "description": "银行编码",
            "x-go-json": "bankCode",
            "x-go-name": "BankCode"
          },
          "bankName": {
            "type": "string",
            "description": "银行名称",
            "x-go-json": "bankName",
            "x-go-name": "BankName"
          }
        },
        "required": [
          "bankCode",
          "bankName"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/tools.Bank"
      },
      "BankAccount": {
        "type": "object",
        "properties": {
          "bankAccountNumber": {
            "type": "string",
            "description": "银行账户号码",
            "x-go-json": "bankAccountNumber",
            "x-go-name": "BankAccountNumber",
            "x-go-validate": "@char[0,32]"
          },
          "bankCity": {
            "type": "string",
            "description": "城市,注:企业用户开户绑卡时必填",
            "x-go-json": "bankCity",
            "x-go-name": "BankCity",
            "x-go-validate": "@char[0,32]"
          },
          "bankCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvBankType"
              },
              {
                "description": "绑定银行ID,操作标识 OperationFlag=10 时必填"
              }
            ],
            "x-go-json": "bankCode",
            "x-go-name": "BankCode",
            "x-go-validate": "@char[0,20]"
          },
          "bankPhoneNumber": {
            "type": "string",
            "description": "银行卡预留手机号码,注:个人用户开户绑卡时，不填默认为开户手机号码",
            "x-go-json": "bankPhoneNumber",
            "x-go-name": "BankPhoneNumber",
            "x-go-validate": "@char[0,16]"
          },
          "bankProvince": {
            "type": "string",
            "description": "省份,注:企业用户开户绑卡时必填",
            "x-go-json": "bankProvince",
            "x-go-name": "BankProvince",
            "x-go-validate": "@char[0,32]"
          },
          "branchName": {
            "type": "string",
            "description": "分支行名称,注:企业用户开户绑卡时必填",
            "x-go-json": "branchName",
            "x-go-name": "BranchName",
            "x-go-validate": "@char[0,128]"
          }
        },
        "description": "绑卡域",
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.BankAccount"
      },
      "BankCardParam": {
        "type": "object",
        "properties": {
          "accountType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceMybankGatewayAccountType"
              },
              {
                "description": "账户类型。可选值： 01：对私账户（自然人、个体工商户可选） 02：对公账户（企业类型才可选填写）"
              }
            ],
            "x-go-json": "accountType",
            "x-go-name": "AccountType"
          },
          "bankCardNo": {
            "type": "string",
            "description": "银行卡号\n备注：\n结算到银行卡时、必填，结算到支付宝时、LogonId和bankcardNo二选一，不能同时为空\n结算到支付宝时，填写支付宝userId 银行卡号、开户人名称及开户人证件号码等信息会进行核身，核身不通过无法完成商户进驻，合作方须注意银行卡信息的正确性",
            "x-go-json": "bankCardNo",
            "x-go-name": "BankCardNo",
            "x-go-validate": "@char[1,32]"
          },
          "bankCertName": {
            "type": "string",
            "description": "银行账户户名。当商户类型是“01 自然人”、“02 个人工商户”时，开户人与须与负责人名称一致；当商户类型是“03 企业商户”时，须与企业法人名称一致。",
            "x-go-json": "bankCertName",
            "x-go-name": "BankCertName",
            "x-go-validate": "@char[1,256]"
          },
          "branchCity": {
            "type": "string",
            "description": "开户支行所在市（按照附录6.5国标省市区号录入）",
            "x-go-json": "branchCity",
            "x-go-name": "BranchCity",
            "x-go-validate": "@char[0,16]"
          },
          "branchName": {
            "type": "string",
            "description": "开户支行名称",
            "x-go-json": "branchName",
            "x-go-name": "BranchName",
            "x-go-validate": "@char[0,128]"
          },
          "branchProvince": {
            "type": "string",
            "description": "开户支行所在省（按照附录6.5国标省市区号录入）",
            "x-go-json": "branchProvince",
            "x-go-name": "BranchProvince",
            "x-go-validate": "@char[0,16]"
          },
          "cardHolderAddress": {
            "type": "string",
            "description": "持卡人地址 对公账户不需要填写。",
            "x-go-json": "cardHolderAddress",
            "x-go-name": "CardHolderAddress",
            "x-go-validate": "@char[0,128]"
          },
          "certNo": {
            "type": "string",
            "description": "持卡人证件号码 对公账户不需要填写。",
            "x-go-json": "certNo",
            "x-go-name": "CertNo",
            "x-go-validate": "@char[0,256]"
          },
          "certType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceMybankGatewayCertType"
              },
              {
                "description": "持卡人证件类型。可选值： 01：身份证 对公账户不需要填写。"
              }
            ],
            "x-go-json": "certType",
            "x-go-name": "CertType"
          },
          "contactLine": {
            "type": "string",
            "description": "联行号。\n备注：\n1、MerchantType=03 企业商户，必须上送正确的联行号，否则导致清算打款失败。\n2、使用5.2提供的联行号表。填了联行号以联行号为准，不再与开户支行名称、开户支行省、市的参数进行匹配。\n3、通过/service-payment-gateway/v0/tools/getInsOutCode 接口搜索银行名称获取",
            "x-go-json": "contactLine",
            "x-go-name": "ContactLine",
            "x-go-validate": "@char[0,64]"
          },
          "logonId": {
            "type": "string",
            "description": "支付宝登陆账号",
            "x-go-json": "logonId",
            "x-go-name": "LogonId",
            "x-go-validate": "@char[0,32]"
          },
          "settlementAccountType": {
            "type": "string",
            "description": "结算类型。可选值： 01：银行卡 02: 支付宝 非必填，默认值01",
            "default": "01",
            "x-go-json": "settlementAccountType",
            "x-go-name": "SettlementAccountType"
          }
        },
        "required": [
          "bankCardNo",
          "bankCertName",
          "accountType",
          "contactLine"
        ],
        "description": "清算卡（若请求报文上送该参数项，则该参数项下所有子项除“联行号”外必须上送。）\n说明; 个人结算卡，请上传Ⅰ类户。央行规定：银行对Ⅱ类账户设置1万元人民币的单日支付限额，银行对Ⅲ类账户设置1000元账户资金限额。（Ⅰ类户指的是通过传统银行柜面开立的、满足实名制所有严格要求的账户；Ⅱ类户和Ⅲ类户可以通过网上银行和手机银行等电子渠道申请开户。）",
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/mybank.BankCardParam"
      },
      "BankTransferDoSplitByTransBody": {
        "type": "object",
        "properties": {
          "fee": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "description": "手续费扣费金额, 坐扣时生效",
            "default": "0",
            "x-go-json": "fee",
            "x-go-name": "Fee",
            "x-go-validate": "@int64[0,]"
          },
          "feeRate": {
            "type": "number",
            "format": "double",
            "description": "手续费扣费汇率，坐扣时生效",
            "default": "0",
            "x-go-json": "feeRate",
            "x-go-name": "FeeRate"
          }
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/trans.BankTransferDoSplitByTransBody"
      },
      "BaseAccount": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "$ref": "#/components/schemas/OperateTime"
          },
          {
            "$ref": "#/components/schemas/SoftDelete"
          },
          {
            "type": "object",
            "properties": {
              "accountID": {
                "type": "string",
                "format": "uint64",
                "description": "账户ID",
                "x-go-json": "accountID,string",
                "x-go-name": "AccountID"
              },
              "accountName": {
                "type": "string",
                "description": "账户名称",
                "x-go-json": "accountName",
                "x-go-name": "AccountName"
              },
              "accountRealName": {
                "type": "string",
                "description": "账户交易时名称",
                "x-go-json": "accountRealName",
                "x-go-name": "AccountRealName"
              },
              "accountStatus": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvAccountStatus"
                  },
                  {
                    "description": "账户状态"
                  }
                ],
                "x-go-json": "accountStatus",
                "x-go-name": "AccountStatus"
              },
              "balance": {
                "type": "string",
                "format": "int64",
                "description": "账户总余额",
                "x-go-json": "balance,string",
                "x-go-name": "Balance"
              },
              "bodyType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvAccountBodyType"
                  },
                  {
                    "description": "账号主体类型"
                  }
                ],
                "x-go-json": "bodyType",
                "x-go-name": "BodyType"
              },
              "cloudAccountID": {
                "type": "string",
                "description": "关联的通联账户ID",
                "x-go-json": "cloudAccountID",
                "x-go-name": "CloudAccountID"
              },
              "companyID": {
                "type": "integer",
                "format": "uint64",
                "description": "创建公司返回的公司ID",
                "x-go-json": "companyID",
                "x-go-name": "CompanyID"
              },
              "handingFeeBalance": {
                "type": "integer",
                "format": "int64",
                "description": "手续费余额",
                "x-go-json": "handingFeeBalance",
                "x-go-name": "HandingFeeBalance"
              },
              "handingFeeMode": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvHandingFeeMode"
                  },
                  {
                    "description": "扣费模式，预充值/实时"
                  }
                ],
                "x-go-json": "handingFeeMode",
                "x-go-name": "HandingFeeMode"
              },
              "isMain": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bool"
                  },
                  {
                    "description": "是否主账户"
                  }
                ],
                "x-go-json": "isMain",
                "x-go-name": "IsMain"
              },
              "isRealName": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvAccountRealNameStatus"
                  },
                  {
                    "description": "是否实名认证"
                  }
                ],
                "x-go-json": "isRealName",
                "x-go-name": "IsRealName"
              },
              "mode": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvAccountMode"
                  },
                  {
                    "description": "商户模式"
                  }
                ],
                "x-go-json": "mode",
                "x-go-name": "Mode"
              },
              "parentAccountID": {
                "type": "string",
                "format": "uint64",
                "description": "父级账户ID",
                "x-go-json": "parentAccountID,string",
                "x-go-name": "ParentAccountID"
              },
              "platform": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvAccountPlatformType"
                  },
                  {
                    "description": "账户来源平台"
                  }
                ],
                "x-go-json": "platform",
                "x-go-name": "Platform"
              },
              "productID": {
                "type": "string",
                "format": "uint64",
                "description": "使用的开户产品，从通联上线时开始有次值",
                "x-go-json": "productID,string",
                "x-go-name": "ProductID"
              },
              "settleMode": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvSettleMode"
                  },
                  {
                    "description": "结算到账模式"
                  }
                ],
                "x-go-json": "settleMode",
                "x-go-name": "SettleMode"
              },
              "settlementLock": {
                "type": "integer",
                "format": "int64",
                "description": "市场模式，提现锁，为最后一条split_bill_id, 有值时表示，有处理中的提现任务",
                "x-go-json": "settlementLock",
                "x-go-name": "SettlementLock"
              },
              "splitMode": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvSplitMode"
                  },
                  {
                    "description": "分账模式，交易时分账/交易后分账"
                  }
                ],
                "x-go-json": "splitMode",
                "x-go-name": "SplitMode"
              },
              "switchStatusTime": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MySQLTimestamp"
                  },
                  {
                    "description": "账户启用停用时间"
                  }
                ],
                "x-go-json": "switchStatusTime",
                "x-go-name": "SwitchStatusTime"
              },
              "thirdAccountID": {
                "type": "string",
                "description": "关联的第三方账户ID",
                "x-go-json": "thirdAccountID",
                "x-go-name": "ThirdAccountID"
              },
              "uID": {
                "type": "string",
                "description": "关联用户中心的ID",
                "x-go-json": "uID",
                "x-go-name": "UID"
              },
              "userType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvAccountUserType"
                  },
                  {
                    "description": "用户类型"
                  }
                ],
                "x-go-json": "userType",
                "x-go-name": "UserType"
              },
              "version": {
                "type": "integer",
                "format": "uint64",
                "description": "乐观锁",
                "x-go-json": "version",
                "x-go-name": "Version"
              },
              "vspMID": {
                "type": "string",
                "format": "uint64",
                "description": "收银宝支付服务侧商户号， 由于通联每次提审都需要不同商户号",
                "x-go-json": "vspMID,string",
                "x-go-name": "VspMID"
              },
              "vspMerchantID": {
                "type": "string",
                "description": "关联的收银宝商户号",
                "x-go-json": "vspMerchantID",
                "x-go-name": "VspMerchantID"
              }
            },
            "required": [
              "accountID",
              "accountName",
              "accountRealName",
              "accountStatus",
              "balance",
              "bodyType",
              "cloudAccountID",
              "companyID",
              "handingFeeBalance",
              "handingFeeMode",
              "isMain",
              "isRealName",
              "mode",
              "parentAccountID",
              "platform",
              "productID",
              "settleMode",
              "settlementLock",
              "splitMode",
              "switchStatusTime",
              "thirdAccountID",
              "uID",
              "userType",
              "version",
              "vspMID",
              "vspMerchantID"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseAccount"
      },
      "BaseAccountBankCard": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "$ref": "#/components/schemas/OperateTime"
          },
          {
            "$ref": "#/components/schemas/SoftDelete"
          },
          {
            "type": "object",
            "properties": {
              "accountID": {
                "type": "string",
                "format": "uint64",
                "description": "账户ID",
                "x-go-json": "accountID,string",
                "x-go-name": "AccountID"
              },
              "bankAddress": {
                "type": "string",
                "description": "开户行地址",
                "x-go-json": "bankAddress",
                "x-go-name": "BankAddress"
              },
              "bankCity": {
                "type": "string",
                "description": "开户行城市",
                "x-go-json": "bankCity",
                "x-go-name": "BankCity"
              },
              "bankCode": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvBankType"
                  },
                  {
                    "description": "开户行"
                  }
                ],
                "x-go-json": "bankCode",
                "x-go-name": "BankCode"
              },
              "bankName": {
                "type": "string",
                "description": "开户行分支行名称",
                "x-go-json": "bankName",
                "x-go-name": "BankName"
              },
              "bankProvince": {
                "type": "string",
                "description": "开户行分支行省份",
                "x-go-json": "bankProvince",
                "x-go-name": "BankProvince"
              },
              "bindID": {
                "type": "string",
                "format": "uint64",
                "description": "绑定序号",
                "x-go-json": "bindID,string",
                "x-go-name": "BindID"
              },
              "bindStatus": {
                "type": "string",
                "description": "中金账户模式,绑定状态",
                "x-go-json": "bindStatus",
                "x-go-name": "BindStatus"
              },
              "bindTxSn": {
                "type": "string",
                "description": "中金账户模式，绑定流水号",
                "x-go-json": "bindTxSn",
                "x-go-name": "BindTxSn"
              },
              "cardAccountType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvCardAccountType"
                  },
                  {
                    "description": "绑定账户类型"
                  }
                ],
                "x-go-json": "cardAccountType",
                "x-go-name": "CardAccountType"
              },
              "cardName": {
                "type": "string",
                "description": "户名",
                "x-go-json": "cardName",
                "x-go-name": "CardName"
              },
              "cardNo": {
                "type": "string",
                "description": "绑定的银行卡卡号",
                "x-go-json": "cardNo",
                "x-go-name": "CardNo"
              },
              "cnapsCode": {
                "type": "string",
                "description": "人民银行联行号",
                "x-go-json": "cnapsCode",
                "x-go-name": "CNAPSCode"
              },
              "parentBankCode": {
                "type": "string",
                "description": "所属银行",
                "x-go-json": "parentBankCode",
                "x-go-name": "ParentBankCode"
              },
              "parentBankName": {
                "type": "string",
                "description": "开户银行名称,通联企业绑卡时必填",
                "x-go-json": "parentBankName",
                "x-go-name": "ParentBankName"
              },
              "phone": {
                "type": "string",
                "description": "银行预留手机号",
                "x-go-json": "phone",
                "x-go-name": "Phone"
              },
              "status": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bool"
                  },
                  {
                    "description": "绑定状态"
                  }
                ],
                "x-go-json": "status",
                "x-go-name": "Status"
              }
            },
            "required": [
              "accountID",
              "bankAddress",
              "bankCity",
              "bankCode",
              "bankName",
              "bankProvince",
              "bindID",
              "bindStatus",
              "bindTxSn",
              "cardAccountType",
              "cardName",
              "cardNo",
              "cnapsCode",
              "parentBankCode",
              "parentBankName",
              "phone",
              "status"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseAccountBankCard"
      },
      "BaseAccountBankCardList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/BaseAccountBankCard"
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseAccountBankCardList"
      },
      "BaseAccountChannel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "$ref": "#/components/schemas/OperateTime"
          },
          {
            "$ref": "#/components/schemas/SoftDelete"
          },
          {
            "type": "object",
            "properties": {
              "accountID": {
                "type": "integer",
                "format": "uint64",
                "description": "账户ID",
                "x-go-json": "accountID",
                "x-go-name": "AccountID"
              },
              "channelType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvChannelType"
                  },
                  {
                    "description": "渠道类型"
                  }
                ],
                "x-go-json": "channelType",
                "x-go-name": "ChannelType"
              },
              "config": {
                "type": "string",
                "description": "支付渠道支付参数配置",
                "x-go-json": "config",
                "x-go-name": "Config"
              },
              "status": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvAccountChannelStatus"
                  },
                  {
                    "description": "支付渠道开通/关闭状态"
                  }
                ],
                "x-go-json": "status",
                "x-go-name": "Status"
              },
              "terminalMerchantID": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bool"
                  },
                  {
                    "description": "是否使用accountID作为终端商户号, 默认为true"
                  }
                ],
                "x-go-json": "terminalMerchantID",
                "x-go-name": "TerminalMerchantID"
              }
            },
            "required": [
              "accountID",
              "channelType",
              "config",
              "status",
              "terminalMerchantID"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseAccountChannel"
      },
      "BaseAccountHandingFeeReduceRule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "$ref": "#/components/schemas/OperateTime"
          },
          {
            "$ref": "#/components/schemas/SoftDelete"
          },
          {
            "type": "object",
            "properties": {
              "accountID": {
                "type": "integer",
                "format": "uint64",
                "description": "收款账户ID",
                "x-go-json": "accountID",
                "x-go-name": "AccountID"
              },
              "config": {
                "type": "string",
                "description": "来账识别扣费配置，按交易金额阶梯扣费,json数组",
                "x-go-json": "config",
                "x-go-name": "Config"
              },
              "max": {
                "type": "integer",
                "format": "int64",
                "description": "最大扣费金额，若设置此值，当计算金额大于此金额时使用此金额",
                "x-go-json": "max",
                "x-go-name": "Max"
              },
              "min": {
                "type": "integer",
                "format": "int64",
                "description": "最小扣费金额 ，若设置此值，当计算得出金额小于此值时使用此金额扣费",
                "x-go-json": "min",
                "x-go-name": "Min"
              },
              "operator": {
                "type": "string",
                "description": "创建人",
                "x-go-json": "operator",
                "x-go-name": "Operator"
              },
              "operatorID": {
                "type": "string",
                "description": "创建人ID",
                "x-go-json": "operatorID",
                "x-go-name": "OperatorID"
              },
              "payMethod": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvReducePayMethodType"
                  },
                  {
                    "description": "支付方式"
                  }
                ],
                "x-go-json": "payMethod",
                "x-go-name": "PayMethod"
              },
              "reduceMode": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvReduceMode"
                  },
                  {
                    "description": "扣费模式"
                  }
                ],
                "x-go-json": "reduceMode",
                "x-go-name": "ReduceMode"
              },
              "reduceValue": {
                "type": "number",
                "format": "double",
                "description": "扣费值, 扣费模式为按单笔=扣费金额， 扣费模式为按比例=扣费比例 小数表示",
                "x-go-json": "reduceValue",
                "x-go-name": "ReduceValue"
              }
            },
            "required": [
              "accountID",
              "config",
              "max",
              "min",
              "operator",
              "operatorID",
              "payMethod",
              "reduceMode",
              "reduceValue"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseAccountHandingFeeReduceRule"
      },
      "BaseAccountHandingFeeReduceRuleList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/BaseAccountHandingFeeReduceRule"
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseAccountHandingFeeReduceRuleList"
      },
      "BaseAccountMerchant": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "$ref": "#/components/schemas/OperateTime"
          },
          {
            "$ref": "#/components/schemas/SoftDelete"
          },
          {
            "type": "object",
            "properties": {
              "accountID": {
                "type": "string",
                "format": "uint64",
                "description": "账户ID",
                "x-go-json": "accountID,string",
                "x-go-name": "AccountID"
              },
              "appId": {
                "type": "string",
                "description": "AppId",
                "x-go-json": "appId",
                "x-go-name": "AppId"
              },
              "authPath": {
                "type": "string",
                "description": "当开通微信公众号支付时此字段必填,最多可填写5个路径，不同的路径使用英文逗号分隔",
                "x-go-json": "authPath",
                "x-go-name": "AuthPath"
              },
              "authStatus": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvMerchantAuthStatus"
                  },
                  {
                    "description": "进件信息状态, 兼容原来数据，默认为3=服务商已全部授权"
                  }
                ],
                "x-go-json": "authStatus",
                "x-go-name": "AuthStatus"
              },
              "payType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvMerchantPayType"
                  },
                  {
                    "description": "支付类别"
                  }
                ],
                "x-go-json": "payType",
                "x-go-name": "PayType"
              },
              "payWay": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvMerchantPayWay"
                  },
                  {
                    "description": "支付方式"
                  }
                ],
                "x-go-json": "payWay",
                "x-go-name": "PayWay"
              },
              "servicePhone": {
                "type": "string",
                "description": "客服电话",
                "x-go-json": "servicePhone",
                "x-go-name": "ServicePhone"
              },
              "txSn": {
                "type": "string",
                "description": "流水",
                "x-go-json": "txSn",
                "x-go-name": "TxSn"
              }
            },
            "required": [
              "accountID",
              "appId",
              "authPath",
              "authStatus",
              "payType",
              "payWay",
              "servicePhone",
              "txSn"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseAccountMerchant"
      },
      "BaseAccountMerchantList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/BaseAccountMerchant"
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseAccountMerchantList"
      },
      "BaseAccountWhitelist": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "$ref": "#/components/schemas/OperateTime"
          },
          {
            "$ref": "#/components/schemas/SoftDelete"
          },
          {
            "type": "object",
            "properties": {
              "bankCode": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvBankType"
                  },
                  {
                    "description": "开户行"
                  }
                ],
                "x-go-json": "bankCode",
                "x-go-name": "BankCode"
              },
              "cardName": {
                "type": "string",
                "description": "付款银行账户名称",
                "x-go-json": "cardName",
                "x-go-name": "CardName"
              },
              "cardNo": {
                "type": "string",
                "description": "付款银行账户号码",
                "x-go-json": "cardNo",
                "x-go-name": "CardNo"
              },
              "paymentAccountID": {
                "type": "string",
                "format": "uint64",
                "description": "付款账户id",
                "x-go-json": "paymentAccountID,string",
                "x-go-name": "PaymentAccountID"
              },
              "receiveAccountID": {
                "type": "string",
                "format": "uint64",
                "description": "收款账户ID",
                "x-go-json": "receiveAccountID,string",
                "x-go-name": "ReceiveAccountID"
              },
              "status": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvWhitelistStatus"
                  },
                  {
                    "description": "白名单状态"
                  }
                ],
                "x-go-json": "status",
                "x-go-name": "Status"
              },
              "txSn": {
                "type": "string",
                "description": "流水号, 保存最后操作流水号, 开通即为开通流水，注销即为注销流水号",
                "x-go-json": "txSn",
                "x-go-name": "TxSn"
              },
              "wlID": {
                "type": "string",
                "format": "uint64",
                "description": "白名单id",
                "x-go-json": "wlID,string",
                "x-go-name": "WLID"
              }
            },
            "required": [
              "bankCode",
              "cardName",
              "cardNo",
              "paymentAccountID",
              "receiveAccountID",
              "status",
              "txSn",
              "wlID"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseAccountWhitelist"
      },
      "BaseArea": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "type": "object",
            "properties": {
              "areaId": {
                "type": "integer",
                "format": "int64",
                "description": "地区id",
                "x-go-json": "areaId",
                "x-go-name": "AreaId"
              },
              "areaName": {
                "type": "string",
                "description": "地区名称",
                "x-go-json": "areaName",
                "x-go-name": "AreaName"
              },
              "name": {
                "type": "string",
                "description": "省市名称",
                "x-go-json": "name",
                "x-go-name": "Name"
              },
              "parentAreaId": {
                "type": "integer",
                "format": "int64",
                "description": "父id",
                "x-go-json": "parentAreaId",
                "x-go-name": "ParentAreaId"
              }
            },
            "required": [
              "areaId",
              "areaName",
              "name",
              "parentAreaId"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseArea"
      },
      "BaseAreaList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/BaseArea"
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseAreaList"
      },
      "BaseCloudAreaCode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "type": "object",
            "properties": {
              "areaId": {
                "type": "integer",
                "format": "int64",
                "description": "地区id",
                "x-go-json": "areaId",
                "x-go-name": "AreaId"
              },
              "areaName": {
                "type": "string",
                "description": "地区名称",
                "x-go-json": "areaName",
                "x-go-name": "AreaName"
              }
            },
            "required": [
              "areaId",
              "areaName"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseCloudAreaCode"
      },
      "BaseCloudAreaCodeList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/BaseCloudAreaCode"
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseCloudAreaCodeList"
      },
      "BaseCpcnArea": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "type": "object",
            "properties": {
              "areaId": {
                "type": "integer",
                "format": "int64",
                "description": "地区id",
                "x-go-json": "areaId",
                "x-go-name": "AreaId"
              },
              "areaName": {
                "type": "string",
                "description": "地区名称",
                "x-go-json": "areaName",
                "x-go-name": "AreaName"
              }
            },
            "required": [
              "areaId",
              "areaName"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseCpcnArea"
      },
      "BaseCpcnAreaList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/BaseCpcnArea"
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseCpcnAreaList"
      },
      "BaseHandingFee": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "$ref": "#/components/schemas/OperateTime"
          },
          {
            "$ref": "#/components/schemas/SoftDelete"
          },
          {
            "type": "object",
            "properties": {
              "accountID": {
                "type": "string",
                "format": "uint64",
                "description": "账户ID",
                "x-go-json": "accountID,string",
                "x-go-name": "AccountID"
              },
              "amount": {
                "type": "integer",
                "format": "int64",
                "description": "金额,充值=充值金额，消费=扣款金额",
                "x-go-json": "amount",
                "x-go-name": "Amount"
              },
              "channelType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvChannelType"
                  },
                  {
                    "description": "支付方式"
                  }
                ],
                "x-go-json": "channelType",
                "x-go-name": "ChannelType"
              },
              "comment": {
                "type": "string",
                "description": "说明",
                "x-go-json": "comment",
                "x-go-name": "Comment"
              },
              "handingFeeBalance": {
                "type": "integer",
                "format": "int64",
                "description": "剩余金额",
                "x-go-json": "handingFeeBalance",
                "x-go-name": "HandingFeeBalance"
              },
              "hfID": {
                "type": "string",
                "format": "uint64",
                "description": "流水ID",
                "x-go-json": "hfID,string",
                "x-go-name": "HFID"
              },
              "orderNo": {
                "type": "string",
                "description": "关联订单号, 目前只有中金来账识别有此值",
                "x-go-json": "orderNo",
                "x-go-name": "OrderNo"
              },
              "tradeNo": {
                "type": "string",
                "description": "消费时为关联的交易单号，充值时为关联业务端的交易号",
                "x-go-json": "tradeNo",
                "x-go-name": "TradeNo"
              },
              "transAmount": {
                "type": "integer",
                "format": "int64",
                "description": "交易金额, 充值时=0，消费时为交易金额",
                "x-go-json": "transAmount",
                "x-go-name": "TransAmount"
              },
              "type": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvHandingFeeType"
                  },
                  {
                    "description": "类型"
                  }
                ],
                "x-go-json": "type",
                "x-go-name": "Type"
              }
            },
            "required": [
              "accountID",
              "amount",
              "channelType",
              "comment",
              "handingFeeBalance",
              "hfID",
              "orderNo",
              "tradeNo",
              "transAmount",
              "type"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseHandingFee"
      },
      "BaseHandingFeeList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/BaseHandingFee"
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseHandingFeeList"
      },
      "BaseHandingFeeLog": {
        "type": "object",
        "properties": {
          "accountID": {
            "type": "string",
            "format": "uint64",
            "description": "账户ID",
            "x-go-json": "accountID,string",
            "x-go-name": "AccountID"
          },
          "accountName": {
            "type": "string",
            "description": "收款账户名称",
            "x-go-json": "accountName",
            "x-go-name": "AccountName"
          },
          "amount": {
            "type": "integer",
            "format": "int64",
            "description": "金额,充值=充值金额，消费=扣款金额",
            "x-go-json": "amount",
            "x-go-name": "Amount"
          },
          "channelType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvChannelType"
              },
              {
                "description": "支付方式"
              }
            ],
            "x-go-json": "channelType",
            "x-go-name": "ChannelType"
          },
          "comment": {
            "type": "string",
            "description": "说明",
            "x-go-json": "comment",
            "x-go-name": "Comment"
          },
          "createTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MySQLTimestamp"
              },
              {
                "description": "创建时间"
              }
            ],
            "x-go-json": "createTime",
            "x-go-name": "CreateTime"
          },
          "handingFeeBalance": {
            "type": "integer",
            "format": "int64",
            "description": "剩余金额",
            "x-go-json": "handingFeeBalance",
            "x-go-name": "HandingFeeBalance"
          },
          "orderNo": {
            "type": "string",
            "description": "订单号",
            "x-go-json": "orderNo",
            "x-go-name": "OrderNo"
          },
          "tradeNo": {
            "type": "string",
            "description": "消费时为关联的交易单号，充值时为关联业务端的交易号",
            "x-go-json": "tradeNo",
            "x-go-name": "TradeNo"
          },
          "transAmount": {
            "type": "integer",
            "format": "int64",
            "description": "交易金额, 充值赠送时=0，消费、结算时为交易金额",
            "x-go-json": "transAmount",
            "x-go-name": "TransAmount"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvHandingFeeType"
              },
              {
                "description": "类型"
              }
            ],
            "x-go-json": "type",
            "x-go-name": "Type"
          },
          "uid": {
            "type": "string",
            "description": "收款账户UID",
            "x-go-json": "uid",
            "x-go-name": "UID"
          },
          "updateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MySQLTimestamp"
              },
              {
                "description": "更新时间"
              }
            ],
            "x-go-json": "updateTime",
            "x-go-name": "UpdateTime"
          }
        },
        "required": [
          "accountID",
          "accountName",
          "amount",
          "channelType",
          "comment",
          "createTime",
          "handingFeeBalance",
          "orderNo",
          "tradeNo",
          "transAmount",
          "type",
          "uid",
          "updateTime"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseHandingFeeLog"
      },
      "BaseIndustry": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "行业代码code",
                "x-go-json": "code",
                "x-go-name": "Code"
              },
              "mode": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvAccountMode"
                  },
                  {
                    "description": "渠道模式, 默认为中金渠道"
                  }
                ],
                "x-go-json": "mode",
                "x-go-name": "Mode"
              },
              "name": {
                "type": "string",
                "description": "行业名称",
                "x-go-json": "name",
                "x-go-name": "Name"
              }
            },
            "required": [
              "code",
              "mode",
              "name"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseIndustry"
      },
      "BaseIndustryList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/BaseIndustry"
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseIndustryList"
      },
      "BaseMybankTransBalance": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "$ref": "#/components/schemas/OperateTime"
          },
          {
            "$ref": "#/components/schemas/SoftDelete"
          },
          {
            "type": "object",
            "properties": {
              "accountID": {
                "type": "string",
                "format": "uint64",
                "description": "账户ID",
                "x-go-json": "accountID,string",
                "x-go-name": "AccountID"
              },
              "balance": {
                "type": "integer",
                "format": "int64",
                "description": "剩余转账笔数",
                "x-go-json": "balance",
                "x-go-name": "Balance"
              },
              "balanceID": {
                "type": "string",
                "format": "uint64",
                "description": "流水号",
                "x-go-json": "balanceID,string",
                "x-go-name": "BalanceID"
              },
              "comment": {
                "type": "string",
                "description": "说明",
                "x-go-json": "comment",
                "x-go-name": "Comment"
              },
              "tradeNo": {
                "type": "string",
                "description": "管理交易号",
                "x-go-json": "tradeNo",
                "x-go-name": "TradeNo"
              },
              "transAmount": {
                "type": "integer",
                "format": "int64",
                "description": "交易金额",
                "x-go-json": "transAmount",
                "x-go-name": "TransAmount"
              },
              "transNum": {
                "type": "integer",
                "format": "int64",
                "description": "交易转账笔数",
                "x-go-json": "transNum",
                "x-go-name": "TransNum"
              },
              "type": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvHandingFeeType"
                  },
                  {
                    "description": "流水类型"
                  }
                ],
                "x-go-json": "type",
                "x-go-name": "Type"
              }
            },
            "required": [
              "accountID",
              "balance",
              "balanceID",
              "comment",
              "tradeNo",
              "transAmount",
              "transNum",
              "type"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseMybankTransBalance"
      },
      "BaseSrvAccountBodyType": {
        "type": "string",
        "enum": [
          "COMPANY",
          "PERSONAL",
          "RETAILER"
        ],
        "x-enum-labels": [
          "公司",
          "个人",
          "个体户"
        ],
        "x-enum-vals": [
          2,
          1,
          3
        ],
        "x-enum-values": [
          "COMPANY",
          "PERSONAL",
          "RETAILER"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvAccountBodyType"
      },
      "BaseSrvAccountChannelStatus": {
        "type": "string",
        "enum": [
          "DISABLE",
          "ENABLE"
        ],
        "x-enum-labels": [
          "关闭",
          "开启"
        ],
        "x-enum-vals": [
          2,
          1
        ],
        "x-enum-values": [
          "DISABLE",
          "ENABLE"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvAccountChannelStatus"
      },
      "BaseSrvAccountMode": {
        "type": "string",
        "enum": [
          "ALL_IN_PAY",
          "CPCN_ACCOUNT",
          "MARKET",
          "MERCHANT",
          "MYBANK_CLOUD",
          "VSP"
        ],
        "x-enum-labels": [
          "通联支付",
          "中金账户模式",
          "市场模式",
          "商户模式",
          "云资金",
          "通联收银宝支付"
        ],
        "x-enum-vals": [
          5,
          3,
          1,
          2,
          4,
          6
        ],
        "x-enum-values": [
          "ALL_IN_PAY",
          "CPCN_ACCOUNT",
          "MARKET",
          "MERCHANT",
          "MYBANK_CLOUD",
          "VSP"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvAccountMode"
      },
      "BaseSrvAccountPlatformType": {
        "type": "string",
        "enum": [
          "DHB",
          "HXB",
          "MOBILE",
          "PC",
          "SPLIT",
          "ZIDIAN"
        ],
        "x-enum-labels": [
          "订货宝",
          "货销宝",
          "移动端",
          "PC端",
          "分账产品",
          "直店"
        ],
        "x-enum-vals": [
          5,
          4,
          2,
          1,
          6,
          3
        ],
        "x-enum-values": [
          "DHB",
          "HXB",
          "MOBILE",
          "PC",
          "SPLIT",
          "ZIDIAN"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvAccountPlatformType"
      },
      "BaseSrvAccountRealNameStatus": {
        "type": "string",
        "enum": [
          "DOING",
          "NO",
          "SUCCESS"
        ],
        "x-enum-labels": [
          "认证中",
          "未认证",
          "认证成功"
        ],
        "x-enum-vals": [
          2,
          1,
          3
        ],
        "x-enum-values": [
          "DOING",
          "NO",
          "SUCCESS"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvAccountRealNameStatus"
      },
      "BaseSrvAccountStatus": {
        "type": "string",
        "enum": [
          "DISABLE",
          "ENABLE"
        ],
        "x-enum-labels": [
          "禁用",
          "启用"
        ],
        "x-enum-vals": [
          2,
          1
        ],
        "x-enum-values": [
          "DISABLE",
          "ENABLE"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvAccountStatus"
      },
      "BaseSrvAccountType": {
        "type": "string",
        "enum": [
          "PAYMENT",
          "RECIPIENT"
        ],
        "x-enum-labels": [
          "付款户",
          "收款户"
        ],
        "x-enum-vals": [
          2,
          1
        ],
        "x-enum-values": [
          "PAYMENT",
          "RECIPIENT"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvAccountType"
      },
      "BaseSrvAccountUserType": {
        "type": "string",
        "enum": [
          "CLIENT",
          "SELF",
          "SUPPLIER",
          "UNIONER"
        ],
        "x-enum-labels": [
          "下游客户",
          "商户",
          "供应商",
          "联营商"
        ],
        "x-enum-vals": [
          4,
          1,
          2,
          3
        ],
        "x-enum-values": [
          "CLIENT",
          "SELF",
          "SUPPLIER",
          "UNIONER"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvAccountUserType"
      },
      "BaseSrvAcctType": {
        "type": "string",
        "enum": [
          "ALIPAY_SERVICE",
          "UNIONPAY_JS",
          "WECHAT_MINI",
          "WECHAT_PUBLIC"
        ],
        "x-enum-labels": [
          "支付宝生活号",
          "银联JS支付",
          "微信小程序",
          "微信公众号"
        ],
        "x-enum-vals": [
          3,
          4,
          2,
          1
        ],
        "x-enum-values": [
          "ALIPAY_SERVICE",
          "UNIONPAY_JS",
          "WECHAT_MINI",
          "WECHAT_PUBLIC"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvAcctType"
      },
      "BaseSrvAgentPaidStatus": {
        "type": "string",
        "enum": [
          "DEALING",
          "FAIL",
          "SUCCESS",
          "UNPAY"
        ],
        "x-enum-labels": [
          "处理中",
          "代付失败",
          "代付成功",
          "未代付"
        ],
        "x-enum-vals": [
          2,
          4,
          3,
          1
        ],
        "x-enum-values": [
          "DEALING",
          "FAIL",
          "SUCCESS",
          "UNPAY"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvAgentPaidStatus"
      },
      "BaseSrvApplyAttType": {
        "type": "string",
        "enum": [
          "AUTH",
          "BANK_CARD",
          "BUSINESS_LICENSE",
          "CREDIT_CODE_CERTIFICATE",
          "GOVER",
          "ID_BACK",
          "ID_FACE",
          "OPEN_CERTIFICATE",
          "ORGANISMS",
          "OTHER",
          "SETT_AUTH",
          "STORE",
          "STORE_AND_PERSON",
          "STORE_BIZ",
          "STORE_INNER"
        ],
        "x-enum-labels": [
          "签字授权书 (法人手机号仍不能通过运营商三要素验证，可上传签字授权书以便合规性审核)",
          "银行卡正面照片",
          "营业执照",
          "统一社会信用代码证",
          "事业单位法人证书",
          "身份证国徽面",
          "身份证人像面",
          "基本户开户证明",
          "活体照片/经营者手持身份证照片",
          "其他审核材料",
          "结算账户授权书(结算账户对私时，且允许法人与结算账户不一致时，必填)",
          "经营场所照片/商户门头照片",
          "经营者与店铺门头合照",
          "经营场所证明文件,不限于营业场所租赁协议或者产权证明、集中经营场所管理方出具的证明文件等",
          "经营场所内景照片"
        ],
        "x-enum-vals": [
          12,
          11,
          6,
          4,
          13,
          2,
          1,
          5,
          3,
          15,
          14,
          7,
          8,
          10,
          9
        ],
        "x-enum-values": [
          "AUTH",
          "BANK_CARD",
          "BUSINESS_LICENSE",
          "CREDIT_CODE_CERTIFICATE",
          "GOVER",
          "ID_BACK",
          "ID_FACE",
          "OPEN_CERTIFICATE",
          "ORGANISMS",
          "OTHER",
          "SETT_AUTH",
          "STORE",
          "STORE_AND_PERSON",
          "STORE_BIZ",
          "STORE_INNER"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvApplyAttType"
      },
      "BaseSrvApplyCredentialType": {
        "type": "string",
        "enum": [
          "1",
          "2",
          "5",
          "6"
        ],
        "x-enum-labels": [
          "身份证",
          "外国护照",
          "港澳居民来往内地通行证",
          "台湾居民来往大陆通行证"
        ],
        "x-enum-vals": [
          1,
          2,
          3,
          4
        ],
        "x-enum-values": [
          "1",
          "2",
          "5",
          "6"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvApplyCredentialType"
      },
      "BaseSrvApplySort": {
        "type": "string",
        "enum": [
          "1",
          "2",
          "3",
          "4"
        ],
        "x-enum-labels": [
          "1",
          "2",
          "3",
          "4"
        ],
        "x-enum-vals": [
          1,
          2,
          3,
          4
        ],
        "x-enum-values": [
          "1",
          "2",
          "3",
          "4"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvApplySort"
      },
      "BaseSrvApplyStatus": {
        "type": "string",
        "enum": [
          "AGREEMENT_CLOUD_SIGN_FAIL",
          "AGREEMENT_CLOUD_SIGN_SUCCESS",
          "AGREEMENT_SIGNING",
          "AGREEMENT_SIGN_FAIL",
          "AGREEMENT_SIGN_SUCCESS",
          "AGREEMENT_VSP_SIGN_FAIL",
          "AGREEMENT_VSP_SIGN_SUCCESS",
          "BINDCARD_FAIL",
          "BINDCARD_OK",
          "BINDCARD_REMOVED",
          "BINDCARD_SUBMITED",
          "BIND_MOBILE_FAIL",
          "BIND_MOBILE_SUCCESS",
          "CREATED",
          "FIRST_APPROVED",
          "FIRST_CHECKING",
          "FIRST_REJECTED",
          "MERCHANT_INFO_OK",
          "MERCHANT_INFO_REJECTED",
          "MERCHANT_INFO_RESUBMITED",
          "MERCHANT_INFO_SUBMITED",
          "OPENED",
          "PROVIDER_APPROVED",
          "PROVIDER_CLOUD_APPROVED",
          "PROVIDER_CLOUD_DEALING",
          "PROVIDER_CLOUD_REJECTED",
          "PROVIDER_DEALING",
          "PROVIDER_REJECTED",
          "PROVIDER_VSP_APPROVED",
          "PROVIDER_VSP_DEALING",
          "PROVIDER_VSP_REJECTED",
          "PROVIDER_WAIT_ADDITION",
          "SUBMIT_PROVIDER_FAIL"
        ],
        "x-enum-labels": [
          "云商通协议签署失败",
          "云商通协议签署成功",
          "入网协议签署中",
          "入网协议签署失败",
          "入网协议签署成功",
          "收银宝协议签署失败",
          "收银宝协议签署成功",
          "绑卡失败",
          "绑卡成功",
          "解绑成功",
          "绑卡申请已提交",
          "手机号绑定失败",
          "手机号绑定成功",
          "已创建",
          "初审通过",
          "初审中",
          "初审拒绝",
          "进件信息已配置",
          "进件信息被拒绝",
          "进件信息已重新提交",
          "进件信息已提交",
          "运营后台开通",
          "服务商审核通过",
          "服务商(云商通)审核通过",
          "服务商(云商通)审核中",
          "服务商(云商通)审核拒绝",
          "服务商审核中",
          "服务商审核拒绝",
          "服务商(收银宝)审核通过",
          "服务商(收银宝)审核中",
          "服务商(收银宝)审核拒绝",
          "服务商要求补录资料",
          "提交到服务商失败"
        ],
        "x-enum-vals": [
          621,
          611,
          60,
          620,
          610,
          622,
          612,
          42,
          41,
          43,
          40,
          82,
          81,
          11,
          21,
          20,
          22,
          53,
          52,
          51,
          50,
          70,
          31,
          311,
          310,
          312,
          30,
          32,
          321,
          320,
          322,
          350,
          210
        ],
        "x-enum-values": [
          "AGREEMENT_CLOUD_SIGN_FAIL",
          "AGREEMENT_CLOUD_SIGN_SUCCESS",
          "AGREEMENT_SIGNING",
          "AGREEMENT_SIGN_FAIL",
          "AGREEMENT_SIGN_SUCCESS",
          "AGREEMENT_VSP_SIGN_FAIL",
          "AGREEMENT_VSP_SIGN_SUCCESS",
          "BINDCARD_FAIL",
          "BINDCARD_OK",
          "BINDCARD_REMOVED",
          "BINDCARD_SUBMITED",
          "BIND_MOBILE_FAIL",
          "BIND_MOBILE_SUCCESS",
          "CREATED",
          "FIRST_APPROVED",
          "FIRST_CHECKING",
          "FIRST_REJECTED",
          "MERCHANT_INFO_OK",
          "MERCHANT_INFO_REJECTED",
          "MERCHANT_INFO_RESUBMITED",
          "MERCHANT_INFO_SUBMITED",
          "OPENED",
          "PROVIDER_APPROVED",
          "PROVIDER_CLOUD_APPROVED",
          "PROVIDER_CLOUD_DEALING",
          "PROVIDER_CLOUD_REJECTED",
          "PROVIDER_DEALING",
          "PROVIDER_REJECTED",
          "PROVIDER_VSP_APPROVED",
          "PROVIDER_VSP_DEALING",
          "PROVIDER_VSP_REJECTED",
          "PROVIDER_WAIT_ADDITION",
          "SUBMIT_PROVIDER_FAIL"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvApplyStatus"
      },
      "BaseSrvBankType": {
        "type": "string",
        "enum": [
          "AANZB",
          "ABC",
          "ABN",
          "ACBC",
          "ADBC",
          "AHDZRCU",
          "AHHSRCB",
          "AHQDRCB",
          "AHRCU",
          "AHTCRCB",
          "AHTCRCU",
          "AIBANK",
          "ASCCB",
          "ASNX",
          "ASNXB",
          "ASPBRCB",
          "AYCCB",
          "AYSDRCU",
          "BANGKOKBANK",
          "BANKWF",
          "BCM",
          "BDCCB",
          "BEEB",
          "BFB",
          "BFYFRCB",
          "BGY",
          "BGZ",
          "BJDXHXRCB",
          "BJRCB",
          "BL",
          "BLGMCZEEB",
          "BNP",
          "BOA",
          "BOAS",
          "BOB",
          "BOBBG",
          "BOC",
          "BOCD",
          "BOCHK",
          "BODL",
          "BODY",
          "BOFS",
          "BOHLD",
          "BOIMC",
          "BOLIAOYANG",
          "BOLY",
          "BOM",
          "BON",
          "BONS",
          "BONX",
          "BORZ",
          "BOS",
          "BOTJ",
          "BOTL",
          "BOXC",
          "BOYK",
          "BQH",
          "BSB",
          "BTGMCZEEB",
          "BUBC",
          "BWF",
          "BXMZRCC",
          "BYW",
          "CACIB",
          "CBHB",
          "CCAB",
          "CCB",
          "CCBI",
          "CCCB",
          "CCHRCZEEB",
          "CCQTGB",
          "CDB",
          "CDCBRCB",
          "CDRCB",
          "CEB",
          "CECCEDA",
          "CGB",
          "CHBANK",
          "CHDB",
          "CHIYUBANK",
          "CIB",
          "CITIBANK",
          "CJCCB",
          "CMB",
          "CMBC",
          "CMBCN",
          "CNCB",
          "COASTALBANK",
          "COMMERZBANK",
          "CQCB",
          "CQRCB",
          "CQYZB",
          "CRB",
          "CRCBB",
          "CSAG",
          "CSCB",
          "CSISC",
          "CSRCB",
          "CSXBANK",
          "CSYHRCU",
          "CYCB",
          "CYRCC",
          "CZB",
          "CZCB",
          "CZCCB",
          "CZJQRCU",
          "CZLZRCU",
          "CZSCCB",
          "CZXTDEEB",
          "CZZZRCU",
          "DBA",
          "DBC",
          "DBHS",
          "DBSB",
          "DDB",
          "DGB",
          "DHRCU",
          "DLLSRCB",
          "DLNX",
          "DLRCB",
          "DRCB",
          "DRYCCB",
          "DTCCB",
          "DTSNJQJDEEB",
          "DWRCB",
          "DXBEEB",
          "DXHDCZEEB",
          "DXRCB",
          "DYLSB",
          "DZBC",
          "DZCCB",
          "ERDSRCB",
          "FBANK",
          "FBC",
          "FCRCU",
          "FCSYEEB",
          "FCXBEEB",
          "FDB",
          "FGXRCC",
          "FJHTBANK",
          "FJHXB",
          "FJNX",
          "FQNXB",
          "FSB",
          "FTYZB",
          "FUBONBANK",
          "FXB",
          "FYSJDEEB",
          "FYYDRCB",
          "FYYHB",
          "FZB",
          "FZRCB",
          "GDHYRCU",
          "GDHZRCB",
          "GDNYB",
          "GDRCU",
          "GDZQDZRCU",
          "GHCCB",
          "GLB",
          "GLE",
          "GLGMCB",
          "GMRB",
          "GRCB",
          "GSB",
          "GSRCU",
          "GXGLLJCMB",
          "GXNNCMB",
          "GXRCU",
          "GXYZRCC",
          "GYGSCB",
          "GYGSHRCB",
          "GYKJBK",
          "GYNSH",
          "GZCB",
          "GZCCB",
          "GZCJRCB",
          "GZDYNXB",
          "GZFQNXB",
          "GZHCNXB",
          "GZHSNX",
          "GZHXRCU",
          "GZLPSRCB",
          "GZNTNX",
          "GZNX",
          "GZNXB",
          "GZSGCMB",
          "GZWANX",
          "GZXRRCU",
          "GZXYNXB",
          "GZZJNXB",
          "GZZYCCB",
          "HANABANK",
          "HANGSENG",
          "HBB",
          "HBCCB",
          "HBCYRCB",
          "HBESRCB",
          "HBLFRCU",
          "HBSYRCU",
          "HBSYXH",
          "HBXH",
          "HCNSH",
          "HCRCU",
          "HDCB",
          "HDXHDEEB",
          "HEBB",
          "HEBCZNX",
          "HEBNCNX",
          "HEBRCB",
          "HFB",
          "HJSLDCZEEB",
          "HKACB",
          "HKB",
          "HKBEA",
          "HKUNITB",
          "HLJRCC",
          "HMCCB",
          "HMHXBEEB",
          "HNB",
          "HNHXNXB",
          "HNKFXDFRCB",
          "HNLYNXB",
          "HNLYRCU",
          "HNNX",
          "HNNXRCB",
          "HNQYRCU",
          "HNRCB",
          "HNRCU",
          "HNSRCU",
          "HNXSRCU",
          "HNXTRCU",
          "HNXXRCB",
          "HNXXRCU",
          "HNXYRCB",
          "HNXZRCB",
          "HNYCRCU",
          "HNYLRCU",
          "HNYXRCU",
          "HNZMDCCB",
          "HPGMCZEEB",
          "HRBCB",
          "HRMZRCC",
          "HRXJB",
          "HSB",
          "HSBC",
          "HSCCB",
          "HSNX",
          "HSXGDCZEEB",
          "HXB",
          "HZB",
          "HZCCB",
          "HZJARCB",
          "HZTXRCB",
          "HZYDRCU",
          "IBOK",
          "ICBC",
          "INTESASANPAOLO",
          "JCCB",
          "JCSRCU",
          "JGRCB",
          "JHCCB",
          "JJCCB",
          "JKXRDEEB",
          "JLB",
          "JLNLSRCB",
          "JLRCU",
          "JMRCB",
          "JNCCB",
          "JNHCRCU",
          "JNRCB",
          "JPMCBC",
          "JPRCC",
          "JSB",
          "JSDFRCB",
          "JSFXRCB",
          "JSGCBANK",
          "JSGYRCB",
          "JSHARCB",
          "JSHB",
          "JSJYRCB",
          "JSNTRCB",
          "JSNX",
          "JSRZRCB",
          "JSSYRCU",
          "JSTXRCB",
          "JTNSH",
          "JXCCB",
          "JXNX",
          "JXNXSRCB",
          "JXSHDEEB",
          "JXYMBANK",
          "JYB",
          "JZB",
          "JZCB",
          "JZCCB",
          "JZNXB",
          "KCBEB",
          "KDB",
          "KEB",
          "KEQRCC",
          "KFCCB",
          "KLB",
          "KLMYJLBEEB",
          "KPNXB",
          "KSRCB",
          "KTBEEB",
          "LCCB",
          "LCRCB",
          "LFNX",
          "LHCCB",
          "LJB",
          "LNDGRCU",
          "LNFSRCC",
          "LNFSRCU",
          "LNGDNXB",
          "LNRBANK",
          "LNRCC",
          "LPSCCB",
          "LSB",
          "LSBC",
          "LSCCB",
          "LSLZRCB",
          "LSZSH",
          "LXXHRCU",
          "LYJMNXB",
          "LYXGNXB",
          "LZB",
          "LZCCB",
          "LZLMTRCB",
          "LZNXB",
          "LZNXRCC",
          "MHBK",
          "MJMFRCU",
          "MSBANK",
          "MSBI",
          "MTCCB",
          "MUFGBANK",
          "MXNX",
          "MYBANK",
          "MYCCB",
          "MZKSHB",
          "NABC",
          "NAP",
          "NBBLQRCC",
          "NBSHSEEB",
          "NBYYRCU",
          "NCB",
          "NCBC",
          "NCCB",
          "NCMFRCU",
          "NDHB",
          "NHB",
          "NJCB",
          "NJXLEEB",
          "NKQLRCB",
          "NMGNXS",
          "NMGTMTYQRCU",
          "NORDLB",
          "NWXRDEEB",
          "NXQDEEB",
          "NXYZCZEEB",
          "NYCCB",
          "NYHRCU",
          "NYSRCU",
          "OCBC",
          "OCBCCN",
          "OHRCU",
          "ORDSB",
          "PAB",
          "PBBEEB",
          "PDSB",
          "PDXCDEEB",
          "PFSVB",
          "PGGMCZEEB",
          "PJZPRCU",
          "PSBC",
          "PYRCB",
          "PZHCCB",
          "PZWHRCB",
          "QDCCB",
          "QDHDBANK",
          "QDNSYHRCU",
          "QDRCU",
          "QHDB",
          "QHRCCB",
          "QINNONGBANK",
          "QJCCB",
          "QLB",
          "QNBEEB",
          "QSB",
          "QZCCB",
          "QZNX",
          "RABOBANK",
          "RBS",
          "RHEB",
          "RJNX",
          "SCB",
          "SCBANK",
          "SCBZRCB",
          "SCCDRCU",
          "SCLZCCB",
          "SCMRCB",
          "SCNX",
          "SCRCU",
          "SCXCRCB",
          "SCYAHMBANK",
          "SDEB",
          "SDLZRCB",
          "SDNXB",
          "SDNXS",
          "SDQLCZEEB",
          "SDWHRCU",
          "SDXTRCB",
          "SDZZB",
          "SHINHANCHINA",
          "SHJRCU",
          "SHRB",
          "SHZBEEB",
          "SJB",
          "SJZRCC",
          "SLBEEB",
          "SMBC",
          "SMYZB",
          "SNCCB",
          "SPDB",
          "SQZYRCB",
          "SRCB",
          "SRCCB",
          "SSRCB",
          "SUNINGBANK",
          "SXCCB",
          "SXCZHGRCU",
          "SXCZLCRCC",
          "SXCZLDRCU",
          "SXCZPSRCC",
          "SXCZQXRCC",
          "SXCZQYXRCC",
          "SXCZRCB",
          "SXCZTLXRCC",
          "SXCZWXXRCC",
          "SXDTBDRCU",
          "SXDTRCC",
          "SXGJRCU",
          "SXHJRCU",
          "SXHMRCU",
          "SXHQRCB",
          "SXJXRCU",
          "SXJZRCC",
          "SXLCRCU",
          "SXLSRCU",
          "SXNX",
          "SXPYRCU",
          "SXQXRCU",
          "SXQZRCU",
          "SXSYRCU",
          "SXWTSRCU",
          "SXXNRCU",
          "SXXYRCB",
          "SXXYRCU",
          "SXYCRCU",
          "SXYCSRCU",
          "SXYQRCB",
          "SXYXRCU",
          "SXZRCB",
          "SYRCB",
          "SYRCU",
          "SYXHDCEEB",
          "SYYZB",
          "SZB",
          "SZBABANK",
          "SZBARCB",
          "SZNSBSRCU",
          "SZPSBANK",
          "SZSCCB",
          "SZSRCB",
          "SZXRCC",
          "TACCB",
          "TAIFENGBANK",
          "TATSRCU",
          "TCRCB",
          "TFB",
          "TFBANK",
          "TJBHB",
          "TRCB",
          "TSCCB",
          "TSRCC",
          "TYSQCPXDEEB",
          "TYSRCC",
          "TZB",
          "TZYZB",
          "UBS",
          "UCB",
          "UCCB",
          "UOBC",
          "URCB",
          "WEBANK",
          "WEGOBANK",
          "WHCB",
          "WHCCB",
          "WHRCB",
          "WINGLUNGBANK",
          "WJQGMCZEEB",
          "WJRCB",
          "WNNXB",
          "WOORIBANKCHINA",
          "WSNXB",
          "WSXRCC",
          "WSXRDEEB",
          "WXRCB",
          "WXSYBANK",
          "WXXZDEEB",
          "WZCB",
          "XABANK",
          "XACB",
          "XANXB",
          "XFXWDEEB",
          "XIB",
          "XJB",
          "XJCJBEEB",
          "XJCJRCB",
          "XJHHB",
          "XJKCCB",
          "XJLZBEEB",
          "XJRCCB",
          "XJYLBEEB",
          "XMCCB",
          "XMRCB",
          "XNRCB",
          "XSBEEB",
          "XSRCC",
          "XTB",
          "XWBANK",
          "XWNX",
          "XXSRCU",
          "XYLFEEB",
          "XYPPZX",
          "XZB",
          "XZNCXH",
          "XZSXFQXDEEB",
          "XZZYCB",
          "YACCB",
          "YAMAGUCHIBANK",
          "YANTAIRCB",
          "YBCCB",
          "YBNSYH",
          "YBYZB",
          "YFBANK",
          "YGCCNX",
          "YGXXDEEB",
          "YHBEEB",
          "YHRCB",
          "YILLIONBANK",
          "YJSHEEB",
          "YNHTB",
          "YNHTRCC",
          "YNKMGDRCC",
          "YNLJFDBANK",
          "YNNCRCC",
          "YNRCC",
          "YQCCB",
          "YSSNXB",
          "YSYXRCB",
          "YTB",
          "YTXNXB",
          "YWBANKRCB",
          "YWBANKRCU",
          "YXJDEEB",
          "YZNSH",
          "ZBANK",
          "ZBCCB",
          "ZGCB",
          "ZGCCB",
          "ZGYZB",
          "ZHNSB",
          "ZJCXRCB",
          "ZJDQB",
          "ZJDSRCB",
          "ZJHNRB",
          "ZJHYRCB",
          "ZJJRCB",
          "ZJKCCB",
          "ZJLQRCU",
          "ZJLWRCU",
          "ZJNX",
          "ZJQQRCB",
          "ZJRCB",
          "ZJSYRCB",
          "ZJSZBANK",
          "ZJTLCB",
          "ZJXCB",
          "ZJXSB",
          "ZJXSHSEEB",
          "ZJYHHH",
          "ZJYKRCU",
          "ZKCCB",
          "ZRCB",
          "ZSEB",
          "ZYB",
          "ZYCCB",
          "ZYFDCZEEB",
          "ZZB",
          "ZZKCNXB",
          "ZZNSH",
          "ZZSJNXB"
        ],
        "x-enum-labels": [
          "澳大利亚和新西兰银行集团有限公司",
          "农业银行",
          "荷兰银行",
          "奥地利中央合作银行股份有限公司",
          "中国农业发展银行",
          "安徽东至农村商业银行",
          "黄山太平农村商业银行股份有限公司",
          "安徽黟县农村商业银行股份有限公司",
          "安徽省农村信用联社",
          "安徽桐城农村商业银行",
          "安徽天长农村商业银行",
          "中信百信银行",
          "安顺市商业银行",
          "安顺市农村商业银行",
          "安顺市西秀区农村信用社联合社",
          "安顺市平坝区农村信用合作联社",
          "安阳市商业银行",
          "安阳商都农商银行",
          "泰国盘谷银行(大众有限公司)",
          "潍坊农村商业银行",
          "交通银行",
          "保定市商业银行",
          "宁波鄞州农村合作银行",
          "比利时富通银行有限公司",
          "宝丰豫丰村镇银行",
          "贵阳银行(贵阳市商业银行)",
          "贵州银行",
          "北京大兴华夏村镇银行",
          "北京农村商业银行",
          "德国巴伐利亚州银行",
          "博乐国民村镇银行有限责任公司",
          "法国巴黎银行(中国)有限公司",
          "美国银行有限公司",
          "鞍山银行",
          "北京银行",
          "广西北部湾银行",
          "中国银行",
          "成都银行",
          "中国银行(香港)有限公司",
          "大连银行",
          "德阳银行",
          "抚顺银行",
          "葫芦岛银行",
          "内蒙古银行",
          "辽阳银行",
          "洛阳银行",
          "加拿大蒙特利尔银行有限公司",
          "宁波银行",
          "加拿大丰业银行有限公司",
          "宁夏银行",
          "日照银行",
          "上海银行",
          "天津银行",
          "铁岭商业银行",
          "许昌银行",
          "营口银行",
          "青海银行",
          "包商银行",
          "北屯国民村镇银行有限责任公司",
          "比利时联合银行股份有限公司",
          "潍坊银行",
          "本溪满族自治县农村信用合作联社",
          "宁夏黄河农村商业银行",
          "法国东方汇理银行股份有限公司",
          "渤海银行",
          "长安银行",
          "建设银行",
          "中信银行国际(中国)有限公司",
          "长春农村商业银行股份有限公司",
          "长春和润村镇银行有限责任公司",
          "重庆三峡银行",
          "国家开发银行",
          "长春农村商业发展银行",
          "成都农村商业银行",
          "光大银行",
          "象山县绿叶城市信用社",
          "广发银行",
          "创兴银行有限公司",
          "承德银行",
          "集友银行有限公司",
          "兴业银行",
          "花旗银行(中国)有限公司",
          "江苏长江商业银行",
          "招商银行",
          "民生银行",
          "华商银行",
          "中信银行",
          "营口沿海银行股份有限公司",
          "德国商业银行股份有限公司",
          "重庆银行",
          "重庆农村商业银行",
          "重庆黔江银座村镇银行",
          "珠海华润银行",
          "长沙农商银行",
          "瑞士信贷银行股份有限公司",
          "长沙银行",
          "浙江瑞安农村商业银行股份有限公司",
          "江苏常熟农村商业银行",
          "湖南三湘银行股份有限公司",
          "长沙雨花农村合作银行",
          "朝阳银行",
          "朝阳县农村信用合作联社",
          "浙商银行",
          "浙江稠州商业银行",
          "长治银行",
          "长治市郊区农村信用合作联社",
          "长治潞州农村商业银行",
          "沧州银行",
          "长治县泰都村镇银行有限责任公司",
          "长治漳泽农村商业银行",
          "德国西德银行股份有限公司",
          "德意志银行(中国)有限公司",
          "德国德累斯登银行股份公司",
          "星展银行(中国)有限公司",
          "丹东银行",
          "东莞银行",
          "敦化农村商业银行",
          "大连旅顺口蒙银村镇银行",
          "大理市农村合作银行",
          "大连农村商业银行股份有限公司",
          "东莞农村商业银行",
          "东营市商业银行",
          "大同市商业银行",
          "大同市南郊区京都村镇有限责任公司",
          "江苏东吴农村商业银行",
          "东兴国民村镇银行",
          "代县泓都村镇银行有限责任公司",
          "代县农村信用合作联社",
          "东营莱商村镇银行",
          "德州银行",
          "达州银行股份有限公司",
          "鄂尔多斯农村商业银行",
          "重庆富民银行",
          "华一银行",
          "凤城农村商业银行",
          "丰城顺银村镇银行",
          "防城港防城国民村镇银行",
          "富滇银行",
          "佛冈县农村信用合作联社",
          "福建华通银行",
          "福建海峡银行",
          "福建省农村信用社联合社",
          "封丘县农村信用合作社联合社",
          "佛山农村商业银行",
          "深圳福田银座村镇银行",
          "富邦银行",
          "阜新银行",
          "汾阳市九都村镇银行有限责任公司",
          "阜阳颖东农村商业银行",
          "颍淮农村商业银行",
          "福州银行",
          "抚州农村商业银行",
          "广东河源农村商业银行",
          "惠州农村商业银行股份有限公司",
          "广东南粤银行",
          "广东农村信用社",
          "肇庆端州农村商业银行",
          "广东华兴银行",
          "桂林银行",
          "法国兴业银行(中国)有限公司",
          "桂林国民村镇银行",
          "广东高明农村商业银行",
          "广州农村商业银行",
          "甘肃银行",
          "甘肃省农村信用社联合社",
          "广西桂林漓江农村合作银行",
          "南宁市区农村信用合作联社",
          "广西壮族自治区农村信用社联合社",
          "广西宜州农村信用合作银行",
          "广元市贵商村镇银行",
          "贵阳观山湖富民村镇银行",
          "贵阳小河科技村镇银行",
          "贵阳农村商业银行",
          "广州银行",
          "赣州银行",
          "广州增城长江村镇银行",
          "贵州都匀农村商业银行",
          "贵州福泉农村商业银行",
          "遵义市汇川区农村信用合作联社",
          "贵州惠水农村商业银行(惠水县农村信用合作联社)",
          "贵州花溪农村商业银行",
          "六盘水钟山凉都村镇银行",
          "贵州湄潭农村商业银行",
          "贵州省农村信用社联合社",
          "贵州乌当农村商业银行",
          "韶关市农村信用合作社联合社",
          "瓮安农村商业银行",
          "贵州兴仁农村商业银行",
          "贵州兴义农村商业银行",
          "贵州织金农村商业银行",
          "遵义市商业银行",
          "韩亚银行(中国)有限公司",
          "恒生银行(中国)有限公司",
          "湖北银行",
          "鹤壁银行",
          "湖北长阳农村商业银行股份有限公司",
          "恩施兴福村镇银行",
          "湖北来凤农村商业银行",
          "湖北沙洋农村商业银行",
          "湖北十堰农村商业银行",
          "湖北省农村信用社联合社",
          "珲春农村商业银行",
          "禾城农商银行",
          "邯郸市商业银行",
          "洪洞县洪都村镇银行有限责任公司",
          "河北银行",
          "沧州市农村信用合作社联合社",
          "河北省农村信用社联合社",
          "哈尔滨农村商业银行",
          "恒丰银行",
          "河津市龙都村镇银行有限责任公司",
          "海口农商银行",
          "汉口银行",
          "东亚银行",
          "海口联合农村商业银行",
          "黑龙江省农村信用社联合社",
          "哈密市商业银行",
          "哈密红星国民村镇银行",
          "海南银行",
          "河南辉县农村商业银行(辉县农村信用合作社联合社)",
          "开封新东方村镇银行股份有限公司",
          "洛阳市市区农村信用合作社联合社",
          "湖南浏阳农村商业银行",
          "湖南省农村信用社联合社",
          "河南内乡农村商业银行",
          "河南济源农村商业银行(济源市农村信用合作联社)",
          "沪农商村镇银行",
          "海南省农村信用社联合社",
          "河南省农村信用社",
          "湖南星沙农村商业银行",
          "湘潭农村商业银行",
          "河南新县农村商业银行",
          "湖南湘乡农村商业银行",
          "信阳平桥中原村镇银行股份有限公司",
          "河南新郑农村商业银行",
          "河南伊川农村商业银行",
          "河南鄢陵农村商业银行(鄢陵县农村信用合作社联合社)",
          "湖南攸县农村商业银行股份有限公司",
          "驻马店银行",
          "合浦国民村镇银行有限责任公司",
          "哈尔滨银行",
          "桓仁满族自治县农村信用联社",
          "华融湘江银行(原株洲市商业银行、 湘潭市商业银行、岳阳市商业银行、衡阳市商业银行)",
          "徽商银行",
          "汇丰银行",
          "衡水市商业银行",
          "鹤山市农村信用合作社",
          "和顺县贵都村镇银行有限责任公司",
          "华夏银行",
          "杭州银行",
          "湖州银行",
          "杭州安吉农商行",
          "杭州桐乡农商行",
          "亳州药都农村商业银行",
          "韩国中小企业银行",
          "工商银行",
          "意大利联合圣保罗银行股份有限公司",
          "晋城市商业银行",
          "晋城农村商业银行",
          "呼和浩特金谷农村商业银行股份有限公司",
          "金华银行",
          "九江银行",
          "交口县融都村镇银行有限责任公司",
          "吉林银行",
          "吉林公主岭农村商业银行",
          "吉林省农村信用社联合社",
          "江门市新会农村信用合作社联合社",
          "济宁银行",
          "吉林环城农村商业银行",
          "江苏江南农村商业银行",
          "摩根大通银行(中国)有限公司",
          "建平县农村信用合作联社",
          "江苏银行",
          "江苏大丰农村商业银行",
          "江苏丰县民丰村镇银行",
          "江苏高淳农村商业银行",
          "江苏高邮农村商业银行股份有限公司",
          "江苏海安农村商业银行",
          "晋商银行",
          "江苏姜堰农村商业银行",
          "江苏南通农村商业银行",
          "江苏省农村信用合作社联合社",
          "泰州农村商业银行",
          "江苏射阳农村商业银行",
          "江苏泰兴农村商业银行股份有限公司",
          "吉林九台农商银行",
          "嘉兴银行",
          "江西省农村信用社联合社",
          "南昌农商行",
          "介休市华都村镇银行有限责任公司",
          "江西裕民银行股份有限公司",
          "江苏江阴农村商业银行",
          "锦州银行",
          "焦作市商业银行",
          "晋中市商业银行",
          "焦作市解放区农村信用合作社联合社",
          "天津金城银行",
          "韩国产业银行",
          "外换银行(中国)有限公司",
          "科尔沁左翼后旗农村信用合作联社博王信用社",
          "开封市商业银行",
          "昆仑银行",
          "克拉玛依金龙国民村镇银行",
          "开平市农村信用合作联社",
          "昆山农村商业银行",
          "奎屯国民村镇银行",
          "廊坊银行",
          "聊城沪农商村镇银行股份有限公司",
          "临汾市尧都市农村信用合作社联合社 (山西尧都农村商业银行)",
          "漯河市商业银行",
          "龙江银行",
          "辽宁东港农村商业银行",
          "抚顺县农村信用合作联社",
          "辽宁沈抚农村商业银行",
          "东港市农村信用合作联社",
          "辽宁振兴银行",
          "辽宁省农村信用社",
          "六盘水市商业银行",
          "莱商银行",
          "临商银行",
          "乐山市商业银行",
          "陵水黎族自治县农村信用合作联社",
          "凉山州商业银行",
          "朗溪新华村镇银行",
          "洛阳市经贸开发区农村信用合作联社",
          "洛阳市西工区农村信用合作联社",
          "兰州银行",
          "柳州银行",
          "泸州龙马潭农村商业银行",
          "林州市农村信用合作联社",
          "泸州纳溪农村信用合作联社",
          "瑞穗实业银行(中国)有限公司",
          "孟津民丰村镇银行",
          "温州民商银行股份有限公司",
          "摩根士丹利国际银行(中国)有限公司",
          "浙江民泰商业银行",
          "三菱东京日联银行(中国)有限公司",
          "梅县农村信用合作联社",
          "浙江网商银行",
          "绵阳市商业银行",
          "梅州客商银行",
          "荷兰安智银行股份有限公司",
          "法国外贸银行股份有限公司",
          "宁波市北仑区农村信用合作联社",
          "宁波市海曙国民村镇银行有限责任公司",
          "宁波余姚农村商业银行",
          "宁波通商银行",
          "南洋商业银行",
          "江西银行(南昌银行)",
          "栾川民丰村镇银行",
          "宁波东海银行",
          "广东南海农村商业银行",
          "南京银行",
          "内江兴隆村镇银行",
          "兰考齐鲁村镇银行有限责任公司",
          "内蒙古农村信用社",
          "内蒙古土默特右旗农村商业银行",
          "德国北德意志州银行",
          "宁武县瑞都村镇银行有限责任公司",
          "临县泉都村镇银行有限责任公司",
          "宁夏原州村镇银行有限责任公司",
          "南阳市商业银行(南阳银行)",
          "宁阳沪农商村镇银行",
          "南阳市农村信用社",
          "永亨银行(中国)有限公司",
          "华侨银行(中国)有限公司",
          "瓯海农村商业银行股份有限公司",
          "鄂尔多斯银行",
          "平安银行",
          "广西浦北国民村镇银行",
          "平顶山银行",
          "平定县昌都村镇银行有限责任公司",
          "浦发硅谷银行有限公司",
          "平果国民村镇银行有限责任公司",
          "浦江农村商业银行",
          "邮储银行",
          "平阳农村商业银行",
          "攀枝花市商业银行",
          "盘州万和村镇银行",
          "青岛银行",
          "青岛黄岛舜丰村镇银行",
          "启东农村商业银行",
          "青岛农村商业银行",
          "秦皇岛市商业银行",
          "青海省农村信用社联合社",
          "陕西秦农农村商业银行股份有限公司(秦农银行)",
          "曲靖市商业银行",
          "齐鲁银行",
          "广西钦州市钦南国民村镇银行",
          "齐商银行",
          "泉州银行",
          "清镇市农村信用合作社",
          "荷兰合作银行有限公司",
          "英国苏格兰皇家银行公众有限公司",
          "江门融和农村商业银行",
          "榕江县农村信用合作社",
          "渣打银行",
          "四川银行股份有限公司",
          "巴中农村商业银行",
          "成都市农村信用合作社联合社",
          "泸州市商业银行",
          "商丘市商业银行",
          "水城县农村信用合作联社",
          "四川省农村信用合作社",
          "西昌金信村镇银行",
          "雅安雨城惠民村镇银行有限责任公司",
          "佛山顺德农村商业银行",
          "山东临淄农村商业银行股份有限公司",
          "三都县农村信用社(三都水族自治县农村信用合作联社)",
          "山东省农村信用社联合社",
          "山东青隆村镇银行有限责任公司",
          "威海农村商业银行",
          "山东新泰农村商业银行",
          "枣庄银行",
          "新韩银行(中国)有限公司",
          "山西省农村信用社",
          "上海华瑞银行",
          "石河子国民村镇银行",
          "盛京银行",
          "石家庄汇融农村合作银行",
          "广西上林国民村镇银行",
          "日本三井住友银行股份有限公司",
          "浙江三门银座村镇银行",
          "遂宁市商业银行",
          "浦发银行",
          "沈丘中银富登村镇银行有限公司",
          "上海农村商业银行",
          "上饶银行",
          "佛山市三水区农村信用合作社联合社",
          "苏宁银行",
          "绍兴银行",
          "山西长治壶关农村商业银行",
          "山西长治市黎城县农村信用合作联社",
          "山西长治黎都农村商业银行",
          "山西长治市平顺县农村信用合作联社",
          "山西长治市沁县农村信用合作联社",
          "山西长治市沁源县农村信用合作联社",
          "山西长子农村商业银行",
          "山西长治市屯留县农村信用合作联社",
          "山西长治市武乡县农村信用合作联社",
          "大同北都农村商业银行",
          "山西大同市大同县农村信用合作联社",
          "山西古交农村商业银行",
          "山西河津农村商业银行",
          "山西侯马农村商业银行",
          "山西河曲农村商业银行",
          "山西介休农村商业银行",
          "山西晋中市榆社县农村信用合作联社",
          "山西潞城农村商业银行",
          "山西灵石农村商业银行",
          "陕西省农村信用社联合社",
          "山西平遥农村商业银行",
          "山西清徐农村商业银行",
          "山西忻州农村商业银行",
          "山西寿阳农村商业银行",
          "山西五台农村商业银行",
          "山西乡宁农村商业银行",
          "山西孝义农村商业银行",
          "山西襄垣农村商业银行",
          "山西榆次农村商业银行",
          "山西运城农村商业银行",
          "山西阳曲农村商业银行",
          "山西盂县农村商业银行",
          "山西左云农村商业银行",
          "沈阳农商银行",
          "沈阳农村商业银行",
          "寿阳县汇都村镇银行有限责任公司",
          "北京顺义银座村镇银行",
          "苏州银行",
          "深圳宝安融兴村镇银行",
          "深圳宝安桂银村镇银行",
          "深圳南山宝生村镇银行",
          "深圳坪山珠江村镇银行股份有限公司",
          "石嘴山银行",
          "深圳农村商业银行",
          "绥中县农村信用合作联社",
          "泰安市商业银行",
          "大丰银行有限公司",
          "泰安泰山农村商业银行",
          "太仓农村商业银行",
          "南充市商业银行",
          "四川天府银行股份有限公司",
          "天津滨海农村商业银行",
          "天津农村商业银行股份有限公司 (天津农村合作银行、天津农商银行)",
          "唐山市商业银行",
          "台山市农村信用合作社",
          "太原市尖草坪区信都村镇银行股份有限公司",
          "太原市城区农村信用合作联社",
          "台州银行",
          "浙江景宁银座村镇银行",
          "瑞士银行",
          "联合银行(中国)有限公司",
          "乌鲁木齐市商业银行",
          "大华银行(中国)有限公司",
          "杭州联合银行",
          "深圳前海微众银行",
          "蓝海银行",
          "乌海银行",
          "威海市商业银行",
          "武汉农村商业银行",
          "永隆银行",
          "五家渠国民村镇银行有限责任公司",
          "吴江农村商业银行",
          "威宁县农村信用合作联社",
          "友利银行(中国)有限公司",
          "文山市农村信用合作联社",
          "文水县农村信用合作联社",
          "文水县润都村镇银行有限责任公司",
          "无锡农村商业银行",
          "无锡锡商银行股份有限公司",
          "武乡县泽都村镇银行有限责任公司",
          "温州银行",
          "新安银行",
          "西安银行",
          "新安县农村信用合作社联合社",
          "襄汾县万都村镇银行有限责任公司",
          "厦门国际银行",
          "新疆银行",
          "昌吉国民村镇银行",
          "新疆昌吉农村商业银行",
          "新疆汇和银行",
          "库尔勒市商业银行",
          "新疆绿洲国民村镇银行",
          "新疆农村信用社",
          "伊犁国民村镇银行",
          "厦门银行",
          "厦门农村商业银行股份有限公司",
          "西宁农村商业银行",
          "象山国民村镇银行",
          "象山县农村信用合作联社",
          "邢台银行",
          "四川新网银行股份有限公司",
          "宣威市农村信用合作社",
          "湘乡市村镇银行",
          "荥阳利丰村镇银行股份有限公司",
          "信阳银行",
          "西藏银行",
          "徐州市市郊农村信用合作社联合社",
          "忻州市忻府区秀都村镇银行有限责任公司",
          "新郑郑银村镇银行",
          "雅安市商业银行",
          "日本山口银行股份有限公司",
          "烟台农商银行",
          "宜宾市商业银行",
          "延边农村商业银行",
          "重庆渝北银座村镇银行",
          "永丰银行(中国)有限公司",
          "高要市农村信用合作社联合社",
          "阳高县兴都村镇银行有限责任公司",
          "广西银海国民村镇银行",
          "余杭农村商业银行",
          "吉林亿联银行股份有限公司",
          "永济三禾村镇银行",
          "云南红塔银行(玉溪市商业银行)",
          "云南红塔农村合作银行",
          "昆明官渡农村合作银行",
          "丽江古城富滇村镇银行",
          "昆明市农村信用合作社联合社",
          "云南省农村信用社联合社",
          "阳泉市商业银",
          "偃师市农村信用合作社联合社",
          "宜兴农村商业银行",
          "烟台银行",
          "玉田县农村信用合作社联合社",
          "杭州义乌农商行",
          "浙江义乌农村商业银行股份有限公司",
          "应县金都村镇银行有限责任公司",
          "扬州农村商业银行",
          "武汉众邦银行",
          "淄博市商业银行",
          "北京中关村银行",
          "自贡市商业银行",
          "江西赣州银座村镇银行",
          "珠海农商银行",
          "浙江长兴农村商业银行股份有限公司",
          "浙江德清农村商业银行",
          "浙江岱山农村商业银行股份有限公司",
          "浙江海宁农商行",
          "浙江海盐农村商业银行股份有限公司",
          "张家界农村商业银行股份有限公司",
          "张家口市商业银行",
          "浙江乐清农村商业银行",
          "浙江龙湾农村商业银行",
          "浙江省农村信用社联合社",
          "浙江衢州衢江农村商业银行",
          "紫金农商银行",
          "浙江上虞农村商业银行",
          "浙江嵊州农村商业银行",
          "浙江泰隆商业银行",
          "浙江新昌农村商业银行",
          "浙江萧山农村商业银行(浙江萧山农村合作银行)",
          "浙江萧山湖商村镇银行股份有限公司",
          "浙江玉环农村商业银行股份有限公司",
          "浙江永康农村商业银行股份有限公司",
          "周口市商业银行",
          "张家港农村商业银行",
          "中山农村商业银行(中山农村信用合作社)",
          "三门峡银行",
          "中原银行",
          "中银富登村镇银行有限责任公司",
          "郑州银行",
          "衢州市柯城农村信用合作联社",
          "山西泽州农村商业银行",
          "郑州市市郊农村信用合作联社"
        ],
        "x-enum-vals": [
          596,
          2,
          578,
          575,
          19,
          371,
          502,
          513,
          168,
          495,
          304,
          416,
          173,
          234,
          250,
          528,
          174,
          417,
          574,
          377,
          7,
          175,
          127,
          577,
          544,
          62,
          212,
          547,
          125,
          589,
          468,
          601,
          560,
          72,
          16,
          88,
          3,
          48,
          553,
          39,
          103,
          49,
          52,
          86,
          38,
          37,
          595,
          17,
          594,
          55,
          71,
          25,
          53,
          220,
          193,
          80,
          74,
          89,
          466,
          576,
          77,
          332,
          172,
          583,
          23,
          202,
          4,
          604,
          498,
          442,
          24,
          18,
          453,
          176,
          15,
          192,
          14,
          555,
          152,
          554,
          10,
          559,
          99,
          5,
          9,
          602,
          12,
          462,
          587,
          60,
          120,
          208,
          56,
          405,
          592,
          76,
          387,
          110,
          447,
          310,
          214,
          329,
          22,
          167,
          213,
          281,
          287,
          153,
          429,
          278,
          588,
          586,
          585,
          556,
          64,
          44,
          370,
          546,
          237,
          419,
          122,
          157,
          94,
          436,
          137,
          349,
          439,
          494,
          343,
          160,
          390,
          276,
          373,
          603,
          324,
          449,
          348,
          81,
          397,
          478,
          28,
          124,
          264,
          134,
          187,
          456,
          82,
          438,
          497,
          210,
          30,
          482,
          255,
          503,
          96,
          177,
          279,
          201,
          98,
          582,
          492,
          236,
          112,
          35,
          146,
          509,
          505,
          169,
          455,
          496,
          525,
          407,
          231,
          33,
          78,
          541,
          242,
          244,
          254,
          239,
          256,
          539,
          248,
          142,
          398,
          506,
          252,
          382,
          241,
          240,
          200,
          571,
          552,
          51,
          179,
          499,
          540,
          395,
          277,
          251,
          117,
          209,
          403,
          150,
          437,
          41,
          130,
          178,
          526,
          20,
          441,
          479,
          34,
          550,
          342,
          226,
          340,
          352,
          337,
          269,
          532,
          268,
          282,
          144,
          488,
          265,
          543,
          170,
          314,
          283,
          284,
          484,
          309,
          523,
          531,
          274,
          266,
          400,
          271,
          464,
          61,
          333,
          21,
          59,
          549,
          180,
          230,
          440,
          13,
          42,
          87,
          460,
          461,
          321,
          570,
          1,
          591,
          154,
          313,
          448,
          45,
          70,
          435,
          69,
          451,
          319,
          132,
          158,
          320,
          215,
          561,
          330,
          149,
          406,
          538,
          454,
          510,
          542,
          67,
          489,
          414,
          131,
          450,
          378,
          504,
          393,
          83,
          145,
          458,
          434,
          530,
          119,
          58,
          31,
          181,
          263,
          257,
          568,
          566,
          399,
          161,
          107,
          351,
          247,
          109,
          355,
          84,
          534,
          141,
          162,
          166,
          322,
          327,
          328,
          323,
          480,
          326,
          105,
          102,
          50,
          183,
          521,
          184,
          372,
          260,
          259,
          65,
          100,
          486,
          275,
          415,
          564,
          316,
          469,
          597,
          165,
          562,
          243,
          358,
          92,
          408,
          579,
          584,
          388,
          463,
          396,
          335,
          551,
          66,
          317,
          216,
          114,
          43,
          418,
          533,
          185,
          401,
          590,
          432,
          433,
          445,
          164,
          308,
          315,
          557,
          572,
          385,
          155,
          11,
          347,
          217,
          431,
          537,
          465,
          394,
          6,
          411,
          91,
          548,
          68,
          515,
          472,
          280,
          73,
          218,
          474,
          106,
          29,
          346,
          57,
          79,
          232,
          599,
          581,
          228,
          233,
          580,
          529,
          522,
          129,
          93,
          163,
          238,
          219,
          524,
          512,
          115,
          501,
          249,
          121,
          444,
          285,
          493,
          336,
          569,
          186,
          357,
          356,
          36,
          376,
          344,
          563,
          205,
          188,
          8,
          535,
          108,
          156,
          128,
          409,
          47,
          360,
          363,
          300,
          364,
          365,
          366,
          211,
          367,
          368,
          286,
          361,
          297,
          295,
          292,
          485,
          303,
          362,
          296,
          288,
          148,
          270,
          299,
          301,
          291,
          289,
          290,
          483,
          302,
          293,
          298,
          412,
          294,
          475,
          325,
          305,
          430,
          203,
          40,
          520,
          545,
          318,
          518,
          339,
          111,
          331,
          159,
          527,
          312,
          140,
          101,
          446,
          190,
          126,
          189,
          229,
          428,
          369,
          75,
          204,
          593,
          598,
          46,
          573,
          386,
          359,
          413,
          191,
          90,
          221,
          558,
          467,
          135,
          245,
          567,
          246,
          404,
          427,
          143,
          536,
          426,
          32,
          481,
          63,
          261,
          424,
          600,
          104,
          353,
          517,
          341,
          182,
          350,
          227,
          354,
          26,
          470,
          224,
          380,
          381,
          151,
          389,
          235,
          311,
          421,
          222,
          338,
          118,
          425,
          476,
          194,
          565,
          452,
          196,
          223,
          207,
          519,
          133,
          423,
          345,
          410,
          473,
          402,
          197,
          253,
          471,
          511,
          116,
          171,
          195,
          273,
          379,
          27,
          272,
          459,
          383,
          422,
          375,
          391,
          147,
          487,
          199,
          206,
          138,
          516,
          334,
          508,
          457,
          514,
          507,
          97,
          306,
          307,
          136,
          477,
          392,
          491,
          490,
          85,
          374,
          113,
          420,
          500,
          384,
          198,
          123,
          139,
          95,
          258,
          443,
          54,
          267,
          225,
          262
        ],
        "x-enum-values": [
          "AANZB",
          "ABC",
          "ABN",
          "ACBC",
          "ADBC",
          "AHDZRCU",
          "AHHSRCB",
          "AHQDRCB",
          "AHRCU",
          "AHTCRCB",
          "AHTCRCU",
          "AIBANK",
          "ASCCB",
          "ASNX",
          "ASNXB",
          "ASPBRCB",
          "AYCCB",
          "AYSDRCU",
          "BANGKOKBANK",
          "BANKWF",
          "BCM",
          "BDCCB",
          "BEEB",
          "BFB",
          "BFYFRCB",
          "BGY",
          "BGZ",
          "BJDXHXRCB",
          "BJRCB",
          "BL",
          "BLGMCZEEB",
          "BNP",
          "BOA",
          "BOAS",
          "BOB",
          "BOBBG",
          "BOC",
          "BOCD",
          "BOCHK",
          "BODL",
          "BODY",
          "BOFS",
          "BOHLD",
          "BOIMC",
          "BOLIAOYANG",
          "BOLY",
          "BOM",
          "BON",
          "BONS",
          "BONX",
          "BORZ",
          "BOS",
          "BOTJ",
          "BOTL",
          "BOXC",
          "BOYK",
          "BQH",
          "BSB",
          "BTGMCZEEB",
          "BUBC",
          "BWF",
          "BXMZRCC",
          "BYW",
          "CACIB",
          "CBHB",
          "CCAB",
          "CCB",
          "CCBI",
          "CCCB",
          "CCHRCZEEB",
          "CCQTGB",
          "CDB",
          "CDCBRCB",
          "CDRCB",
          "CEB",
          "CECCEDA",
          "CGB",
          "CHBANK",
          "CHDB",
          "CHIYUBANK",
          "CIB",
          "CITIBANK",
          "CJCCB",
          "CMB",
          "CMBC",
          "CMBCN",
          "CNCB",
          "COASTALBANK",
          "COMMERZBANK",
          "CQCB",
          "CQRCB",
          "CQYZB",
          "CRB",
          "CRCBB",
          "CSAG",
          "CSCB",
          "CSISC",
          "CSRCB",
          "CSXBANK",
          "CSYHRCU",
          "CYCB",
          "CYRCC",
          "CZB",
          "CZCB",
          "CZCCB",
          "CZJQRCU",
          "CZLZRCU",
          "CZSCCB",
          "CZXTDEEB",
          "CZZZRCU",
          "DBA",
          "DBC",
          "DBHS",
          "DBSB",
          "DDB",
          "DGB",
          "DHRCU",
          "DLLSRCB",
          "DLNX",
          "DLRCB",
          "DRCB",
          "DRYCCB",
          "DTCCB",
          "DTSNJQJDEEB",
          "DWRCB",
          "DXBEEB",
          "DXHDCZEEB",
          "DXRCB",
          "DYLSB",
          "DZBC",
          "DZCCB",
          "ERDSRCB",
          "FBANK",
          "FBC",
          "FCRCU",
          "FCSYEEB",
          "FCXBEEB",
          "FDB",
          "FGXRCC",
          "FJHTBANK",
          "FJHXB",
          "FJNX",
          "FQNXB",
          "FSB",
          "FTYZB",
          "FUBONBANK",
          "FXB",
          "FYSJDEEB",
          "FYYDRCB",
          "FYYHB",
          "FZB",
          "FZRCB",
          "GDHYRCU",
          "GDHZRCB",
          "GDNYB",
          "GDRCU",
          "GDZQDZRCU",
          "GHCCB",
          "GLB",
          "GLE",
          "GLGMCB",
          "GMRB",
          "GRCB",
          "GSB",
          "GSRCU",
          "GXGLLJCMB",
          "GXNNCMB",
          "GXRCU",
          "GXYZRCC",
          "GYGSCB",
          "GYGSHRCB",
          "GYKJBK",
          "GYNSH",
          "GZCB",
          "GZCCB",
          "GZCJRCB",
          "GZDYNXB",
          "GZFQNXB",
          "GZHCNXB",
          "GZHSNX",
          "GZHXRCU",
          "GZLPSRCB",
          "GZNTNX",
          "GZNX",
          "GZNXB",
          "GZSGCMB",
          "GZWANX",
          "GZXRRCU",
          "GZXYNXB",
          "GZZJNXB",
          "GZZYCCB",
          "HANABANK",
          "HANGSENG",
          "HBB",
          "HBCCB",
          "HBCYRCB",
          "HBESRCB",
          "HBLFRCU",
          "HBSYRCU",
          "HBSYXH",
          "HBXH",
          "HCNSH",
          "HCRCU",
          "HDCB",
          "HDXHDEEB",
          "HEBB",
          "HEBCZNX",
          "HEBNCNX",
          "HEBRCB",
          "HFB",
          "HJSLDCZEEB",
          "HKACB",
          "HKB",
          "HKBEA",
          "HKUNITB",
          "HLJRCC",
          "HMCCB",
          "HMHXBEEB",
          "HNB",
          "HNHXNXB",
          "HNKFXDFRCB",
          "HNLYNXB",
          "HNLYRCU",
          "HNNX",
          "HNNXRCB",
          "HNQYRCU",
          "HNRCB",
          "HNRCU",
          "HNSRCU",
          "HNXSRCU",
          "HNXTRCU",
          "HNXXRCB",
          "HNXXRCU",
          "HNXYRCB",
          "HNXZRCB",
          "HNYCRCU",
          "HNYLRCU",
          "HNYXRCU",
          "HNZMDCCB",
          "HPGMCZEEB",
          "HRBCB",
          "HRMZRCC",
          "HRXJB",
          "HSB",
          "HSBC",
          "HSCCB",
          "HSNX",
          "HSXGDCZEEB",
          "HXB",
          "HZB",
          "HZCCB",
          "HZJARCB",
          "HZTXRCB",
          "HZYDRCU",
          "IBOK",
          "ICBC",
          "INTESASANPAOLO",
          "JCCB",
          "JCSRCU",
          "JGRCB",
          "JHCCB",
          "JJCCB",
          "JKXRDEEB",
          "JLB",
          "JLNLSRCB",
          "JLRCU",
          "JMRCB",
          "JNCCB",
          "JNHCRCU",
          "JNRCB",
          "JPMCBC",
          "JPRCC",
          "JSB",
          "JSDFRCB",
          "JSFXRCB",
          "JSGCBANK",
          "JSGYRCB",
          "JSHARCB",
          "JSHB",
          "JSJYRCB",
          "JSNTRCB",
          "JSNX",
          "JSRZRCB",
          "JSSYRCU",
          "JSTXRCB",
          "JTNSH",
          "JXCCB",
          "JXNX",
          "JXNXSRCB",
          "JXSHDEEB",
          "JXYMBANK",
          "JYB",
          "JZB",
          "JZCB",
          "JZCCB",
          "JZNXB",
          "KCBEB",
          "KDB",
          "KEB",
          "KEQRCC",
          "KFCCB",
          "KLB",
          "KLMYJLBEEB",
          "KPNXB",
          "KSRCB",
          "KTBEEB",
          "LCCB",
          "LCRCB",
          "LFNX",
          "LHCCB",
          "LJB",
          "LNDGRCU",
          "LNFSRCC",
          "LNFSRCU",
          "LNGDNXB",
          "LNRBANK",
          "LNRCC",
          "LPSCCB",
          "LSB",
          "LSBC",
          "LSCCB",
          "LSLZRCB",
          "LSZSH",
          "LXXHRCU",
          "LYJMNXB",
          "LYXGNXB",
          "LZB",
          "LZCCB",
          "LZLMTRCB",
          "LZNXB",
          "LZNXRCC",
          "MHBK",
          "MJMFRCU",
          "MSBANK",
          "MSBI",
          "MTCCB",
          "MUFGBANK",
          "MXNX",
          "MYBANK",
          "MYCCB",
          "MZKSHB",
          "NABC",
          "NAP",
          "NBBLQRCC",
          "NBSHSEEB",
          "NBYYRCU",
          "NCB",
          "NCBC",
          "NCCB",
          "NCMFRCU",
          "NDHB",
          "NHB",
          "NJCB",
          "NJXLEEB",
          "NKQLRCB",
          "NMGNXS",
          "NMGTMTYQRCU",
          "NORDLB",
          "NWXRDEEB",
          "NXQDEEB",
          "NXYZCZEEB",
          "NYCCB",
          "NYHRCU",
          "NYSRCU",
          "OCBC",
          "OCBCCN",
          "OHRCU",
          "ORDSB",
          "PAB",
          "PBBEEB",
          "PDSB",
          "PDXCDEEB",
          "PFSVB",
          "PGGMCZEEB",
          "PJZPRCU",
          "PSBC",
          "PYRCB",
          "PZHCCB",
          "PZWHRCB",
          "QDCCB",
          "QDHDBANK",
          "QDNSYHRCU",
          "QDRCU",
          "QHDB",
          "QHRCCB",
          "QINNONGBANK",
          "QJCCB",
          "QLB",
          "QNBEEB",
          "QSB",
          "QZCCB",
          "QZNX",
          "RABOBANK",
          "RBS",
          "RHEB",
          "RJNX",
          "SCB",
          "SCBANK",
          "SCBZRCB",
          "SCCDRCU",
          "SCLZCCB",
          "SCMRCB",
          "SCNX",
          "SCRCU",
          "SCXCRCB",
          "SCYAHMBANK",
          "SDEB",
          "SDLZRCB",
          "SDNXB",
          "SDNXS",
          "SDQLCZEEB",
          "SDWHRCU",
          "SDXTRCB",
          "SDZZB",
          "SHINHANCHINA",
          "SHJRCU",
          "SHRB",
          "SHZBEEB",
          "SJB",
          "SJZRCC",
          "SLBEEB",
          "SMBC",
          "SMYZB",
          "SNCCB",
          "SPDB",
          "SQZYRCB",
          "SRCB",
          "SRCCB",
          "SSRCB",
          "SUNINGBANK",
          "SXCCB",
          "SXCZHGRCU",
          "SXCZLCRCC",
          "SXCZLDRCU",
          "SXCZPSRCC",
          "SXCZQXRCC",
          "SXCZQYXRCC",
          "SXCZRCB",
          "SXCZTLXRCC",
          "SXCZWXXRCC",
          "SXDTBDRCU",
          "SXDTRCC",
          "SXGJRCU",
          "SXHJRCU",
          "SXHMRCU",
          "SXHQRCB",
          "SXJXRCU",
          "SXJZRCC",
          "SXLCRCU",
          "SXLSRCU",
          "SXNX",
          "SXPYRCU",
          "SXQXRCU",
          "SXQZRCU",
          "SXSYRCU",
          "SXWTSRCU",
          "SXXNRCU",
          "SXXYRCB",
          "SXXYRCU",
          "SXYCRCU",
          "SXYCSRCU",
          "SXYQRCB",
          "SXYXRCU",
          "SXZRCB",
          "SYRCB",
          "SYRCU",
          "SYXHDCEEB",
          "SYYZB",
          "SZB",
          "SZBABANK",
          "SZBARCB",
          "SZNSBSRCU",
          "SZPSBANK",
          "SZSCCB",
          "SZSRCB",
          "SZXRCC",
          "TACCB",
          "TAIFENGBANK",
          "TATSRCU",
          "TCRCB",
          "TFB",
          "TFBANK",
          "TJBHB",
          "TRCB",
          "TSCCB",
          "TSRCC",
          "TYSQCPXDEEB",
          "TYSRCC",
          "TZB",
          "TZYZB",
          "UBS",
          "UCB",
          "UCCB",
          "UOBC",
          "URCB",
          "WEBANK",
          "WEGOBANK",
          "WHCB",
          "WHCCB",
          "WHRCB",
          "WINGLUNGBANK",
          "WJQGMCZEEB",
          "WJRCB",
          "WNNXB",
          "WOORIBANKCHINA",
          "WSNXB",
          "WSXRCC",
          "WSXRDEEB",
          "WXRCB",
          "WXSYBANK",
          "WXXZDEEB",
          "WZCB",
          "XABANK",
          "XACB",
          "XANXB",
          "XFXWDEEB",
          "XIB",
          "XJB",
          "XJCJBEEB",
          "XJCJRCB",
          "XJHHB",
          "XJKCCB",
          "XJLZBEEB",
          "XJRCCB",
          "XJYLBEEB",
          "XMCCB",
          "XMRCB",
          "XNRCB",
          "XSBEEB",
          "XSRCC",
          "XTB",
          "XWBANK",
          "XWNX",
          "XXSRCU",
          "XYLFEEB",
          "XYPPZX",
          "XZB",
          "XZNCXH",
          "XZSXFQXDEEB",
          "XZZYCB",
          "YACCB",
          "YAMAGUCHIBANK",
          "YANTAIRCB",
          "YBCCB",
          "YBNSYH",
          "YBYZB",
          "YFBANK",
          "YGCCNX",
          "YGXXDEEB",
          "YHBEEB",
          "YHRCB",
          "YILLIONBANK",
          "YJSHEEB",
          "YNHTB",
          "YNHTRCC",
          "YNKMGDRCC",
          "YNLJFDBANK",
          "YNNCRCC",
          "YNRCC",
          "YQCCB",
          "YSSNXB",
          "YSYXRCB",
          "YTB",
          "YTXNXB",
          "YWBANKRCB",
          "YWBANKRCU",
          "YXJDEEB",
          "YZNSH",
          "ZBANK",
          "ZBCCB",
          "ZGCB",
          "ZGCCB",
          "ZGYZB",
          "ZHNSB",
          "ZJCXRCB",
          "ZJDQB",
          "ZJDSRCB",
          "ZJHNRB",
          "ZJHYRCB",
          "ZJJRCB",
          "ZJKCCB",
          "ZJLQRCU",
          "ZJLWRCU",
          "ZJNX",
          "ZJQQRCB",
          "ZJRCB",
          "ZJSYRCB",
          "ZJSZBANK",
          "ZJTLCB",
          "ZJXCB",
          "ZJXSB",
          "ZJXSHSEEB",
          "ZJYHHH",
          "ZJYKRCU",
          "ZKCCB",
          "ZRCB",
          "ZSEB",
          "ZYB",
          "ZYCCB",
          "ZYFDCZEEB",
          "ZZB",
          "ZZKCNXB",
          "ZZNSH",
          "ZZSJNXB"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvBankType"
      },
      "BaseSrvCardAccountType": {
        "type": "string",
        "enum": [
          "COMPANY",
          "PERSONAL",
          "SELF_EMPLOYED"
        ],
        "x-enum-labels": [
          "企业账户",
          "个人账户",
          "个体户"
        ],
        "x-enum-vals": [
          2,
          1,
          3
        ],
        "x-enum-values": [
          "COMPANY",
          "PERSONAL",
          "SELF_EMPLOYED"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvCardAccountType"
      },
      "BaseSrvCardType": {
        "type": "string",
        "enum": [
          "CREDIT_CARD",
          "DEBIT_CARD"
        ],
        "x-enum-labels": [
          "个人贷记卡",
          "个人借记卡"
        ],
        "x-enum-vals": [
          2,
          1
        ],
        "x-enum-values": [
          "CREDIT_CARD",
          "DEBIT_CARD"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvCardType"
      },
      "BaseSrvChannelType": {
        "type": "string",
        "enum": [
          "ALIPAY",
          "CPCN_ACCOUNT_ALL_NEGATIVE_SCAN_CODE",
          "CPCN_ACCOUNT_ALL_POSITIVE_SCAN_CODE",
          "CPCN_ACCOUNT_APP",
          "CPCN_ACCOUNT_BALANCE",
          "CPCN_ACCOUNT_BANK_TRANSFER",
          "CPCN_ACCOUNT_FEE_SETTLEMENT",
          "CPCN_ACCOUNT_FEE_TRANSFER",
          "CPCN_ACCOUNT_NEGATIVE_SCAN_CODE",
          "CPCN_ACCOUNT_OFFICIAL_ACCOUNT",
          "CPCN_ACCOUNT_ONLINE_BANK",
          "CPCN_ACCOUNT_POSITIVE_SCAN_CODE",
          "CPCN_ACCOUNT_QUICK",
          "CPCN_ACCOUNT_SUPPLIER_SETTLEMENT",
          "CPCN_ACCOUNT_TRANSFER",
          "CPCN_ACCOUNT_UNIONER_SETTLEMENT",
          "CPCN_MERCHANT_NEGATIVE_SCAN_CODE",
          "CPCN_MERCHANT_OFFICIAL_ACCOUNT",
          "CPCN_MERCHANT_OFFLINE",
          "CPCN_MERCHANT_ONLINE_BANK",
          "CPCN_MERCHANT_POSITIVE_SCAN_CODE",
          "CPCN_MERCHANT_QUICK",
          "CPCN_NEGATIVE_SCAN_CODE",
          "CPCN_OFFICIAL_ACCOUNT",
          "CPCN_ONLINE_BANK",
          "CPCN_PAY",
          "CPCN_POSITIVE_SCAN_CODE",
          "CPCN_QUICK",
          "CUTEBEAR_BTOB_TRADE",
          "CUTEBEAR_TRADE",
          "MYBANK_CLOUD_FUNDS",
          "MYBANK_CLOUD_FUNDS_BALANCE",
          "MYBANK_CLOUD_FUNDS_MINIAPP",
          "MYBANK_CLOUD_SUPPLIER_SETTLEMENT",
          "MYBANK_CLOUD_UNIONER_SETTLEMENT",
          "MYBANK_VOSTRO",
          "OVSP_APP",
          "OVSP_OFFICIAL_ACCOUNT",
          "OVSP_ONLINE_BANK",
          "OVSP_POSITIVE_SCAN_CODE",
          "OVSP_QUICK",
          "VSP_APP",
          "VSP_BALANCE",
          "VSP_NEGATIVE_SCAN_CODE",
          "VSP_OFFICIAL_ACCOUNT",
          "VSP_ONLINE_BANK",
          "VSP_POSITIVE_SCAN_CODE",
          "VSP_QUICK",
          "VSP_TRANSFER",
          "WECHAT",
          "WECHAT_APPLET",
          "WECHAT_MCH_PAY",
          "WECHAT_OFFICIAL_ACCOUNT"
        ],
        "x-enum-labels": [
          "支付宝支付(未启用)",
          "中金账户模式聚合码(反扫)",
          "中金账户模式聚合码(正扫)",
          "中金账户模式账户APP支付",
          "中金账户模式账户余额支付",
          "中金账户模式来账识别",
          "中金账户模式费用结算",
          "中金账户模式手续费转账",
          "中金账户模式扫码支付（反扫）",
          "中金账户模式公众号支付",
          "中金账户模式网银支付",
          "中金账户模式扫码支付（正扫）",
          "中金账户模式快捷支付",
          "中金账户模式采购结算",
          "中金账户模式账户间转账",
          "中金账户模式联营结算",
          "中金商户模式扫码支付（反扫）",
          "中金商户模式公众号支付",
          "中金商户模式线下付款",
          "中金商户模式网银支付",
          "中金商户模式扫码支付（正扫）",
          "中金商户模式快捷支付",
          "中金市场模式扫码支付（反扫）",
          "中金市场模式公众号支付",
          "中金市场模式网银支付",
          "中金支付(市场模式小程序,仅用于直点)",
          "中金市场模式扫码支付（正扫）",
          "中金市场模式快捷支付",
          "笨熊融合支付(余额支付)(未启用)",
          "笨熊支付(收单接口)(未启用)",
          "网商云资金",
          "网商云资金-余额支付",
          "网商云资金-小程序支付",
          "网商云资金采购结算",
          "网商云资金联营结算",
          "网商银行来账识别",
          "收银宝APP跳转微信小程序支付",
          "收银宝公众号支付",
          "收银宝网银支付",
          "收银宝扫码支付（正扫）",
          "收银宝快捷支付",
          "通联APP跳转微信小程序支付",
          "通联余额支付",
          "通联扫码支付（反扫）",
          "通联公众号支付",
          "通联网银支付",
          "通联扫码支付（正扫）",
          "通联快捷支付",
          "通联账户间转账",
          "微信支付(未启用)",
          "微信小程序支付",
          "微信企业付款(未启用)",
          "微信公众号支付(未启用)"
        ],
        "x-enum-vals": [
          4,
          30,
          29,
          28,
          27,
          31,
          40,
          39,
          24,
          25,
          22,
          23,
          21,
          33,
          26,
          32,
          12,
          13,
          14,
          9,
          11,
          10,
          18,
          19,
          15,
          8,
          17,
          16,
          6,
          5,
          34,
          35,
          36,
          38,
          37,
          20,
          53,
          51,
          50,
          52,
          49,
          47,
          46,
          45,
          43,
          42,
          44,
          41,
          48,
          1,
          2,
          7,
          3
        ],
        "x-enum-values": [
          "ALIPAY",
          "CPCN_ACCOUNT_ALL_NEGATIVE_SCAN_CODE",
          "CPCN_ACCOUNT_ALL_POSITIVE_SCAN_CODE",
          "CPCN_ACCOUNT_APP",
          "CPCN_ACCOUNT_BALANCE",
          "CPCN_ACCOUNT_BANK_TRANSFER",
          "CPCN_ACCOUNT_FEE_SETTLEMENT",
          "CPCN_ACCOUNT_FEE_TRANSFER",
          "CPCN_ACCOUNT_NEGATIVE_SCAN_CODE",
          "CPCN_ACCOUNT_OFFICIAL_ACCOUNT",
          "CPCN_ACCOUNT_ONLINE_BANK",
          "CPCN_ACCOUNT_POSITIVE_SCAN_CODE",
          "CPCN_ACCOUNT_QUICK",
          "CPCN_ACCOUNT_SUPPLIER_SETTLEMENT",
          "CPCN_ACCOUNT_TRANSFER",
          "CPCN_ACCOUNT_UNIONER_SETTLEMENT",
          "CPCN_MERCHANT_NEGATIVE_SCAN_CODE",
          "CPCN_MERCHANT_OFFICIAL_ACCOUNT",
          "CPCN_MERCHANT_OFFLINE",
          "CPCN_MERCHANT_ONLINE_BANK",
          "CPCN_MERCHANT_POSITIVE_SCAN_CODE",
          "CPCN_MERCHANT_QUICK",
          "CPCN_NEGATIVE_SCAN_CODE",
          "CPCN_OFFICIAL_ACCOUNT",
          "CPCN_ONLINE_BANK",
          "CPCN_PAY",
          "CPCN_POSITIVE_SCAN_CODE",
          "CPCN_QUICK",
          "CUTEBEAR_BTOB_TRADE",
          "CUTEBEAR_TRADE",
          "MYBANK_CLOUD_FUNDS",
          "MYBANK_CLOUD_FUNDS_BALANCE",
          "MYBANK_CLOUD_FUNDS_MINIAPP",
          "MYBANK_CLOUD_SUPPLIER_SETTLEMENT",
          "MYBANK_CLOUD_UNIONER_SETTLEMENT",
          "MYBANK_VOSTRO",
          "OVSP_APP",
          "OVSP_OFFICIAL_ACCOUNT",
          "OVSP_ONLINE_BANK",
          "OVSP_POSITIVE_SCAN_CODE",
          "OVSP_QUICK",
          "VSP_APP",
          "VSP_BALANCE",
          "VSP_NEGATIVE_SCAN_CODE",
          "VSP_OFFICIAL_ACCOUNT",
          "VSP_ONLINE_BANK",
          "VSP_POSITIVE_SCAN_CODE",
          "VSP_QUICK",
          "VSP_TRANSFER",
          "WECHAT",
          "WECHAT_APPLET",
          "WECHAT_MCH_PAY",
          "WECHAT_OFFICIAL_ACCOUNT"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvChannelType"
      },
      "BaseSrvClearStatus": {
        "type": "string",
        "enum": [
          "DONE",
          "ERROR",
          "NO",
          "WAIT"
        ],
        "x-enum-labels": [
          "清算完成",
          "清算出错",
          "无须执行清算",
          "未开始"
        ],
        "x-enum-vals": [
          3,
          4,
          1,
          2
        ],
        "x-enum-values": [
          "DONE",
          "ERROR",
          "NO",
          "WAIT"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvClearStatus"
      },
      "BaseSrvComplianceStatus": {
        "type": "string",
        "enum": [
          "00",
          "02",
          "03",
          "04",
          "05",
          "09"
        ],
        "x-enum-labels": [
          "待审核状态",
          "审核完毕",
          "已补录待审核",
          "待二次补充",
          "补充完毕",
          "七天未处理系统冻结"
        ],
        "x-enum-vals": [
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "x-enum-values": [
          "00",
          "02",
          "03",
          "04",
          "05",
          "09"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvComplianceStatus"
      },
      "BaseSrvElectronicStatus": {
        "type": "string",
        "enum": [
          "CREATED",
          "DEALING",
          "FAIL",
          "SUCCESS"
        ],
        "x-enum-labels": [
          "已创建",
          "处理中",
          "失败",
          "成功"
        ],
        "x-enum-vals": [
          1,
          2,
          4,
          3
        ],
        "x-enum-values": [
          "CREATED",
          "DEALING",
          "FAIL",
          "SUCCESS"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvElectronicStatus"
      },
      "BaseSrvElectronicType": {
        "type": "string",
        "enum": [
          "SETTLEMENT",
          "TRADE"
        ],
        "x-enum-labels": [
          "结算",
          "交易"
        ],
        "x-enum-vals": [
          2,
          1
        ],
        "x-enum-values": [
          "SETTLEMENT",
          "TRADE"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvElectronicType"
      },
      "BaseSrvGatheringPaymentFlag": {
        "type": "string",
        "enum": [
          "BALANCE",
          "GATHERING",
          "NORMAL",
          "SETTLEMENT"
        ],
        "x-enum-labels": [
          "支付账户余额代付",
          "代付通账户代付",
          "普通代付",
          "结算户代付"
        ],
        "x-enum-vals": [
          2,
          3,
          1,
          4
        ],
        "x-enum-values": [
          "BALANCE",
          "GATHERING",
          "NORMAL",
          "SETTLEMENT"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvGatheringPaymentFlag"
      },
      "BaseSrvGatheringStatus": {
        "type": "string",
        "enum": [
          "CLOSED",
          "DEALING",
          "FAIL",
          "SUCCESS",
          "UNPAY"
        ],
        "x-enum-labels": [
          "交易已撤销",
          "代付交易处理中",
          "交易失败",
          "交易成功",
          "代付交易已创建"
        ],
        "x-enum-vals": [
          5,
          2,
          4,
          3,
          1
        ],
        "x-enum-values": [
          "CLOSED",
          "DEALING",
          "FAIL",
          "SUCCESS",
          "UNPAY"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvGatheringStatus"
      },
      "BaseSrvHandingFeeMode": {
        "type": "string",
        "enum": [
          "PRECHARGE",
          "TRADING"
        ],
        "x-enum-labels": [
          "预充值",
          "实时"
        ],
        "x-enum-vals": [
          1,
          2
        ],
        "x-enum-values": [
          "PRECHARGE",
          "TRADING"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvHandingFeeMode"
      },
      "BaseSrvHandingFeeType": {
        "type": "string",
        "enum": [
          "CONSUME",
          "CONSUME_MOBILE",
          "CONSUME_PC",
          "CONSUME_ZHIDIAN",
          "GIFT",
          "RECHARGE",
          "RETURN",
          "SETTLEMENT"
        ],
        "x-enum-labels": [
          "消费",
          "移动端消费",
          "PC管理端消费",
          "直店消费",
          "赠送",
          "充值",
          "退回",
          "结算消费"
        ],
        "x-enum-vals": [
          3,
          7,
          6,
          5,
          2,
          1,
          4,
          8
        ],
        "x-enum-values": [
          "CONSUME",
          "CONSUME_MOBILE",
          "CONSUME_PC",
          "CONSUME_ZHIDIAN",
          "GIFT",
          "RECHARGE",
          "RETURN",
          "SETTLEMENT"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvHandingFeeType"
      },
      "BaseSrvIdentificationType": {
        "type": "string",
        "enum": [
          "ACCOUNTBOOK",
          "FOREIGNERSID",
          "HONGKONGID",
          "ID",
          "OFFICERID",
          "OTHER",
          "PASSPORT",
          "POLICEID",
          "SOLDIERID",
          "TAIWANID",
          "TEMPID"
        ],
        "x-enum-labels": [
          "户口簿",
          "外国人居留证",
          "港澳居民来往内地通行证",
          "身份证",
          "军官证",
          "其他证件",
          "护照",
          "警官证",
          "士兵证",
          "台湾同胞来往内地通行证",
          "临时身份证"
        ],
        "x-enum-vals": [
          2,
          9,
          6,
          1,
          4,
          11,
          3,
          10,
          5,
          7,
          8
        ],
        "x-enum-values": [
          "ACCOUNTBOOK",
          "FOREIGNERSID",
          "HONGKONGID",
          "ID",
          "OFFICERID",
          "OTHER",
          "PASSPORT",
          "POLICEID",
          "SOLDIERID",
          "TAIWANID",
          "TEMPID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvIdentificationType"
      },
      "BaseSrvMerchantAuthStatus": {
        "type": "string",
        "enum": [
          "CLOSED",
          "CREATED",
          "FAILED",
          "SUBMITED",
          "SUCCESS"
        ],
        "x-enum-labels": [
          "进件信息停用",
          "已创建",
          "服务商授权失败",
          "已提交至服务商",
          "服务商已全部授权"
        ],
        "x-enum-vals": [
          5,
          1,
          4,
          2,
          3
        ],
        "x-enum-values": [
          "CLOSED",
          "CREATED",
          "FAILED",
          "SUBMITED",
          "SUCCESS"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvMerchantAuthStatus"
      },
      "BaseSrvMerchantPayType": {
        "type": "string",
        "enum": [
          "APP",
          "H5",
          "JSAPI",
          "MINIAPP",
          "SCAN_OBVERSE",
          "SCAN_POSITIVE"
        ],
        "x-enum-labels": [
          "APP",
          "H5",
          "JSAPI",
          "小程序",
          "反扫",
          "正扫"
        ],
        "x-enum-vals": [
          3,
          6,
          4,
          5,
          2,
          1
        ],
        "x-enum-values": [
          "APP",
          "H5",
          "JSAPI",
          "MINIAPP",
          "SCAN_OBVERSE",
          "SCAN_POSITIVE"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvMerchantPayType"
      },
      "BaseSrvMerchantPayWay": {
        "type": "string",
        "enum": [
          "ALIPAY",
          "UNIONPAY",
          "WECHAT"
        ],
        "x-enum-labels": [
          "支付宝",
          "银联",
          "微信"
        ],
        "x-enum-vals": [
          2,
          3,
          1
        ],
        "x-enum-values": [
          "ALIPAY",
          "UNIONPAY",
          "WECHAT"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvMerchantPayWay"
      },
      "BaseSrvMerchantUserType": {
        "type": "string",
        "enum": [
          "CORPORATION",
          "INDIVIDUAL",
          "RETAILER"
        ],
        "x-enum-labels": [
          "企业",
          "个人",
          "个体户"
        ],
        "x-enum-vals": [
          20,
          10,
          30
        ],
        "x-enum-values": [
          "CORPORATION",
          "INDIVIDUAL",
          "RETAILER"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvMerchantUserType"
      },
      "BaseSrvOcrStatus": {
        "type": "string",
        "enum": [
          "FAIL",
          "SUCCESS"
        ],
        "x-enum-labels": [
          "失败",
          "成功"
        ],
        "x-enum-vals": [
          2,
          1
        ],
        "x-enum-values": [
          "FAIL",
          "SUCCESS"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvOcrStatus"
      },
      "BaseSrvOpenSteps": {
        "type": "string",
        "enum": [
          "BIND_CARD",
          "BIND_PHONE",
          "FINAL_OPEN",
          "OPEN_ACCOUNT",
          "OPEN_VSP",
          "SIGN",
          "SUBMIT_MERCHANT_INFO"
        ],
        "x-enum-labels": [
          "绑卡",
          "绑定手机",
          "后台开通",
          "开户",
          "开通收银宝",
          "签署协议",
          "进件"
        ],
        "x-enum-vals": [
          1,
          6,
          4,
          2,
          5,
          7,
          3
        ],
        "x-enum-values": [
          "BIND_CARD",
          "BIND_PHONE",
          "FINAL_OPEN",
          "OPEN_ACCOUNT",
          "OPEN_VSP",
          "SIGN",
          "SUBMIT_MERCHANT_INFO"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvOpenSteps"
      },
      "BaseSrvPlatform": {
        "type": "string",
        "enum": [
          "DHB",
          "HXB"
        ],
        "x-enum-labels": [
          "订货宝",
          "货销宝"
        ],
        "x-enum-vals": [
          1,
          2
        ],
        "x-enum-values": [
          "DHB",
          "HXB"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvPlatform"
      },
      "BaseSrvProviderType": {
        "type": "string",
        "enum": [
          "ALLINPAY",
          "CPCN",
          "MYBANK",
          "VSP"
        ],
        "x-enum-labels": [
          "通联",
          "中金支付",
          "网商银行",
          "通联收银宝"
        ],
        "x-enum-vals": [
          3,
          1,
          2,
          4
        ],
        "x-enum-values": [
          "ALLINPAY",
          "CPCN",
          "MYBANK",
          "VSP"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvProviderType"
      },
      "BaseSrvReduceMode": {
        "type": "string",
        "enum": [
          "PROPORTION",
          "SINGLE",
          "STEP_BY_AMOUNT"
        ],
        "x-enum-labels": [
          "按比例",
          "按单笔",
          "按交易金额阶梯计价"
        ],
        "x-enum-vals": [
          2,
          1,
          3
        ],
        "x-enum-values": [
          "PROPORTION",
          "SINGLE",
          "STEP_BY_AMOUNT"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvReduceMode"
      },
      "BaseSrvReducePayMethodType": {
        "type": "string",
        "enum": [
          "CPCN_ACCOUNT_APP_PAY",
          "CPCN_ACCOUNT_APP_PAY_TRADING",
          "CPCN_ACCOUNT_BANK_TRANSFER",
          "CPCN_ACCOUNT_TRANSFER",
          "CPCN_MERCHANT_NEGATIVE_ALL_SCAN_CODE",
          "CPCN_MERCHANT_NEGATIVE_ALL_SCAN_CODE_TRADING",
          "CPCN_MERCHANT_NEGATIVE_SCAN_CODE",
          "CPCN_MERCHANT_NEGATIVE_SCAN_CODE_TRADING",
          "CPCN_MERCHANT_OFFICIAL_ACCOUNT",
          "CPCN_MERCHANT_OFFICIAL_ACCOUNT_TRADING",
          "CPCN_MERCHANT_ONLINE_BANK",
          "CPCN_MERCHANT_ONLINE_BANK_TRADING",
          "CPCN_MERCHANT_POSITIVE_ALL_SCAN_CODE",
          "CPCN_MERCHANT_POSITIVE_ALL_SCAN_CODE_TRADING",
          "CPCN_MERCHANT_POSITIVE_SCAN_CODE",
          "CPCN_MERCHANT_POSITIVE_SCAN_CODE_TRADING",
          "CPCN_MERCHANT_QUICK",
          "CPCN_MERCHANT_QUICK_TRADING",
          "GLOBAL",
          "MYBANK_VOSTRO",
          "SETTLEMENT"
        ],
        "x-enum-labels": [
          "APP支付扣费模式",
          "APP支付坐扣扣费模式",
          "中金来账识别扣费模式",
          "中金账户内转账扣费模式",
          "聚合码扫码支付(正扫)预存款扣费模式",
          "聚合码扫码支付(反扫)坐扣扣费模式",
          "扫码支付（反扫）扣费模式",
          "扫码支付（反扫）坐扣扣费模式",
          "公众号支付扣费模式",
          "公众号支付坐扣扣费模式",
          "网银支付扣费模式",
          "网银支付坐扣扣费模式",
          "聚合码扫码支付(正扫)预存款扣扣费模式",
          "聚合码扫码支付(正扫)坐扣扣费模式",
          "扫码支付（正扫）扣费模式",
          "扫码支付（正扫）坐扣扣费模式",
          "快捷支付扣费模式",
          "快捷支付坐扣扣费模式",
          "默认扣费模式",
          "来账识别扣费模式",
          "结算扣费模式"
        ],
        "x-enum-vals": [
          9,
          19,
          20,
          21,
          16,
          18,
          5,
          13,
          6,
          14,
          2,
          10,
          15,
          17,
          4,
          12,
          3,
          11,
          1,
          8,
          7
        ],
        "x-enum-values": [
          "CPCN_ACCOUNT_APP_PAY",
          "CPCN_ACCOUNT_APP_PAY_TRADING",
          "CPCN_ACCOUNT_BANK_TRANSFER",
          "CPCN_ACCOUNT_TRANSFER",
          "CPCN_MERCHANT_NEGATIVE_ALL_SCAN_CODE",
          "CPCN_MERCHANT_NEGATIVE_ALL_SCAN_CODE_TRADING",
          "CPCN_MERCHANT_NEGATIVE_SCAN_CODE",
          "CPCN_MERCHANT_NEGATIVE_SCAN_CODE_TRADING",
          "CPCN_MERCHANT_OFFICIAL_ACCOUNT",
          "CPCN_MERCHANT_OFFICIAL_ACCOUNT_TRADING",
          "CPCN_MERCHANT_ONLINE_BANK",
          "CPCN_MERCHANT_ONLINE_BANK_TRADING",
          "CPCN_MERCHANT_POSITIVE_ALL_SCAN_CODE",
          "CPCN_MERCHANT_POSITIVE_ALL_SCAN_CODE_TRADING",
          "CPCN_MERCHANT_POSITIVE_SCAN_CODE",
          "CPCN_MERCHANT_POSITIVE_SCAN_CODE_TRADING",
          "CPCN_MERCHANT_QUICK",
          "CPCN_MERCHANT_QUICK_TRADING",
          "GLOBAL",
          "MYBANK_VOSTRO",
          "SETTLEMENT"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvReducePayMethodType"
      },
      "BaseSrvRefundStatus": {
        "type": "string",
        "enum": [
          "CLOSED",
          "DEALING",
          "FAIL",
          "SUCCESS",
          "UNPAY"
        ],
        "x-enum-labels": [
          "退款已关闭",
          "处理中",
          "失败",
          "成功",
          "退款单已创建"
        ],
        "x-enum-vals": [
          5,
          2,
          4,
          3,
          1
        ],
        "x-enum-values": [
          "CLOSED",
          "DEALING",
          "FAIL",
          "SUCCESS",
          "UNPAY"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvRefundStatus"
      },
      "BaseSrvRetailerFormation": {
        "type": "string",
        "enum": [
          "10",
          "20"
        ],
        "x-enum-labels": [
          "个人经营",
          "家庭经营"
        ],
        "x-enum-vals": [
          1,
          2
        ],
        "x-enum-values": [
          "10",
          "20"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvRetailerFormation"
      },
      "BaseSrvSettTaskStatus": {
        "type": "string",
        "enum": [
          "CANCELED",
          "CREATED",
          "DEALING",
          "FAILED",
          "SUCCESS"
        ],
        "x-enum-labels": [
          "已取消",
          "已经创建",
          "处理中",
          "失败",
          "成功"
        ],
        "x-enum-vals": [
          5,
          1,
          2,
          4,
          3
        ],
        "x-enum-values": [
          "CANCELED",
          "CREATED",
          "DEALING",
          "FAILED",
          "SUCCESS"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvSettTaskStatus"
      },
      "BaseSrvSettleMode": {
        "type": "string",
        "enum": [
          "D0",
          "T1"
        ],
        "x-enum-labels": [
          "D0",
          "T1"
        ],
        "x-enum-vals": [
          2,
          1
        ],
        "x-enum-values": [
          "D0",
          "T1"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvSettleMode"
      },
      "BaseSrvSettlementStatus": {
        "type": "string",
        "enum": [
          "CREATED",
          "DEALING",
          "FAIL",
          "SUCCESS"
        ],
        "x-enum-labels": [
          "结算交易已创建",
          "结算交易处理中",
          "结算交易失败",
          "结算交易成功"
        ],
        "x-enum-vals": [
          1,
          2,
          4,
          3
        ],
        "x-enum-values": [
          "CREATED",
          "DEALING",
          "FAIL",
          "SUCCESS"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvSettlementStatus"
      },
      "BaseSrvSexType": {
        "type": "string",
        "enum": [
          "FEMALE",
          "MALE"
        ],
        "x-enum-labels": [
          "女",
          "男"
        ],
        "x-enum-vals": [
          2,
          1
        ],
        "x-enum-values": [
          "FEMALE",
          "MALE"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvSexType"
      },
      "BaseSrvSignStatus": {
        "type": "string",
        "enum": [
          "FAIL",
          "SIGNED",
          "UNSIGN"
        ],
        "x-enum-labels": [
          "签约失败",
          "签约成功",
          "未签约"
        ],
        "x-enum-vals": [
          3,
          2,
          1
        ],
        "x-enum-values": [
          "FAIL",
          "SIGNED",
          "UNSIGN"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvSignStatus"
      },
      "BaseSrvSplitBillStatus": {
        "type": "string",
        "enum": [
          "DEALING",
          "FAIL",
          "PRE_SPLIT",
          "REFUNDING",
          "REFUNED",
          "SETTLED",
          "WAIT_CONFIRM",
          "WAIT_SPLIT"
        ],
        "x-enum-labels": [
          "处理中",
          "失败",
          "预分账",
          "退回中",
          "已退回",
          "已结算",
          "待确认, 支付成功后转为待结算",
          "待结算"
        ],
        "x-enum-vals": [
          3,
          6,
          1,
          7,
          8,
          4,
          5,
          2
        ],
        "x-enum-values": [
          "DEALING",
          "FAIL",
          "PRE_SPLIT",
          "REFUNDING",
          "REFUNED",
          "SETTLED",
          "WAIT_CONFIRM",
          "WAIT_SPLIT"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvSplitBillStatus"
      },
      "BaseSrvSplitBillType": {
        "type": "string",
        "enum": [
          "DEFAULT",
          "HANDINGFEE"
        ],
        "x-enum-labels": [
          "常规分账账单",
          "手续费分账账单"
        ],
        "x-enum-vals": [
          1,
          2
        ],
        "x-enum-values": [
          "DEFAULT",
          "HANDINGFEE"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvSplitBillType"
      },
      "BaseSrvSplitMode": {
        "type": "string",
        "enum": [
          "COMPLETE",
          "TRADING"
        ],
        "x-enum-labels": [
          "交易后分账",
          "交易时分账"
        ],
        "x-enum-vals": [
          2,
          1
        ],
        "x-enum-values": [
          "COMPLETE",
          "TRADING"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvSplitMode"
      },
      "BaseSrvTradingFeeType": {
        "type": "string",
        "enum": [
          "FEE_SETTLEMENT",
          "PAY",
          "SETTLEMENT",
          "SUPPLIER_SETTLEMENT",
          "UNIONER_SETTLEMENT"
        ],
        "x-enum-labels": [
          "费用结算",
          "支付交易单",
          "结算",
          "供应商结算",
          "联营结算"
        ],
        "x-enum-vals": [
          5,
          1,
          2,
          4,
          3
        ],
        "x-enum-values": [
          "FEE_SETTLEMENT",
          "PAY",
          "SETTLEMENT",
          "SUPPLIER_SETTLEMENT",
          "UNIONER_SETTLEMENT"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvTradingFeeType"
      },
      "BaseSrvTransCurrencyType": {
        "type": "string",
        "enum": [
          "CNY"
        ],
        "x-enum-labels": [
          "人民币"
        ],
        "x-enum-vals": [
          1
        ],
        "x-enum-values": [
          "CNY"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvTransCurrencyType"
      },
      "BaseSrvTransPayStatus": {
        "type": "string",
        "enum": [
          "CLOSED",
          "DEALING",
          "FAIL",
          "SUCCESS",
          "UNPAY"
        ],
        "x-enum-labels": [
          "交易已关闭",
          "交易处理中",
          "交易失败",
          "交易成功",
          "交易已创建"
        ],
        "x-enum-vals": [
          5,
          2,
          4,
          3,
          1
        ],
        "x-enum-values": [
          "CLOSED",
          "DEALING",
          "FAIL",
          "SUCCESS",
          "UNPAY"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvTransPayStatus"
      },
      "BaseSrvTransSplitStatus": {
        "type": "string",
        "enum": [
          "SPLITED",
          "WAIT"
        ],
        "x-enum-labels": [
          "已分账",
          "待分账"
        ],
        "x-enum-vals": [
          2,
          1
        ],
        "x-enum-values": [
          "SPLITED",
          "WAIT"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvTransSplitStatus"
      },
      "BaseSrvTransSplitType": {
        "type": "string",
        "enum": [
          "BY_AREA",
          "BY_INSTITUTION",
          "BY_MANUAL",
          "NO_SPLIT"
        ],
        "x-enum-labels": [
          "按地区配置分账",
          "按机构分账",
          "按业务端自主分账",
          "不分帐"
        ],
        "x-enum-vals": [
          2,
          4,
          3,
          1
        ],
        "x-enum-values": [
          "BY_AREA",
          "BY_INSTITUTION",
          "BY_MANUAL",
          "NO_SPLIT"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvTransSplitType"
      },
      "BaseSrvTransType": {
        "type": "string",
        "enum": [
          "BALANCE_PAY",
          "FEE_SETTLEMENT_IN",
          "FEE_SETTLEMENT_OUT",
          "MYBANK_MINIAPP_PAY",
          "MYBANK_MINIAPP_RECHARGE",
          "MYBANK_MINIAPP_REFUND",
          "MYBANK_MINIAPP_SETTLEMENT",
          "MYBANK_MINIAPP_SPLIT",
          "MYBANK_MINIAPP_SPLIT_REFUND",
          "MYBANK_MINIAPP_SUPPLIER_SETTLEMENT_IN",
          "MYBANK_MINIAPP_SUPPLIER_SETTLEMENT_OUT",
          "MYBANK_MINIAPP_UNIONER_SETTLEMENT_IN",
          "MYBANK_MINIAPP_UNIONER_SETTLEMENT_OUT",
          "PAY",
          "PAY_FEE_IN",
          "PAY_FEE_OUT",
          "PAY_OUT",
          "REFUND",
          "SETTLEMENT",
          "SPLIT",
          "SUPPLIER_SETTLEMENT_IN",
          "SUPPLIER_SETTLEMENT_OUT",
          "TRANSFER",
          "TRANSFER_IN",
          "TRANSFER_OUT",
          "UNIONER_SETTLEMENT_IN",
          "UNIONER_SETTLEMENT_OUT"
        ],
        "x-enum-labels": [
          "余额支出",
          "费用结算转入",
          "费用结算转出",
          "云资金小程序支付",
          "云资金小程序充值",
          "云资金小程序退款",
          "云资金小程序提现",
          "云资金小程序支付分账收入",
          "云资金小程序支付分账退回",
          "云资金小程序支付供应商结算收入",
          "云资金小程序支付供应商结算支出",
          "云资金小程序支付联营商结算收入",
          "云资金小程序支付联营商结算支出",
          "支付",
          "手续费收入",
          "手续费支出",
          "支出",
          "退款",
          "结算",
          "分账收入",
          "供应商结算转入",
          "供应商结算转出",
          "转账",
          "转账,转入",
          "转账,转出",
          "联营商结算转入",
          "联营商结算转出"
        ],
        "x-enum-vals": [
          12,
          26,
          27,
          16,
          13,
          14,
          15,
          17,
          18,
          22,
          23,
          20,
          21,
          1,
          24,
          25,
          19,
          2,
          4,
          11,
          9,
          10,
          3,
          5,
          6,
          7,
          8
        ],
        "x-enum-values": [
          "BALANCE_PAY",
          "FEE_SETTLEMENT_IN",
          "FEE_SETTLEMENT_OUT",
          "MYBANK_MINIAPP_PAY",
          "MYBANK_MINIAPP_RECHARGE",
          "MYBANK_MINIAPP_REFUND",
          "MYBANK_MINIAPP_SETTLEMENT",
          "MYBANK_MINIAPP_SPLIT",
          "MYBANK_MINIAPP_SPLIT_REFUND",
          "MYBANK_MINIAPP_SUPPLIER_SETTLEMENT_IN",
          "MYBANK_MINIAPP_SUPPLIER_SETTLEMENT_OUT",
          "MYBANK_MINIAPP_UNIONER_SETTLEMENT_IN",
          "MYBANK_MINIAPP_UNIONER_SETTLEMENT_OUT",
          "PAY",
          "PAY_FEE_IN",
          "PAY_FEE_OUT",
          "PAY_OUT",
          "REFUND",
          "SETTLEMENT",
          "SPLIT",
          "SUPPLIER_SETTLEMENT_IN",
          "SUPPLIER_SETTLEMENT_OUT",
          "TRANSFER",
          "TRANSFER_IN",
          "TRANSFER_OUT",
          "UNIONER_SETTLEMENT_IN",
          "UNIONER_SETTLEMENT_OUT"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvTransType"
      },
      "BaseSrvWhitelistStatus": {
        "type": "string",
        "enum": [
          "CLOSED",
          "OPENED",
          "WAIT_REVIEW"
        ],
        "x-enum-labels": [
          "关闭",
          "开通",
          "待审核"
        ],
        "x-enum-vals": [
          3,
          2,
          1
        ],
        "x-enum-values": [
          "CLOSED",
          "OPENED",
          "WAIT_REVIEW"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseSrvWhitelistStatus"
      },
      "BaseTradingFee": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "$ref": "#/components/schemas/OperateTime"
          },
          {
            "$ref": "#/components/schemas/SoftDelete"
          },
          {
            "type": "object",
            "properties": {
              "channelType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvChannelType"
                  },
                  {
                    "description": "支付方式"
                  }
                ],
                "x-go-json": "channelType",
                "x-go-name": "ChannelType"
              },
              "comment": {
                "type": "string",
                "description": "说明",
                "x-go-json": "comment",
                "x-go-name": "Comment"
              },
              "fee": {
                "type": "integer",
                "format": "int64",
                "description": "收取手续费金额",
                "x-go-json": "fee",
                "x-go-name": "Fee"
              },
              "feeAccountID": {
                "type": "string",
                "format": "uint64",
                "description": "手续费账户id",
                "x-go-json": "feeAccountID,string",
                "x-go-name": "FeeAccountID"
              },
              "feeRate": {
                "type": "number",
                "format": "double",
                "description": "手续费汇率",
                "x-go-json": "feeRate",
                "x-go-name": "FeeRate"
              },
              "payeeAccountID": {
                "type": "string",
                "format": "uint64",
                "description": "支付手续费账户ID，即此笔收款方的账户ID",
                "x-go-json": "payeeAccountID,string",
                "x-go-name": "PayeeAccountID"
              },
              "payerAccountID": {
                "type": "string",
                "format": "uint64",
                "description": "客户付款账户ID，下游客户的账户ID",
                "x-go-json": "payerAccountID,string",
                "x-go-name": "PayerAccountID"
              },
              "tfID": {
                "type": "string",
                "format": "uint64",
                "description": "流水ID",
                "x-go-json": "tfID,string",
                "x-go-name": "TFID"
              },
              "totalAmount": {
                "type": "integer",
                "format": "int64",
                "description": "交易金额",
                "x-go-json": "totalAmount",
                "x-go-name": "TotalAmount"
              },
              "tradeNo": {
                "type": "string",
                "format": "uint64",
                "description": "关联单号，交易为交易单号，结算为结算单号",
                "x-go-json": "tradeNo,string",
                "x-go-name": "TradeNo"
              },
              "type": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvTradingFeeType"
                  },
                  {
                    "description": "类型"
                  }
                ],
                "x-go-json": "type",
                "x-go-name": "Type"
              }
            },
            "required": [
              "channelType",
              "comment",
              "fee",
              "feeAccountID",
              "feeRate",
              "payeeAccountID",
              "payerAccountID",
              "tfID",
              "totalAmount",
              "tradeNo",
              "type"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseTradingFee"
      },
      "BaseVSPBankBranch": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "$ref": "#/components/schemas/SoftDelete"
          },
          {
            "type": "object",
            "properties": {
              "area": {
                "type": "string",
                "description": "城市",
                "x-go-json": "area",
                "x-go-name": "Area"
              },
              "bankCode": {
                "type": "string",
                "description": "银行代码",
                "x-go-json": "bankCode",
                "x-go-name": "BankCode"
              },
              "bankName": {
                "type": "string",
                "description": "分支行名称",
                "x-go-json": "bankName",
                "x-go-name": "BankName"
              },
              "branchBankCode": {
                "type": "string",
                "description": "分支行代码",
                "x-go-json": "branchBankCode",
                "x-go-name": "BranchBankCode"
              },
              "province": {
                "type": "string",
                "description": "省份",
                "x-go-json": "province",
                "x-go-name": "Province"
              }
            },
            "required": [
              "area",
              "bankCode",
              "bankName",
              "branchBankCode",
              "province"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseVSPBankBranch"
      },
      "BaseVSPBankBranchList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/BaseVSPBankBranch"
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseVSPBankBranchList"
      },
      "BaseVSPMccID": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "type": "object",
            "properties": {
              "mccID": {
                "type": "string",
                "description": "所属行业ID",
                "x-go-json": "mccID",
                "x-go-name": "MccID"
              },
              "mccName": {
                "type": "string",
                "description": "行业名称",
                "x-go-json": "mccName",
                "x-go-name": "MccName"
              }
            },
            "required": [
              "mccID",
              "mccName"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseVSPMccID"
      },
      "BaseVSPMccIDList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/BaseVSPMccID"
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.BaseVSPMccIDList"
      },
      "BatchCreateChannelForAccountBody": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatchCreateChannelForAccountData"
            },
            "x-go-json": "data",
            "x-go-name": "Data"
          }
        },
        "required": [
          "data"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/account.BatchCreateChannelForAccountBody"
      },
      "BatchCreateChannelForAccountData": {
        "type": "object",
        "properties": {
          "channelType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvChannelType"
              },
              {
                "description": "开通渠道"
              }
            ],
            "x-go-json": "channelType",
            "x-go-name": "ChannelType"
          },
          "config": {
            "type": "string",
            "minLength": 0,
            "description": "配置参数详情接口说明",
            "x-go-json": "config",
            "x-go-name": "Config",
            "x-go-validate": "@string[0,]"
          }
        },
        "required": [
          "channelType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/account.BatchCreateChannelForAccountData"
      },
      "BatchOpAccountChannelBody": {
        "type": "object",
        "properties": {
          "channelType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseSrvChannelType"
            },
            "description": "支付渠道",
            "x-go-json": "channelType",
            "x-go-name": "ChannelType"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountChannelStatus"
              },
              {
                "description": "启用禁用状态"
              }
            ],
            "x-go-json": "status",
            "x-go-name": "Status"
          }
        },
        "required": [
          "channelType",
          "status"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/account.BatchOpAccountChannelBody"
      },
      "BindBankCardForAccountBody": {
        "type": "object",
        "properties": {
          "bankAddress": {
            "type": "string",
            "description": "开户行地址",
            "x-go-json": "bankAddress",
            "x-go-name": "BankAddress",
            "x-go-validate": "@char[0,100]"
          },
          "bankCity": {
            "type": "string",
            "description": "开户分支行行城市",
            "x-go-json": "bankCity",
            "x-go-name": "BankCity",
            "x-go-validate": "@char[1,100]"
          },
          "bankCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvBankType"
              },
              {
                "description": "开户银行"
              }
            ],
            "x-go-json": "bankCode",
            "x-go-name": "BankCode"
          },
          "bankName": {
            "type": "string",
            "description": "开户分支行名称",
            "x-go-json": "bankName",
            "x-go-name": "BankName",
            "x-go-validate": "@char[1,100]"
          },
          "bankProvince": {
            "type": "string",
            "description": "开户分支行省份",
            "x-go-json": "bankProvince",
            "x-go-name": "BankProvince",
            "x-go-validate": "@char[1,60]"
          },
          "bindID": {
            "type": "string",
            "format": "uint64",
            "minimum": 0,
            "description": "绑定流水号",
            "x-go-json": "bindID,string",
            "x-go-name": "BindID",
            "x-go-validate": "@uint64[0,]"
          },
          "cardAccountType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvCardAccountType"
              },
              {
                "description": "银行卡类型"
              }
            ],
            "x-go-json": "cardAccountType",
            "x-go-name": "CardAccountType"
          },
          "cardName": {
            "type": "string",
            "description": "银行卡账户名",
            "x-go-json": "cardName",
            "x-go-name": "CardName",
            "x-go-validate": "@char[1,60]"
          },
          "cardNo": {
            "type": "string",
            "description": "银行卡卡号",
            "x-go-json": "cardNo",
            "x-go-name": "CardNo",
            "x-go-validate": "@char[1,30]"
          }
        },
        "required": [
          "cardAccountType",
          "cardName",
          "cardNo",
          "bankCode",
          "bankName",
          "bankProvince",
          "bankCity"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/account.BindBankCardForAccountBody"
      },
      "BindCardBody": {
        "type": "object",
        "properties": {
          "bankAccountName": {
            "type": "string",
            "description": "银行账户 注:操作标识名称 OperationFlag=10 时必填",
            "x-go-json": "bankAccountName",
            "x-go-name": "BankAccountName",
            "x-go-validate": "@char[0,128]"
          },
          "bankAccountNumber": {
            "type": "string",
            "description": "银行账户号码 注:操作标识 OperationFlag=10 时必填",
            "x-go-json": "bankAccountNumber",
            "x-go-name": "BankAccountNumber",
            "x-go-validate": "@char[0,32]"
          },
          "bankAccountType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayAccountUserType"
              },
              {
                "enum": [
                  "11",
                  "12"
                ],
                "description": "账户类型: 11=个人账 户 12=企业账户"
              }
            ],
            "x-go-json": "bankAccountType",
            "x-go-name": "BankAccountType",
            "x-go-validate": "@string{11,12}"
          },
          "bankCardType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayBankCardType"
              },
              {
                "enum": [
                  "",
                  "10",
                  "20"
                ],
                "description": "卡类型 10=借记账 户 20=贷记账户,注:卡类型 20=贷记账户 (仅支持个人) 注:操作标识 OperationFlag=10 和个人时必填"
              }
            ],
            "x-go-json": "bankCardType",
            "x-go-name": "BankCardType",
            "x-go-validate": "@string{,10,20}"
          },
          "bankCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvBankType"
              },
              {
                "description": "绑定银行ID,操作标识 OperationFlag=10 时必填"
              }
            ],
            "x-go-json": "bankCode",
            "x-go-name": "BankCode"
          },
          "bankPhoneNumber": {
            "type": "string",
            "description": "银行卡预留手机号码,注:操作标识 OperationFlag=10 和个人时必填",
            "x-go-json": "bankPhoneNumber",
            "x-go-name": "BankPhoneNumber",
            "x-go-validate": "@char[0,16]"
          },
          "branchName": {
            "type": "string",
            "description": "分支行名称,注:操作标识 OperationFlag=10 和企业时必填",
            "x-go-json": "branchName",
            "x-go-name": "BranchName",
            "x-go-validate": "@char[0,128]"
          },
          "city": {
            "type": "integer",
            "format": "int64",
            "description": "城市",
            "default": "0",
            "x-go-json": "city",
            "x-go-name": "City"
          },
          "credentialNumber": {
            "type": "string",
            "description": "身份证号,注:操作标识 OperationFlag=10 时和个人时必填",
            "x-go-json": "credentialNumber",
            "x-go-name": "CredentialNumber",
            "x-go-validate": "@char[0,18]"
          },
          "credentialType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayCredentialType"
              },
              {
                "description": "证件类型 0=身份证,注:操作标识OperationFlag=10时和个人时必填"
              }
            ],
            "x-go-json": "credentialType",
            "x-go-name": "CredentialType"
          },
          "cvn2": {
            "type": "string",
            "description": "信用卡背面的末3位数字,注:个人贷记卡时必填",
            "x-go-json": "cvn2",
            "x-go-name": "CVN2",
            "x-go-validate": "@char[0,3]"
          },
          "province": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayProvince"
              },
              {
                "description": "省份"
              }
            ],
            "x-go-json": "province",
            "x-go-name": "Province"
          },
          "uID": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "description": "绑定用户中心UID",
            "x-go-json": "uID",
            "x-go-name": "UID",
            "x-go-validate": "@string[1,32]"
          },
          "validDate": {
            "type": "string",
            "description": "信用卡有效期 注:格式 YYMM;个人贷记卡时必填",
            "x-go-json": "validDate",
            "x-go-name": "ValidDate",
            "x-go-validate": "@char[0,4]"
          }
        },
        "required": [
          "uID",
          "bankAccountType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.BindCardBody"
      },
      "BindCardConfirmBody": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "description": "打款金额,注:单位:分，验证方式:20 时必填;100 分(1 元)以内 随机金额",
            "x-go-json": "amount",
            "x-go-name": "Amount",
            "x-go-validate": "@int64[0,]"
          },
          "bindId": {
            "type": "integer",
            "format": "uint64",
            "description": "绑定流水号",
            "x-go-json": "bindId",
            "x-go-name": "BindId"
          },
          "cvn2": {
            "type": "string",
            "description": "信用卡背面的末3位数字,注:验证方式:10=短信验证时原绑卡申请为绑定信用卡该项必填",
            "x-go-json": "cvn2",
            "x-go-name": "CVN2",
            "x-go-validate": "@char[0,3]"
          },
          "smsCode": {
            "type": "string",
            "description": "短信验证码,注:有效时间:15 分钟，验证方式:10时必填",
            "x-go-json": "smsCode",
            "x-go-name": "SMSCode",
            "x-go-validate": "@char[0,6]"
          },
          "validDate": {
            "type": "string",
            "description": "信用卡有效期，格式YYMM, 注:验证方式:10=短信验证时原绑卡申请为绑定信用卡该项必填",
            "x-go-json": "validDate",
            "x-go-name": "ValidDate",
            "x-go-validate": "@char[0,4]"
          },
          "verifyWay": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayAccountBindCardVerifyWay"
              },
              {
                "description": "验证方式: 10=短信验证 20=企业被动小额打款验证,注:验证方式:20=企业被动小额打款验证;仅限企业绑卡;"
              }
            ],
            "x-go-json": "verifyWay",
            "x-go-name": "VerifyWay"
          }
        },
        "required": [
          "bindId",
          "verifyWay"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.BindCardConfirmBody"
      },
      "BindCardConfirmResp": {
        "type": "object",
        "properties": {
          "availableVeriCount": {
            "type": "integer",
            "format": "int64",
            "description": "剩余可验证次数 注:企业银行账户绑定时不为空;最多可有效验证 3 次",
            "x-go-json": "availableVeriCount",
            "x-go-name": "AvailableVeriCount"
          },
          "deadLine": {
            "type": "string",
            "description": "打款截止 日期; yyyyMMdd,企业银行账户绑定时不为空;注:有效期:3个自然日",
            "x-go-json": "deadLine",
            "x-go-name": "DeadLine"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayAccountBindCardStatus"
              },
              {
                "description": "状态: 18=被动已打 款待验证 20=处理中 30=成功 40=失败，注:当企业绑卡确认、打款金 额已校验但未成功且剩余可验证次数\u003e=1 时，状态为 18=被动已打款待验证; 当接口字段均已校验成功，但交易未完成，状态为 20=处理中"
              }
            ],
            "x-go-json": "status",
            "x-go-name": "Status"
          }
        },
        "required": [
          "status",
          "availableVeriCount",
          "deadLine"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.BindCardConfirmResp"
      },
      "BindCardList": {
        "type": "object",
        "properties": {
          "bankCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvBankType"
              },
              {
                "description": "开户银行"
              }
            ],
            "x-go-json": "bankCode",
            "x-go-name": "BankCode"
          },
          "bindID": {
            "type": "string",
            "format": "uint64",
            "description": "绑卡序号",
            "x-go-json": "bindID,string",
            "x-go-name": "BindID"
          },
          "cardNo": {
            "type": "string",
            "description": "银行卡号（脱敏）",
            "x-go-json": "cardNo",
            "x-go-name": "CardNo",
            "x-go-validate": "@char[1,20]"
          },
          "cardType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvCardType"
              },
              {
                "description": "银行卡类型"
              }
            ],
            "x-go-json": "cardType",
            "x-go-name": "CardType"
          }
        },
        "required": [
          "bindID",
          "bankCode",
          "cardType",
          "cardNo"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/quick.BindCardList"
      },
      "BindCardResp": {
        "type": "object",
        "properties": {
          "bindId": {
            "type": "integer",
            "format": "uint64",
            "description": "绑定流水id",
            "x-go-json": "bindId",
            "x-go-name": "BindId"
          },
          "deadLine": {
            "type": "string",
            "description": "打款截止 日期; yyyyMMdd,企业银行账户绑定时不为空;注:有效期:3个自然日",
            "x-go-json": "deadLine",
            "x-go-name": "DeadLine"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayAccountBindCardStatus"
              },
              {
                "description": "状态: 10=处理中 15=待短信验证 17=待被动打款验证 18=被动已打款待验证 30=成功 40=失败"
              }
            ],
            "x-go-json": "status",
            "x-go-name": "Status"
          },
          "txSn": {
            "type": "string",
            "description": "绑卡流水号",
            "x-go-json": "txSn",
            "x-go-name": "TxSN"
          }
        },
        "required": [
          "txSn",
          "bindId",
          "status",
          "deadLine"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.BindCardResp"
      },
      "BindFinancialMobileBody": {
        "type": "object",
        "properties": {
          "financialMobile": {
            "type": "string",
            "description": "财务手机号",
            "x-go-json": "financialMobile",
            "x-go-name": "FinancialMobile",
            "x-go-validate": "@phoneNo"
          }
        },
        "required": [
          "financialMobile"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/account.BindFinancialMobileBody"
      },
      "Bool": {
        "type": "boolean",
        "x-go-named": "go-hummer/hummer/enumeration.Bool"
      },
      "BusinessLicenseBody": {
        "type": "object",
        "properties": {
          "images": {
            "type": "string",
            "description": "图片base64",
            "x-go-json": "images",
            "x-go-name": "Images"
          }
        },
        "required": [
          "images"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/tools.BusinessLicenseBody"
      },
      "BusinessLicenseOcrRsp": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "公司地址，没有识别出来时返回\"FailInRecognition\"",
            "x-go-json": "address",
            "x-go-name": "Address"
          },
          "angle": {
            "type": "number",
            "format": "double",
            "description": "输入图片的角度（顺时针旋转），［0， 90， 180，270］",
            "x-go-json": "angle",
            "x-go-name": "Angle"
          },
          "business": {
            "type": "string",
            "description": "经营范围，没有识别出来时返回\"FailInRecognition\"",
            "x-go-json": "business",
            "x-go-name": "Business"
          },
          "capital": {
            "type": "string",
            "description": "注册资本，没有识别出来时返回\"FailInRecognition\"",
            "x-go-json": "capital",
            "x-go-name": "Capital"
          },
          "configStr": {
            "type": "string",
            "description": "配置字符串信息",
            "x-go-json": "configStr",
            "x-go-name": "ConfigStr"
          },
          "establishDate": {
            "type": "string",
            "description": "公司注册日期(例：证件上为\"2014年04月16日\"，算法返回\"20140416\")",
            "x-go-json": "establishDate",
            "x-go-name": "EstablishDate"
          },
          "name": {
            "type": "string",
            "description": "公司名称，没有识别出来时返回\"FailInRecognition\"",
            "x-go-json": "name",
            "x-go-name": "Name"
          },
          "person": {
            "type": "string",
            "description": "公司法人，没有识别出来时返回\"FailInRecognition\"",
            "x-go-json": "person",
            "x-go-name": "Person"
          },
          "regNum": {
            "type": "string",
            "description": "注册号，没有识别出来时返回\"FailInRecognition\"",
            "x-go-json": "regNum",
            "x-go-name": "RegNum"
          },
          "requestId": {
            "type": "string",
            "x-go-json": "requestId",
            "x-go-name": "RequestId"
          },
          "success": {
            "type": "boolean",
            "description": "识别成功与否 true/false",
            "x-go-json": "success",
            "x-go-name": "Success"
          },
          "type": {
            "type": "string",
            "description": "公司类型，没有识别出来时返回\"FailInRecognition\"",
            "x-go-json": "type",
            "x-go-name": "Type"
          },
          "validPeriod": {
            "type": "string",
            "description": "公司营业期限终止日期(例：证件上为\"2014年04月16日至2034年04月15日\"，算法返回\"20340415\")",
            "x-go-json": "validPeriod",
            "x-go-name": "ValidPeriod"
          }
        },
        "required": [
          "configStr",
          "angle",
          "regNum",
          "name",
          "type",
          "person",
          "establishDate",
          "validPeriod",
          "address",
          "capital",
          "business",
          "success",
          "requestId"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/tools.BusinessLicenseOcrRsp"
      },
      "BussAuthParam": {
        "type": "object",
        "properties": {
          "BussAuthNo": {
            "type": "string",
            "description": "证件号码\n备注：\n个体工商户：填写营业执照号\n企业：填写营业执照号或统一社会信用代码",
            "x-go-json": "BussAuthNo,omitempty",
            "x-go-name": "BussAuthNo",
            "x-go-validate": "@char[0,256]"
          },
          "BussAuthType": {
            "type": "string",
            "description": "证件类型\n12：营业执照/统一社会信用代码\n41：政府机关证件\n42：部队证件\n43：社会团体证件\n44：事业单位证件\n45：民办非企业组织证件\n99：其它企业类型证件\n备注：个体工商户：选择12, 企业：选择12",
            "x-go-json": "BussAuthType,omitempty",
            "x-go-name": "BussAuthType",
            "x-go-validate": "@char[0,2]"
          }
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_mybank_gateway.BussAuthParam"
      },
      "CalFeeBody": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "description": "交易金额",
            "x-go-json": "amount",
            "x-go-name": "Amount",
            "x-go-validate": "@int64[1,]"
          },
          "reduceMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvReducePayMethodType"
              },
              {
                "enum": [
                  "",
                  "SETTLEMENT"
                ],
                "description": "扣费类型, 默认为SETTLEMENT=提现手续费",
                "default": "SETTLEMENT"
              }
            ],
            "x-go-json": "reduceMethod",
            "x-go-name": "ReduceMethod",
            "x-go-validate": "@string{,SETTLEMENT}"
          },
          "uID": {
            "type": "string",
            "description": "主账户uid",
            "x-go-json": "uID",
            "x-go-name": "UID",
            "x-go-validate": "@char[1,32]"
          }
        },
        "required": [
          "uID",
          "amount"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.CalFeeBody"
      },
      "CalFeeRsp": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int64",
            "description": "交易金额",
            "x-go-json": "amount",
            "x-go-name": "Amount"
          },
          "fee": {
            "type": "integer",
            "format": "int64",
            "description": "手续费",
            "x-go-json": "fee",
            "x-go-name": "Fee"
          },
          "feeMode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvHandingFeeMode"
              },
              {
                "description": "手续费扣费模式, PRECHARGE=预充值, TRADING=坐扣, 当为TRADING=坐扣时，实际可提现金额=可用账户余额 balance - 提现手续费 fee"
              }
            ],
            "x-go-json": "feeMode",
            "x-go-name": "FeeMode"
          },
          "reduceMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvReducePayMethodType"
              },
              {
                "description": "扣费类型"
              }
            ],
            "x-go-json": "reduceMethod",
            "x-go-name": "ReduceMethod"
          }
        },
        "required": [
          "amount",
          "fee",
          "reduceMethod",
          "feeMode"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.CalFeeRsp"
      },
      "CalHandingFeeBody": {
        "type": "object",
        "properties": {
          "payChannelType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvChannelType"
              },
              {
                "description": "支付渠道(不走收银台选择支付方式，此项必填)"
              }
            ],
            "x-go-json": "payChannelType",
            "x-go-name": "ChannelType"
          },
          "receiptUID": {
            "type": "string",
            "description": "收款账户ID",
            "x-go-json": "receiptUID",
            "x-go-name": "ReceiptUID",
            "x-go-validate": "@char[1,32]"
          },
          "totalAmount": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "description": "订单金额（单位=分）",
            "x-go-json": "totalAmount",
            "x-go-name": "TotalAmount",
            "x-go-validate": "@int64[1,]"
          }
        },
        "required": [
          "receiptUID",
          "payChannelType",
          "totalAmount"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/tools.CalHandingFeeBody"
      },
      "CalHandingFeeRsp": {
        "type": "object",
        "properties": {
          "handingFee": {
            "type": "integer",
            "format": "int64",
            "description": "手续费金额",
            "x-go-json": "handingFee",
            "x-go-name": "HandingFee"
          },
          "handingFeeRate": {
            "type": "number",
            "format": "double",
            "description": "手续费费率",
            "x-go-json": "handingFeeRate",
            "x-go-name": "HandingFeeRate"
          }
        },
        "required": [
          "handingFeeRate",
          "handingFee"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/tools.CalHandingFeeRsp"
      },
      "CardBinCardType": {
        "type": "string",
        "enum": [
          "CREDIT",
          "DEBIT",
          "PREPAID",
          "QUASI_CREDIT"
        ],
        "x-enum-labels": [
          "贷记卡",
          "借记卡",
          "预付费卡",
          "准贷记卡"
        ],
        "x-enum-vals": [
          2,
          1,
          4,
          3
        ],
        "x-enum-values": [
          "CREDIT",
          "DEBIT",
          "PREPAID",
          "QUASI_CREDIT"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/constants/types.CardBinCardType"
      },
      "CardBinResp": {
        "type": "object",
        "properties": {
          "bankCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvBankType"
              },
              {
                "description": "发卡行机构代码"
              }
            ],
            "x-go-json": "bankCode",
            "x-go-name": "BankCode"
          },
          "bankName": {
            "type": "string",
            "description": "发卡行名称",
            "x-go-json": "bankName",
            "x-go-name": "BankName"
          },
          "cardType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CardBinCardType"
              },
              {
                "description": "卡种"
              }
            ],
            "x-go-json": "cardType",
            "x-go-name": "CardType"
          }
        },
        "required": [
          "bankName",
          "bankCode",
          "cardType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/tools.CardBinResp"
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "行业编码",
            "x-go-json": "id",
            "x-go-name": "ID"
          },
          "name": {
            "type": "string",
            "description": "行业名称",
            "x-go-json": "name",
            "x-go-name": "Name"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/tools.Category"
      },
      "CheckSmsBody": {
        "type": "object",
        "properties": {
          "buCompanyId": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0,
            "description": "业务方公司id, 和支付服务公司id二选一",
            "default": "0",
            "x-go-json": "buCompanyId",
            "x-go-name": "BuCompanyID",
            "x-go-validate": "@uint64[0,]"
          },
          "code": {
            "type": "string",
            "description": "验证码",
            "x-go-json": "code",
            "x-go-name": "Code",
            "x-go-validate": "@char[1,6]"
          },
          "companyId": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0,
            "description": "公司id， 和业务方公司id二选一",
            "default": "0",
            "x-go-json": "companyId",
            "x-go-name": "CompanyID",
            "x-go-validate": "@uint64[0,]"
          },
          "platform": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountPlatformType"
              },
              {
                "description": "账户来源平台,传递业务方公司id时必填"
              }
            ],
            "x-go-json": "platform",
            "x-go-name": "Platform"
          }
        },
        "required": [
          "code"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/auth.CheckSmsBody"
      },
      "CheckSmsRsp": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "token，为JWTtoken",
            "x-go-json": "token",
            "x-go-name": "Token"
          }
        },
        "required": [
          "token"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/auth.CheckSmsRsp"
      },
      "CloseOpenedChannelBody": {
        "type": "object",
        "properties": {
          "channelType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvChannelType"
              },
              {
                "description": "要关闭的支付方式"
              }
            ],
            "x-go-json": "channelType",
            "x-go-name": "ChannelType"
          }
        },
        "required": [
          "channelType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/account.CloseOpenedChannelBody"
      },
      "CloseTransBody": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "关闭原因",
            "x-go-json": "comment",
            "x-go-name": "Comment",
            "x-go-validate": "@char[1,64]"
          }
        },
        "required": [
          "comment"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/trans.CloseTransBody"
      },
      "CloudApplyUploadBody": {
        "type": "object",
        "properties": {
          "applyID": {
            "type": "string",
            "format": "uint64",
            "minimum": 1,
            "description": "申请单id",
            "x-go-json": "applyID,string",
            "x-go-name": "ApplyID",
            "x-go-validate": "@uint64[1,]"
          }
        },
        "required": [
          "applyID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.CloudApplyUploadBody"
      },
      "CloudCompanyInfo": {
        "type": "object",
        "properties": {
          "addfacusId": {
            "type": "string",
            "description": "所属父客户,所在机构资金归集时，该字段不能为空",
            "x-go-json": "addfacusId,omitempty",
            "x-go-name": "AddfacusID",
            "x-go-validate": "@char[0,15]"
          },
          "agreeType": {
            "type": "string",
            "description": "无纸化标识,非电子协议进件可不填,1-电子协议 , 2-纸质协议",
            "default": "1",
            "x-go-json": "agreeType,omitempty",
            "x-go-name": "AgreeType",
            "x-go-validate": "@char[0,1]"
          },
          "allLicenceExpiryDate": {
            "type": "string",
            "description": "统一社会信息证代码有效期, 注:格式: yyyy-MM-dd;证件长期有效时为 2099-12-31",
            "x-go-json": "allLicenceExpiryDate,omitempty",
            "x-go-name": "AllLicenceExpiryDate",
            "x-go-validate": "@char[0,10]"
          },
          "allLicenceIssDate": {
            "type": "string",
            "description": "统一社会信息证代码发证日, 注:格式: yyyyMMdd;",
            "x-go-json": "allLicenceIssDate,omitempty",
            "x-go-name": "AllLicenceIssDate",
            "x-go-validate": "@char[0,10]"
          },
          "bankCityName": {
            "type": "string",
            "description": "开户行地区名称",
            "x-go-json": "bankCityName,omitempty",
            "x-go-name": "BankCityName",
            "x-go-validate": "@char[0,32]"
          },
          "bankCityNo": {
            "type": "string",
            "description": "开户行地区代码,根据中国地区代码表",
            "x-go-json": "bankCityNo,omitempty",
            "x-go-name": "BankCityNo",
            "x-go-validate": "@char[0,32]"
          },
          "bankName": {
            "type": "string",
            "description": "开户行支行名称,如：“中国工商银行股份有限公司北京樱桃园支行”",
            "x-go-json": "bankName,omitempty",
            "x-go-name": "BankName",
            "x-go-validate": "@char[0,256]"
          },
          "basicAcctNo": {
            "type": "string",
            "description": "企业对公账户，支持数字和“-”字符",
            "x-go-json": "basicAcctNo,omitempty",
            "x-go-name": "BasicAcctNo",
            "x-go-validate": "@char[0,64]"
          },
          "busConactPerson": {
            "type": "string",
            "description": "业务联系人姓名, 非个人类商户必填",
            "x-go-json": "busConactPerson,omitempty",
            "x-go-name": "BusConactPerson",
            "x-go-validate": "@char[0,32]"
          },
          "busContactTel": {
            "type": "string",
            "description": "业务联系人电话,非个人类商户必填",
            "x-go-json": "busContactTel,omitempty",
            "x-go-name": "BusContactTel",
            "x-go-validate": "@char[0,11]"
          },
          "busDetail": {
            "type": "string",
            "description": "经营内容",
            "x-go-json": "busDetail,omitempty",
            "x-go-name": "BusDetail",
            "x-go-validate": "@char[0,256]"
          },
          "businessPlace": {
            "type": "string",
            "description": "经营场所\n1、独立门店、连锁店、专卖店\n2、综合卖场\n3、批发市场\n4、其它",
            "default": "1",
            "x-go-json": "businessPlace,omitempty",
            "x-go-name": "BusinessPlace",
            "x-go-validate": "@char[1,2]"
          },
          "city": {
            "type": "string",
            "description": "开户行所在市\n开户行所在省必须同时上送",
            "x-go-json": "city,omitempty",
            "x-go-name": "City",
            "x-go-validate": "@char[0,6]"
          },
          "cityName": {
            "type": "string",
            "description": "城市名称",
            "x-go-json": "cityName,omitempty",
            "x-go-name": "CityName",
            "x-go-validate": "@char[0,100]"
          },
          "clearMode": {
            "type": "string",
            "description": "结算方式, 0-商户自主提现,1-结算到银行卡,2-结算到通联电子账户",
            "default": "1",
            "x-go-json": "clearMode,omitempty",
            "x-go-name": "ClearMode",
            "x-go-validate": "@char[0,2]"
          },
          "contactPerson": {
            "type": "string",
            "description": "商户负责人,财务联系人（收短信用）",
            "x-go-json": "contactPerson,omitempty",
            "x-go-name": "ContactPerson",
            "x-go-validate": "@char[0,32]"
          },
          "contactPhone": {
            "type": "string",
            "description": "商户负责人电话,财务联系人电话",
            "x-go-json": "contactPhone,omitempty",
            "x-go-name": "ContactPhone",
            "x-go-validate": "@char[0,32]"
          },
          "corAddress": {
            "type": "string",
            "description": "企业地址,需包含省市",
            "x-go-json": "corAddress,omitempty",
            "x-go-name": "CorAddress",
            "x-go-validate": "@char[0,256]"
          },
          "corporationName": {
            "type": "string",
            "description": "云商通\n企业名称，如有括号，用中文格式（）",
            "x-go-json": "corporationName,omitempty",
            "x-go-name": "CorporationName",
            "x-go-validate": "@char[0,256]"
          },
          "corporationShort": {
            "type": "string",
            "description": "以下为收银宝需要资料\n商户简称\n客户简称,注:自定义简称",
            "x-go-json": "corporationShort,omitempty",
            "x-go-name": "CorporationShort",
            "x-go-validate": "@char[0,40]"
          },
          "cusUrl": {
            "type": "string",
            "description": "网站url或下载地址或平台名称,开通网关（含B2B、APP）、快捷、云闪付APP或线上场景必填",
            "x-go-json": "cusUrl,omitempty",
            "x-go-name": "CusUrl",
            "x-go-validate": "@char[0,100]"
          },
          "districtCode": {
            "type": "string",
            "description": "所在区 \u003cGET /v0/tools/getVspArea\u003e 前端-获取通联收银宝地区码",
            "x-go-json": "districtCode,omitempty",
            "x-go-name": "DistrictCode",
            "x-go-validate": "@char[0,10]"
          },
          "districtName": {
            "type": "string",
            "description": "所在区名称",
            "x-go-json": "districtName,omitempty",
            "x-go-name": "DistrictName",
            "x-go-validate": "@char[0,32]"
          },
          "expandUser": {
            "type": "string",
            "description": "拓展人",
            "x-go-json": "expandUser,omitempty",
            "x-go-name": "ExpandUser",
            "x-go-validate": "@char[0,50]"
          },
          "holderExpire": {
            "type": "string",
            "description": "控股股东有效期",
            "x-go-json": "holderExpire,omitempty",
            "x-go-name": "HolderExpire",
            "x-go-validate": "@char[0,12]"
          },
          "holderIdNo": {
            "type": "string",
            "description": "控股股东身份证",
            "x-go-json": "holderIdNo,omitempty",
            "x-go-name": "HolderIDNo",
            "x-go-validate": "@char[0,18]"
          },
          "holderName": {
            "type": "string",
            "description": "控股股东姓名,商户性质为企业、个体户时必填",
            "x-go-json": "holderName,omitempty",
            "x-go-name": "HolderName",
            "x-go-validate": "@char[0,64]"
          },
          "industry": {
            "type": "string",
            "description": "通用行业代码, /v0/tools/getIndustry?isVSP=TRUE",
            "x-go-json": "industry,omitempty",
            "x-go-name": "Industry",
            "x-go-validate": "@char[0,60]"
          },
          "industryName": {
            "type": "string",
            "description": "通用行业代码名称",
            "x-go-json": "industryName,omitempty",
            "x-go-name": "IndustryName",
            "x-go-validate": "@char[0,60]"
          },
          "inspect": {
            "type": "string",
            "description": "经营地段\n1：商业区\n2：工业区\n3：住宅区",
            "x-go-json": "inspect,omitempty",
            "x-go-name": "Inspect",
            "x-go-validate": "@char[0,1]"
          },
          "legalAddress": {
            "type": "string",
            "description": "法人身份证地址",
            "x-go-json": "legalAddress,omitempty",
            "x-go-name": "LegalAddress",
            "x-go-validate": "@char[0,255]"
          },
          "legalCredentialNumber": {
            "type": "string",
            "description": "法人证件号码",
            "x-go-json": "legalCredentialNumber,omitempty",
            "x-go-name": "LegalCredentialNumber",
            "x-go-validate": "@char[0,18]"
          },
          "legalCredentialType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvApplyCredentialType"
              },
              {
                "description": "证件类型: 1-身份证, 2-外国护照, 5-港澳居民来往内地通行证, 6-台湾居民来往大陆通行证",
                "default": "1"
              }
            ],
            "x-go-json": "legalCredentialType,omitempty",
            "x-go-name": "LegalCredentialType",
            "x-go-validate": "@char[0,2]"
          },
          "legalNationality": {
            "type": "string",
            "description": "法人国籍",
            "x-go-json": "legalNationality,omitempty",
            "x-go-name": "LegalNationality",
            "x-go-validate": "@char[0,32]"
          },
          "legalOccupation": {
            "type": "string",
            "description": "法人职业\n1：国家机关、党群组织、企业、事业单位人员\n2：专业技术人员\n3：办事人员和有关人员\n4：商业、服务业人员\n5：农、林、牧、渔、水利业生产人员\n6：生产、运输设备操作人员及有关人员\n7：军人\n8：其他",
            "x-go-json": "legalOccupation,omitempty",
            "x-go-name": "LegalOccupation",
            "x-go-validate": "@char[0,2]"
          },
          "legalPersonContactNumber": {
            "type": "string",
            "description": "法人联系电话",
            "x-go-json": "legalPersonContactNumber,omitempty",
            "x-go-name": "LegalPersonContactNumber",
            "x-go-validate": "@char[0,16]"
          },
          "legalPersonExpiryDate": {
            "type": "string",
            "description": "法人证件到期日,注:当证件长期有效 时为 9999-12-31",
            "x-go-json": "legalPersonExpiryDate,omitempty",
            "x-go-name": "LegalPersonExpiryDate",
            "x-go-validate": "@char[0,10]"
          },
          "legalPersonIssDate": {
            "type": "string",
            "description": "法人证件发证日,注:格式: yyyy-MM-dd",
            "x-go-json": "legalPersonIssDate,omitempty",
            "x-go-name": "LegalPersonIssDate",
            "x-go-validate": "@char[0,10]"
          },
          "legalPersonName": {
            "type": "string",
            "description": "法人姓名",
            "x-go-json": "legalPersonName,omitempty",
            "x-go-name": "LegalPersonName",
            "x-go-validate": "@char[0,256]"
          },
          "legalSex": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvSexType"
              },
              {
                "description": "法人性别,1-男 ,2-女"
              }
            ],
            "x-go-json": "legalSex,omitempty",
            "x-go-name": "LegalSex",
            "x-go-validate": "@char[0,20]"
          },
          "mccID": {
            "type": "string",
            "description": "所属行业,详见获取mcc信息接口",
            "x-go-json": "mccID,omitempty",
            "x-go-name": "MccID",
            "x-go-validate": "@char[0,32]"
          },
          "mccName": {
            "type": "string",
            "description": "所属行业名称",
            "x-go-json": "mccName,omitempty",
            "x-go-name": "MccName",
            "x-go-validate": "@char[0,32]"
          },
          "ofFlag": {
            "type": "string",
            "description": "线上线下业务场景,0-线下,1-线上,为空时默认为线下场景",
            "x-go-json": "ofFlag,omitempty",
            "x-go-name": "OfFlag",
            "x-go-validate": "@char[0,1]"
          },
          "operateLimit": {
            "type": "string",
            "description": "经营区域\n1：城区\n2: 郊区\n3：边远地区",
            "x-go-json": "operateLimit,omitempty",
            "x-go-name": "OperateLimit",
            "x-go-validate": "@char[0,1]"
          },
          "organCode": {
            "type": "string",
            "description": "组织机构代码证号,三证合一否时需要填写",
            "x-go-json": "organCode,omitempty",
            "x-go-name": "OrganCode",
            "x-go-validate": "@char[0,64]"
          },
          "organExpire": {
            "type": "string",
            "description": "组织机构代码证有效期,三证合一否时需要填写 yyyy-mm-dd或长期",
            "x-go-json": "organExpire,omitempty",
            "x-go-name": "OrganExpire",
            "x-go-validate": "@char[0,12]"
          },
          "parentBankCode": {
            "type": "string",
            "description": "开户银行编码 /v0/tools/getBankList?isVSP=TRUE",
            "x-go-json": "parentBankCode,omitempty",
            "x-go-name": "ParentBankCode",
            "x-go-validate": "@char[0,32]"
          },
          "parentBankName": {
            "type": "string",
            "description": "开户银行名称，详细，需严格按照银行列表上送，部分银行支持多种上送方式，选其一上送即可。注：测试环境仅支持工农中建交。",
            "x-go-json": "parentBankName,omitempty",
            "x-go-name": "ParentBankName",
            "x-go-validate": "@char[0,32]"
          },
          "prodList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Prod"
            },
            "description": "支付产品信息列表",
            "default": "[]",
            "x-go-json": "prodList,omitempty",
            "x-go-name": "ProdList"
          },
          "province": {
            "type": "string",
            "description": "开户行所在省\n开户行所在市必须同时上送\n根据中国省市表的“省份”内容填写",
            "x-go-json": "province,omitempty",
            "x-go-name": "Province",
            "x-go-validate": "@char[0,2]"
          },
          "provinceName": {
            "type": "string",
            "description": "省份名称,开户行所在市必须同时上送",
            "x-go-json": "provinceName,omitempty",
            "x-go-name": "ProvinceName",
            "x-go-validate": "@char[0,100]"
          },
          "pubAcctInfo": {
            "type": "string",
            "description": "对公账户信息,格式如下：对公账户号#支付行号#对公账户名称,商户性质为企业，结算账户对私时必填，作为商户信息扩展字段，与结算信息无关",
            "x-go-json": "pubAcctInfo,omitempty",
            "x-go-name": "PubAcctInfo",
            "x-go-validate": "@char[0,255]"
          },
          "registerFund": {
            "type": "string",
            "description": "注册资本\n1: 注册资本\u003c10万元\n2: 10万元\u003c注册资本\u003c20万元\n3: 20万元\u003c注册资本\u003c50万元\n4: 50万元\u003c注册资本\u003c100万元\n5: 注册资本\u003e100万元",
            "x-go-json": "registerFund,omitempty",
            "x-go-name": "RegisterFund",
            "x-go-validate": "@char[0,1]"
          },
          "servicePhone": {
            "type": "string",
            "description": "客服电话",
            "x-go-json": "servicePhone,omitempty",
            "x-go-name": "ServicePhone",
            "x-go-validate": "@char[0,32]"
          },
          "settIdNo": {
            "type": "string",
            "description": "结算人身份证号,结算账户对私时，结算人身份证号不能为空",
            "x-go-json": "settIdNo,omitempty",
            "x-go-name": "SettIDNo",
            "x-go-validate": "@char[0,18]"
          },
          "settreMark": {
            "type": "string",
            "description": "结算摘要前缀,仅当非自主提现时获取",
            "x-go-json": "settreMark,omitempty",
            "x-go-name": "SettreMark",
            "x-go-validate": "@char[0,60]"
          },
          "staffTotal": {
            "type": "string",
            "description": "员工人数\n1: 员工数量\u003c10\n2: 10\u003c员工数量\u003c20\n3: 20\u003c员工数量\u003c50\n4: 50\u003c员工数量\u003c100\n5: 员工数量\u003e100",
            "x-go-json": "staffTotal,omitempty",
            "x-go-name": "StaffTotal",
            "x-go-validate": "@char[0,1]"
          },
          "subbranchList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subbranch"
            },
            "description": "门店信息",
            "default": "[]",
            "x-go-json": "subbranchList,omitempty",
            "x-go-name": "SubbranchList"
          },
          "thrcertFlag": {
            "type": "string",
            "description": "是否三证合一 ,1-是 0-否,默认:1",
            "default": "1",
            "x-go-json": "thrcertFlag,omitempty",
            "x-go-name": "ThrcertFlag",
            "x-go-validate": "@char[0,1]"
          },
          "tlBankNo": {
            "type": "string",
            "description": "通联电子账户号",
            "x-go-json": "tlBankNo,omitempty",
            "x-go-name": "TlBankNo",
            "x-go-validate": "@char[0,30]"
          },
          "unifiedSocialCreditCode": {
            "type": "string",
            "description": "统一社会信息证代码",
            "x-go-json": "unifiedSocialCreditCode,omitempty",
            "x-go-name": "UnifiedSocialCreditCode",
            "x-go-validate": "@char[0,18]"
          },
          "unionBank": {
            "type": "string",
            "description": "支付行号，12位数字",
            "x-go-json": "unionBank,omitempty",
            "x-go-name": "UnionBank",
            "x-go-validate": "@char[0,32]"
          },
          "unsdRemark": {
            "type": "string",
            "description": "渠道备注",
            "x-go-json": "unsdRemark,omitempty",
            "x-go-name": "UnsdRemark",
            "x-go-validate": "@char[0,100]"
          },
          "webName": {
            "type": "string",
            "description": "网站名称/应用名称",
            "x-go-json": "webName,omitempty",
            "x-go-name": "WebName",
            "x-go-validate": "@char[0,50]"
          }
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.CloudCompanyInfo"
      },
      "CloudFundsInfo": {
        "type": "object",
        "properties": {
          "acquirerList": {
            "type": "string",
            "description": "商户进驻的收单机构编码",
            "x-go-json": "acquirerList,omitempty",
            "x-go-name": "AcquirerList"
          },
          "serviceList": {
            "type": "string",
            "description": "开通的云资金服务列表, 02：商户入驻时开立收单机构云资金子户",
            "x-go-json": "serviceList,omitempty",
            "x-go-name": "ServiceList"
          }
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_mybank_gateway.CloudFundsInfo"
      },
      "CloudIndividualInfo": {
        "type": "object",
        "properties": {
          "credentialNumber": {
            "type": "string",
            "description": "证件号码",
            "x-go-json": "credentialNumber,omitempty",
            "x-go-name": "CredentialNumber",
            "x-go-validate": "@char[0,18]"
          },
          "credentialType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvApplyCredentialType"
              },
              {
                "description": "证件类型: 1-身份证",
                "default": "1"
              }
            ],
            "x-go-json": "credentialType,omitempty",
            "x-go-name": "CredentialType"
          },
          "expiryDate": {
            "type": "string",
            "description": "证件到期日, 注:当证件长期有效时为 9999-12-31",
            "x-go-json": "expiryDate,omitempty",
            "x-go-name": "ExpiryDate",
            "x-go-validate": "@char[0,10]"
          },
          "indAddress": {
            "type": "string",
            "description": "联系地址,注:常驻信息包括 (国家、省、市、 县、详细地址 )",
            "x-go-json": "indAddress,omitempty",
            "x-go-name": "IndAddress",
            "x-go-validate": "@char[0,256]"
          },
          "issDate": {
            "type": "string",
            "description": "证件发证日, 注:格式: yyyy-MM-dd",
            "x-go-json": "issDate,omitempty",
            "x-go-name": "IssDate",
            "x-go-validate": "@char[0,10]"
          },
          "userName": {
            "type": "string",
            "description": "用户姓名",
            "x-go-json": "userName,omitempty",
            "x-go-name": "UserName",
            "x-go-validate": "@char[0,128]"
          }
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.CloudIndividualInfo"
      },
      "Company": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "$ref": "#/components/schemas/OperateTime"
          },
          {
            "$ref": "#/components/schemas/SoftDelete"
          },
          {
            "type": "object",
            "properties": {
              "buCompanyId": {
                "type": "string",
                "description": "业务方公司id",
                "x-go-json": "buCompanyId",
                "x-go-name": "BUCompanyID"
              },
              "companyID": {
                "type": "string",
                "format": "uint64",
                "description": "公司id",
                "x-go-json": "companyID,string",
                "x-go-name": "CompanyID"
              },
              "financeMobile": {
                "type": "string",
                "description": "财务手机号",
                "x-go-json": "financeMobile",
                "x-go-name": "FinanceMobile"
              },
              "platform": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvAccountPlatformType"
                  },
                  {
                    "description": "平台"
                  }
                ],
                "x-go-json": "platform",
                "x-go-name": "Platform"
              }
            },
            "required": [
              "buCompanyId",
              "companyID",
              "financeMobile",
              "platform"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.Company"
      },
      "ComplianceReviewBody": {
        "type": "object",
        "properties": {
          "cfState": {
            "type": "string",
            "description": "审核状态, 02-审核完毕 04-待二次补充 05-补充完毕 09-七天未处理系统冻结",
            "x-go-json": "cfState",
            "x-go-name": "CfState",
            "x-go-validate": "@char[1,12]"
          },
          "handleState": {
            "type": "string",
            "description": "审核结果,0-正常 2-降低风控 3-延迟冻结 4-冻结",
            "x-go-json": "handleState",
            "x-go-name": "HandleState",
            "x-go-validate": "@char[1,12]"
          },
          "operatorID": {
            "type": "string",
            "description": "操作人id",
            "x-go-json": "operatorID",
            "x-go-name": "OperatorId",
            "x-go-validate": "@char[1,32]"
          },
          "operatorName": {
            "type": "string",
            "description": "操作人名称",
            "x-go-json": "operatorName",
            "x-go-name": "OperatorName",
            "x-go-validate": "@char[1,32]"
          },
          "vspMerchantId": {
            "type": "string",
            "description": "收银宝商户id",
            "x-go-json": "vspMerchantId",
            "x-go-name": "VspMerchantID",
            "x-go-validate": "@char[1,32]"
          }
        },
        "required": [
          "vspMerchantId",
          "handleState",
          "cfState",
          "operatorID",
          "operatorName"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.ComplianceReviewBody"
      },
      "ConfirmBindPhoneBody": {
        "type": "object",
        "properties": {
          "applyID": {
            "type": "string",
            "format": "uint64",
            "minimum": 0,
            "description": "申请单id, 为企业时使用，个人时，自动创建",
            "default": "0",
            "x-go-json": "applyID,string",
            "x-go-name": "ApplyID",
            "x-go-validate": "@uint64[0,]"
          },
          "phone": {
            "type": "string",
            "description": "手机号",
            "x-go-json": "phone",
            "x-go-name": "Phone",
            "x-go-validate": "@char[1,32]"
          },
          "verificationCode": {
            "type": "string",
            "description": "验证码",
            "x-go-json": "verificationCode",
            "x-go-name": "VerificationCode",
            "x-go-validate": "@char[1,10]"
          }
        },
        "required": [
          "phone",
          "verificationCode"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.ConfirmBindPhoneBody"
      },
      "ConfirmBindPhoneRsp": {
        "type": "object",
        "properties": {
          "applyID": {
            "type": "string",
            "format": "uint64",
            "description": "申请单号",
            "x-go-json": "applyID,string",
            "x-go-name": "ApplyID"
          }
        },
        "required": [
          "applyID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.ConfirmBindPhoneRsp"
      },
      "ConfirmBody": {
        "type": "object",
        "properties": {
          "isReduceFee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bool"
              },
              {
                "description": "转账是否扣除手续费, 默认为TRUE",
                "default": "TRUE"
              }
            ],
            "x-go-json": "isReduceFee",
            "x-go-name": "IsReduceFee"
          },
          "reduceTiming": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReduceTimingType"
              },
              {
                "description": "扣费时机，SETTLEMENT=结算时按结算扣费规则扣除，TRANSFER=转账时按转账扣费规则扣除 默认为结算时扣除",
                "default": "SETTLEMENT"
              }
            ],
            "x-go-json": "reduceTiming",
            "x-go-name": "ReduceTiming"
          },
          "sourceIp": {
            "type": "string",
            "description": "客户IP",
            "x-go-json": "sourceIp",
            "x-go-name": "SourceIP",
            "x-go-validate": "@ipv4"
          },
          "transID": {
            "type": "integer",
            "format": "uint64",
            "minimum": 1,
            "description": "转账交易单号",
            "x-go-json": "transID",
            "x-go-name": "TransID",
            "x-go-validate": "@uint64[1,]"
          },
          "verificationCode": {
            "type": "string",
            "description": "短信验证码",
            "x-go-json": "verificationCode",
            "x-go-name": "VerificationCode",
            "x-go-validate": "@char[1,10]"
          },
          "whoPayFee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WhoPayFeeType"
              },
              {
                "description": "转账手续费付费方, 默认为RECEIPT从ReceiptUID扣除",
                "default": "RECEIPT"
              }
            ],
            "x-go-json": "whoPayFee",
            "x-go-name": "WhoPayFee"
          },
          "withSettlement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bool"
              },
              {
                "description": "是否同时提现，默认为 TRUE",
                "default": "TRUE"
              }
            ],
            "x-go-json": "withSettlement",
            "x-go-name": "WithSettlement"
          }
        },
        "required": [
          "transID",
          "sourceIp",
          "verificationCode"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/transfer.ConfirmBody"
      },
      "ConfirmRemoveBindSmsBody": {
        "type": "object",
        "properties": {
          "buCompanyId": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0,
            "description": "业务方公司id, 和支付服务公司id二选一",
            "default": "0",
            "x-go-json": "buCompanyId",
            "x-go-name": "BuCompanyID",
            "x-go-validate": "@uint64[0,]"
          },
          "code": {
            "type": "string",
            "description": "验证码",
            "x-go-json": "code",
            "x-go-name": "Code",
            "x-go-validate": "@char[1,6]"
          },
          "companyId": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0,
            "description": "公司id，和业务方公司id二选一",
            "default": "0",
            "x-go-json": "companyId",
            "x-go-name": "CompanyID",
            "x-go-validate": "@uint64[0,]"
          },
          "platform": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountPlatformType"
              },
              {
                "description": "账户来源平台,传递业务方公司id时必填"
              }
            ],
            "x-go-json": "platform",
            "x-go-name": "Platform"
          }
        },
        "required": [
          "code"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/company.ConfirmRemoveBindSmsBody"
      },
      "Corporation": {
        "type": "object",
        "properties": {
          "allLicenceExpiryDate": {
            "type": "string",
            "description": "统一社会信息证代码有效期,注:格式: yyyyMMdd;证件长期有效时为 20991231",
            "x-go-json": "allLicenceExpiryDate",
            "x-go-name": "AllLicenceExpiryDate",
            "x-go-validate": "@char[0,8]"
          },
          "approvalNo": {
            "type": "string",
            "description": "开户许可证核准号, 注:众邦银行存管必填",
            "x-go-json": "approvalNo",
            "x-go-name": "ApprovalNo",
            "x-go-validate": "@char[0,14]"
          },
          "authCapital": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "description": "注册资本，单位分",
            "x-go-json": "authCapital",
            "x-go-name": "AuthCapital",
            "x-go-validate": "@int64[0,]"
          },
          "basicAcctNo": {
            "type": "string",
            "description": "企业基本户",
            "x-go-json": "basicAcctNo",
            "x-go-name": "BasicAcctNo",
            "x-go-validate": "@char[0,32]"
          },
          "businessScope": {
            "type": "string",
            "description": "经营范围",
            "x-go-json": "businessScope",
            "x-go-name": "BusinessScope",
            "x-go-validate": "@char[0,256]"
          },
          "categoryType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayCategoryType"
              },
              {
                "description": "分类类别,数据来源 /service-payment-gateway/v0/tools/getCategory"
              }
            ],
            "x-go-json": "categoryType",
            "x-go-name": "CategoryType"
          },
          "city": {
            "type": "string",
            "description": "城市, 数据来源 /service-payment-gateway/v0/tools/getCity",
            "x-go-json": "city",
            "x-go-name": "City"
          },
          "corAddress": {
            "type": "string",
            "description": "企业地址",
            "x-go-json": "corAddress",
            "x-go-name": "CorAddress",
            "x-go-validate": "@char[0,256]"
          },
          "corEmail": {
            "type": "string",
            "description": "企业邮箱,注:企业联系邮箱",
            "x-go-json": "corEmail",
            "x-go-name": "CorEmail",
            "x-go-validate": "@char[0,64]"
          },
          "corporationName": {
            "type": "string",
            "description": "企业名称,注:工商登记企业名称",
            "x-go-json": "corporationName",
            "x-go-name": "CorporationName",
            "x-go-validate": "@char[0,256]"
          },
          "corporationShort": {
            "type": "string",
            "description": "客户简称,注:自定义简称",
            "x-go-json": "corporationShort",
            "x-go-name": "CorporationShort",
            "x-go-validate": "@char[0,256]"
          },
          "industry": {
            "type": "string",
            "description": "通用行业代码,数据来源 /service-payment-gateway/v0/tools/getIndustry 获取通用行业代码",
            "x-go-json": "industry",
            "x-go-name": "Industry"
          },
          "industryBelongType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayIndustryBelongType"
              },
              {
                "description": "行业代码, 数据来源 /service-payment-gateway/v0/tools/getIndustryBelongType 获取行业信息"
              }
            ],
            "x-go-json": "industryBelongType",
            "x-go-name": "IndustryBelongType"
          },
          "legalCredentialNumber": {
            "type": "string",
            "description": "法人证件号码",
            "x-go-json": "legalCredentialNumber",
            "x-go-name": "LegalCredentialNumber",
            "x-go-validate": "@char[0,18]"
          },
          "legalCredentialType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayCredentialType"
              },
              {
                "description": "证件类型: 0-身份证"
              }
            ],
            "x-go-json": "legalCredentialType",
            "x-go-name": "LegalCredentialType"
          },
          "legalPersonContactNumber": {
            "type": "string",
            "description": "法人联系电话,注:法人联系手机电话",
            "x-go-json": "legalPersonContactNumber",
            "x-go-name": "LegalPersonContactNumber",
            "x-go-validate": "@char[0,16]"
          },
          "legalPersonEmail": {
            "type": "string",
            "description": "法人邮箱",
            "x-go-json": "legalPersonEmail",
            "x-go-name": "LegalPersonEmail",
            "x-go-validate": "@char[0,64]"
          },
          "legalPersonExpiryDate": {
            "type": "string",
            "description": "法人证件到期日,注:当证件长期有效时为 99991231",
            "x-go-json": "legalPersonExpiryDate",
            "x-go-name": "LegalPersonExpiryDate",
            "x-go-validate": "@char[0,8]"
          },
          "legalPersonIssDate": {
            "type": "string",
            "description": "法人证件发证日,注:格式: yyyyMMdd",
            "x-go-json": "legalPersonIssDate",
            "x-go-name": "LegalPersonIssDate",
            "x-go-validate": "@char[0,8]"
          },
          "legalPersonName": {
            "type": "string",
            "description": "法人姓名",
            "x-go-json": "legalPersonName",
            "x-go-name": "LegalPersonName",
            "x-go-validate": "@char[0,256]"
          },
          "province": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayProvince"
              },
              {
                "description": "省份, 数据来源 /service-payment-gateway/v0/tools/getProvince"
              }
            ],
            "x-go-json": "province",
            "x-go-name": "Province"
          },
          "scale": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayScaleType"
              },
              {
                "description": "企业规模: 01=大型 02=中型 03=小型 04=微型 98=其他"
              }
            ],
            "x-go-json": "scale",
            "x-go-name": "Scale"
          },
          "unifiedSocialCreditCode": {
            "type": "string",
            "description": "统一社会信息证代码",
            "x-go-json": "unifiedSocialCreditCode",
            "x-go-name": "UnifiedSocialCreditCode",
            "x-go-validate": "@char[0,18]"
          }
        },
        "description": "企业开户",
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.Corporation"
      },
      "CorporationInfo": {
        "type": "object",
        "properties": {
          "allLicenceExpiryDate": {
            "type": "string",
            "description": "统一社会信息证代码有效期, 注:格式: yyyyMMdd;证件长期有效时为 20991231",
            "x-go-json": "allLicenceExpiryDate,omitempty",
            "x-go-name": "AllLicenceExpiryDate",
            "x-go-validate": "@char[0,8]"
          },
          "allLicenceIssDate": {
            "type": "string",
            "description": "统一社会信息证代码发证日, 注:格式: yyyyMMdd;",
            "x-go-json": "allLicenceIssDate,omitempty",
            "x-go-name": "AllLicenceIssDate",
            "x-go-validate": "@char[0,8]"
          },
          "approvalNo": {
            "type": "string",
            "description": "开户许可证核准号",
            "x-go-json": "approvalNo,omitempty",
            "x-go-name": "ApprovalNo",
            "x-go-validate": "@char[0,14]"
          },
          "authCapital": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0,
            "description": "注册资本，单位分",
            "x-go-json": "authCapital,omitempty",
            "x-go-name": "AuthCapital",
            "x-go-validate": "@uint64[0,]"
          },
          "basicAcctNo": {
            "type": "string",
            "description": "企业银行账户",
            "x-go-json": "basicAcctNo,omitempty",
            "x-go-name": "BasicAcctNo",
            "x-go-validate": "@char[0,32]"
          },
          "beneficiary": {
            "type": "string",
            "description": "实际收益人",
            "x-go-json": "beneficiary,omitempty",
            "x-go-name": "Beneficiary",
            "x-go-validate": "@char[0,128]"
          },
          "businessScope": {
            "type": "string",
            "description": "经营范围",
            "x-go-json": "businessScope,omitempty",
            "x-go-name": "BusinessScope",
            "x-go-validate": "@char[0,256]"
          },
          "categoryType": {
            "type": "string",
            "description": "分类类别",
            "x-go-json": "categoryType,omitempty",
            "x-go-name": "CategoryType",
            "x-go-validate": "@char[0,3]"
          },
          "categoryTypeName": {
            "type": "string",
            "description": "分类类别名称",
            "x-go-json": "categoryTypeName,omitempty",
            "x-go-name": "CategoryTypeName",
            "x-go-validate": "@char[0,128]"
          },
          "city": {
            "type": "string",
            "description": "城市ID",
            "x-go-json": "city,omitempty",
            "x-go-name": "City",
            "x-go-validate": "@char[0,6]"
          },
          "cityName": {
            "type": "string",
            "description": "城市名称",
            "x-go-json": "cityName,omitempty",
            "x-go-name": "CityName",
            "x-go-validate": "@char[0,100]"
          },
          "controller": {
            "type": "string",
            "description": "实际控制人",
            "x-go-json": "controller,omitempty",
            "x-go-name": "Controller",
            "x-go-validate": "@char[0,128]"
          },
          "corAddress": {
            "type": "string",
            "description": "企业地址",
            "x-go-json": "corAddress,omitempty",
            "x-go-name": "CorAddress",
            "x-go-validate": "@char[0,256]"
          },
          "corEmail": {
            "type": "string",
            "description": "企业邮箱",
            "x-go-json": "corEmail,omitempty",
            "x-go-name": "CorEmail",
            "x-go-validate": "@char[0,64]"
          },
          "corType": {
            "type": "string",
            "description": "企业类型: 01=企业单位 02=民办非企业单位",
            "x-go-json": "corType,omitempty",
            "x-go-name": "CorType",
            "x-go-validate": "@char[0,2]"
          },
          "corporationName": {
            "type": "string",
            "description": "企业名称,注:工商登记企业名称",
            "x-go-json": "corporationName,omitempty",
            "x-go-name": "CorporationName",
            "x-go-validate": "@char[0,256]"
          },
          "corporationShort": {
            "type": "string",
            "description": "客户简称,注:自定义简称",
            "x-go-json": "corporationShort,omitempty",
            "x-go-name": "CorporationShort",
            "x-go-validate": "@char[0,256]"
          },
          "district": {
            "type": "string",
            "description": "区/县ID",
            "x-go-json": "district,omitempty",
            "x-go-name": "District",
            "x-go-validate": "@char[0,6]"
          },
          "districtName": {
            "type": "string",
            "description": "区/县名称,注:详见附录(市县 区行政单位.pdf)，根据区县对应附录填写;新商户接入必填，存量商户可空",
            "x-go-json": "districtName,omitempty",
            "x-go-name": "DistrictName",
            "x-go-validate": "@char[0,100]"
          },
          "industry": {
            "type": "string",
            "description": "通用行业代码",
            "x-go-json": "industry,omitempty",
            "x-go-name": "Industry",
            "x-go-validate": "@char[0,5]"
          },
          "industryBelongType": {
            "type": "string",
            "description": "行业代码",
            "x-go-json": "industryBelongType,omitempty",
            "x-go-name": "IndustryBelongType",
            "x-go-validate": "@char[0,3]"
          },
          "industryBelongTypeName": {
            "type": "string",
            "description": "行业代码名称",
            "x-go-json": "industryBelongTypeName,omitempty",
            "x-go-name": "IndustryBelongTypeName",
            "x-go-validate": "@char[0,128]"
          },
          "industryName": {
            "type": "string",
            "description": "通用行业代码名称",
            "x-go-json": "industryName,omitempty",
            "x-go-name": "IndustryName",
            "x-go-validate": "@char[0,128]"
          },
          "legalCredentialNumber": {
            "type": "string",
            "description": "法人证件号码",
            "x-go-json": "legalCredentialNumber,omitempty",
            "x-go-name": "LegalCredentialNumber",
            "x-go-validate": "@char[0,18]"
          },
          "legalCredentialType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvApplyCredentialType"
              },
              {
                "description": "证件类型: 1-身份证, 2-外国护照, 5-港澳居民来往内地通行证, 6-台湾居民来往大陆通行证",
                "default": "1"
              }
            ],
            "x-go-json": "legalCredentialType,omitempty",
            "x-go-name": "LegalCredentialType",
            "x-go-validate": "@char[0,2]"
          },
          "legalPersonContactNumber": {
            "type": "string",
            "description": "法人联系电话",
            "x-go-json": "legalPersonContactNumber,omitempty",
            "x-go-name": "LegalPersonContactNumber",
            "x-go-validate": "@char[0,16]"
          },
          "legalPersonEmail": {
            "type": "string",
            "description": "法人邮箱",
            "x-go-json": "legalPersonEmail,omitempty",
            "x-go-name": "LegalPersonEmail",
            "x-go-validate": "@char[0,64]"
          },
          "legalPersonExpiryDate": {
            "type": "string",
            "description": "法人证件到期日,注:当证件长期有效 时为 99991231",
            "x-go-json": "legalPersonExpiryDate,omitempty",
            "x-go-name": "LegalPersonExpiryDate",
            "x-go-validate": "@char[0,8]"
          },
          "legalPersonIssDate": {
            "type": "string",
            "description": "法人证件发证日,注:格式: yyyyMMdd",
            "x-go-json": "legalPersonIssDate,omitempty",
            "x-go-name": "LegalPersonIssDate",
            "x-go-validate": "@char[0,8]"
          },
          "legalPersonName": {
            "type": "string",
            "description": "法人姓名",
            "x-go-json": "legalPersonName,omitempty",
            "x-go-name": "LegalPersonName",
            "x-go-validate": "@char[0,256]"
          },
          "province": {
            "type": "string",
            "description": "省份ID",
            "x-go-json": "province,omitempty",
            "x-go-name": "Province",
            "x-go-validate": "@char[0,2]"
          },
          "provinceName": {
            "type": "string",
            "description": "省份名称",
            "x-go-json": "provinceName,omitempty",
            "x-go-name": "ProvinceName",
            "x-go-validate": "@char[0,100]"
          },
          "scale": {
            "type": "string",
            "description": "企业规模: 01=大型 02=中型 03=小型 04=微型 98=其他",
            "x-go-json": "scale,omitempty",
            "x-go-name": "Scale",
            "x-go-validate": "@char[0,2]"
          },
          "shareholder": {
            "type": "string",
            "description": "控股股东",
            "x-go-json": "shareholder,omitempty",
            "x-go-name": "Shareholder",
            "x-go-validate": "@char[0,128]"
          },
          "unifiedSocialCreditCode": {
            "type": "string",
            "description": "统一社会信息证代码",
            "x-go-json": "unifiedSocialCreditCode,omitempty",
            "x-go-name": "UnifiedSocialCreditCode",
            "x-go-validate": "@char[0,18]"
          }
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.CorporationInfo"
      },
      "CpcnApply": {
        "type": "object",
        "properties": {
          "corporationInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CorporationInfo"
              },
              {
                "description": "企业开户选择域"
              }
            ],
            "x-go-json": "corporationInfo,omitempty",
            "x-go-name": "CorporationInfo",
            "x-pointer": 1
          },
          "individualInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IndividualInfo"
              },
              {
                "description": "个人开户选择域"
              }
            ],
            "x-go-json": "individualInfo,omitempty",
            "x-go-name": "IndividualInfo",
            "x-pointer": 1
          },
          "merchantInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MerchantInfo"
            },
            "description": "进件信息",
            "x-go-json": "merchantInfo,omitempty",
            "x-go-name": "MerchantInfo"
          },
          "retailerInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RetailerInfo"
              },
              {
                "description": "个体户开户域"
              }
            ],
            "x-go-json": "retailerInfo,omitempty",
            "x-go-name": "RetailerInfo",
            "x-pointer": 1
          }
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.CpcnApply"
      },
      "CpcnApplyDetail": {
        "type": "object",
        "properties": {
          "corporationInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplyCorporation"
              },
              {
                "description": "企业开户信息"
              }
            ],
            "x-go-json": "corporationInfo",
            "x-go-name": "CorporationInfo"
          },
          "individualInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplyIndividual"
              },
              {
                "description": "个人开户信息"
              }
            ],
            "x-go-json": "individualInfo",
            "x-go-name": "IndividualInfo"
          },
          "merchantInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplyMerchantInfoList"
              },
              {
                "description": "进件信息"
              }
            ],
            "x-go-json": "merchantInfo",
            "x-go-name": "MerchantInfo"
          },
          "retailerInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplyRetailer"
              },
              {
                "description": "个体户开户信息"
              }
            ],
            "x-go-json": "retailerInfo",
            "x-go-name": "RetailerInfo"
          }
        },
        "required": [
          "corporationInfo",
          "individualInfo",
          "retailerInfo",
          "merchantInfo"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.CpcnApplyDetail"
      },
      "CreateAccountBody": {
        "type": "object",
        "properties": {
          "accountMode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountMode"
              },
              {
                "description": "账户使用的模式"
              }
            ],
            "x-go-json": "accountMode",
            "x-go-name": "AccountMode"
          },
          "accountName": {
            "type": "string",
            "description": "账户名称",
            "x-go-json": "accountName",
            "x-go-name": "AccountName",
            "x-go-validate": "@char[1,200]"
          },
          "accountRealName": {
            "type": "string",
            "description": "交易账户名称",
            "x-go-json": "accountRealName",
            "x-go-name": "AccountRealName",
            "x-go-validate": "@char[0,200]"
          },
          "accountStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountStatus"
              },
              {
                "enum": [
                  "",
                  "ENABLE",
                  "DISABLE"
                ],
                "description": "账户状态",
                "default": "ENABLE"
              }
            ],
            "x-go-json": "accountStatus",
            "x-go-name": "AccountStatus",
            "x-go-validate": "@string{,ENABLE,DISABLE}"
          },
          "accountType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountType"
              },
              {
                "enum": [
                  "",
                  "RECIPIENT",
                  "PAYMENT"
                ],
                "description": "账户类型"
              }
            ],
            "x-go-json": "accountType",
            "x-go-name": "AccountType",
            "x-go-validate": "@string{,RECIPIENT,PAYMENT}"
          },
          "bodyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountBodyType"
              },
              {
                "enum": [
                  "",
                  "PERSONAL",
                  "COMPANY"
                ],
                "description": "账号主体类型"
              }
            ],
            "x-go-json": "bodyType",
            "x-go-name": "BodyType",
            "x-go-validate": "@string{,PERSONAL,COMPANY}"
          },
          "buCompanyId": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0,
            "description": "业务方公司id",
            "x-go-json": "buCompanyId",
            "x-go-name": "BuCompanyId",
            "x-go-validate": "@uint64[0,]"
          },
          "handingFeeMode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvHandingFeeMode"
              },
              {
                "enum": [
                  "",
                  "PRECHARGE",
                  "TRADING"
                ],
                "description": "手续费扣费模式, 默认为从预存手续费扣除",
                "default": "PRECHARGE"
              }
            ],
            "x-go-json": "handingFeeMode",
            "x-go-name": "HandingFeeMode",
            "x-go-validate": "@string{,PRECHARGE,TRADING}"
          },
          "isMain": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bool"
              },
              {
                "enum": [
                  "",
                  "TRUE",
                  "FALSE"
                ],
                "description": "是否主账户, 默认为：TRUE",
                "default": "TRUE"
              }
            ],
            "x-go-json": "isMain",
            "x-go-name": "IsMain",
            "x-go-validate": "@string{,TRUE,FALSE}"
          },
          "parentUID": {
            "type": "string",
            "maxLength": 32,
            "minLength": 0,
            "description": "父级账户UID，开通子账户时必填",
            "x-go-json": "parentUID",
            "x-go-name": "ParentUID",
            "x-go-validate": "@string[0,32]"
          },
          "paymentPassword": {
            "type": "string",
            "description": "支付密码，用于余额支付场景",
            "x-go-json": "paymentPassword",
            "x-go-name": "PaymentPassword",
            "x-go-validate": "@char[0,200]"
          },
          "platform": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountPlatformType"
              },
              {
                "description": "账户来源, 默认为：直店",
                "default": "ZIDIAN"
              }
            ],
            "x-go-json": "platform",
            "x-go-name": "Platform"
          },
          "splitMode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvSplitMode"
              },
              {
                "description": "分账模式，交易时分账/交易后分账, 默认为交易时分账",
                "default": "TRADING"
              }
            ],
            "x-go-json": "splitMode",
            "x-go-name": "SplitMode"
          },
          "uID": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "description": "绑定用户中心UID",
            "x-go-json": "uID",
            "x-go-name": "UID",
            "x-go-validate": "@string[1,32]"
          },
          "userType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountUserType"
              },
              {
                "description": "用户类型",
                "default": "SELF"
              }
            ],
            "x-go-json": "userType",
            "x-go-name": "UserType"
          }
        },
        "required": [
          "uID",
          "accountName",
          "bodyType",
          "accountType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/account.CreateAccountBody"
      },
      "CreateAccountResp": {
        "type": "object",
        "properties": {
          "accountID": {
            "type": "string",
            "format": "uint64",
            "description": "账户ID",
            "x-go-json": "accountID,string",
            "x-go-name": "AccountID"
          },
          "accountMode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountMode"
              },
              {
                "description": "账户使用的模式"
              }
            ],
            "x-go-json": "accountMode",
            "x-go-name": "AccountMode"
          },
          "accountName": {
            "type": "string",
            "description": "账户名称",
            "x-go-json": "accountName",
            "x-go-name": "AccountName"
          },
          "accountRealName": {
            "type": "string",
            "description": "账户交易时名称",
            "x-go-json": "accountRealName",
            "x-go-name": "AccountRealName"
          },
          "accountStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountStatus"
              },
              {
                "description": "账户状态"
              }
            ],
            "x-go-json": "accountStatus",
            "x-go-name": "AccountStatus"
          },
          "accountType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountType"
              },
              {
                "description": "账户类型1=收款户，2=付款户"
              }
            ],
            "x-go-json": "accountType",
            "x-go-name": "AccountType"
          },
          "balance": {
            "type": "integer",
            "format": "int64",
            "description": "账户总余额",
            "x-go-json": "balance",
            "x-go-name": "Balance"
          },
          "bodyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountBodyType"
              },
              {
                "description": "账号主体类型"
              }
            ],
            "x-go-json": "bodyType",
            "x-go-name": "BodyType"
          },
          "buCompanyId": {
            "type": "integer",
            "format": "uint64",
            "description": "业务方公司id",
            "x-go-json": "buCompanyId",
            "x-go-name": "BuCompanyID"
          },
          "companyID": {
            "type": "integer",
            "format": "uint64",
            "description": "公司ID",
            "x-go-json": "companyID",
            "x-go-name": "CompanyID"
          },
          "isMain": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bool"
              },
              {
                "description": "是否为主账户"
              }
            ],
            "x-go-json": "isMain",
            "x-go-name": "IsMain"
          },
          "parentAccountID": {
            "type": "integer",
            "format": "uint64",
            "description": "父级账户AccountID",
            "x-go-json": "parentAccountID",
            "x-go-name": "ParentAccountID"
          },
          "platform": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountPlatformType"
              },
              {
                "description": "账户来源"
              }
            ],
            "x-go-json": "platform",
            "x-go-name": "Platform"
          },
          "splitMode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvSplitMode"
              },
              {
                "description": "分账模式，交易时分账/交易后分账"
              }
            ],
            "x-go-json": "splitMode",
            "x-go-name": "SplitMode"
          },
          "thirdAccountID": {
            "type": "string",
            "description": "关联的第三方账户ID",
            "x-go-json": "thirdAccountID",
            "x-go-name": "ThirdAccountID"
          },
          "uID": {
            "type": "string",
            "description": "关联用户中心的ID",
            "x-go-json": "uID",
            "x-go-name": "UID"
          },
          "userType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountUserType"
              },
              {
                "description": "用户类型"
              }
            ],
            "x-go-json": "userType",
            "x-go-name": "UserType"
          }
        },
        "required": [
          "accountID",
          "accountMode",
          "accountName",
          "accountRealName",
          "accountStatus",
          "accountType",
          "balance",
          "bodyType",
          "buCompanyId",
          "companyID",
          "isMain",
          "parentAccountID",
          "platform",
          "splitMode",
          "thirdAccountID",
          "uID",
          "userType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.CreateAccountResp"
      },
      "CreateAndSubmitSettlementBody": {
        "type": "object",
        "properties": {
          "mainUID": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "description": "主账户UID",
            "x-go-json": "mainUID",
            "x-go-name": "MainUID",
            "x-go-validate": "@string[1,32]"
          },
          "subReceiptUID": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "description": "需要结算的分账账户UID`",
            "x-go-json": "subReceiptUID",
            "x-go-name": "SubReceiptUID",
            "x-go-validate": "@string[1,32]"
          },
          "totalAmount": {
            "type": "integer",
            "format": "int64",
            "description": "结算金额, 只支持账户模式按金额结算",
            "default": "0",
            "x-go-json": "totalAmount",
            "x-go-name": "TotalAmount"
          },
          "withNotify": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bool"
              },
              {
                "enum": [
                  "",
                  "FALSE",
                  "TRUE"
                ],
                "description": "结算指令提交后，是否短信通知结算状态",
                "default": "FALSE"
              }
            ],
            "x-go-json": "withNotify",
            "x-go-name": "WithNotify",
            "x-go-validate": "@string{,FALSE,TRUE}"
          }
        },
        "required": [
          "mainUID",
          "subReceiptUID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/setllement.CreateAndSubmitSettlementBody"
      },
      "CreateAndSubmitSettlementByUIDBody": {
        "type": "object",
        "properties": {
          "mainUID": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "description": "主账户UID",
            "x-go-json": "mainUID",
            "x-go-name": "MainUID",
            "x-go-validate": "@string[1,32]"
          },
          "payFeeAccountID": {
            "type": "integer",
            "format": "uint64",
            "description": "谁付手续费",
            "x-go-json": "payFeeAccountID",
            "x-go-name": "PayFeeAccountID"
          },
          "sourceIp": {
            "type": "string",
            "description": "客户IP",
            "x-go-json": "sourceIp",
            "x-go-name": "SourceIP",
            "x-go-validate": "@char[0,20]"
          },
          "subReceiptUID": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "description": "需要结算的分账账户UID`",
            "x-go-json": "subReceiptUID",
            "x-go-name": "SubReceiptUID",
            "x-go-validate": "@string[1,32]"
          },
          "totalAmount": {
            "type": "integer",
            "format": "int64",
            "description": "结算金额, 只支持账户模式按金额结算",
            "default": "0",
            "x-go-json": "totalAmount",
            "x-go-name": "TotalAmount"
          },
          "tradeNo": {
            "type": "string",
            "maxLength": 32,
            "minLength": 0,
            "description": "关联单据号，转账并提现，为交易单号",
            "x-go-json": "tradeNo",
            "x-go-name": "TradeNo",
            "x-go-validate": "@string[0,32]"
          },
          "transType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvTransType"
              },
              {
                "enum": [
                  "",
                  "UNIONER_SETTLEMENT_OUT",
                  "SUPPLIER_SETTLEMENT_OUT",
                  "FEE_SETTLEMENT_OUT"
                ],
                "description": "交易类型，用于区分联营，采购结算，生成账户交易流水"
              }
            ],
            "x-go-json": "transType",
            "x-go-name": "TransType",
            "x-go-validate": "@string{,UNIONER_SETTLEMENT_OUT,SUPPLIER_SETTLEMENT_OUT,FEE_SETTLEMENT_OUT}"
          },
          "withNotify": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bool"
              },
              {
                "enum": [
                  "",
                  "FALSE",
                  "TRUE"
                ],
                "description": "结算指令提交后，是否短信通知结算状态",
                "default": "FALSE"
              }
            ],
            "x-go-json": "withNotify",
            "x-go-name": "WithNotify",
            "x-go-validate": "@string{,FALSE,TRUE}"
          },
          "withNotifyPhone": {
            "type": "string",
            "description": "结算指令提交后，短信通知结算结算账户，withNotify=TRUE时有效",
            "x-go-json": "withNotifyPhone",
            "x-go-name": "WithNotifyPhone",
            "x-go-validate": "@char[0,20]"
          },
          "withReduceFee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bool"
              },
              {
                "description": "是否扣除手续费",
                "default": "TRUE"
              }
            ],
            "x-go-json": "withReduceFee",
            "x-go-name": "WithReduceFee"
          }
        },
        "required": [
          "mainUID",
          "subReceiptUID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/setllement.CreateAndSubmitSettlementByUIDBody"
      },
      "CreateAndSubmitSettlementByUIDHxbBody": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "备注",
            "x-go-json": "comment",
            "x-go-name": "Comment",
            "x-go-validate": "@char[0,100]"
          },
          "extend": {
            "type": "string",
            "description": "扩展信息",
            "x-go-json": "extend",
            "x-go-name": "Extend",
            "x-go-validate": "@char[0,200]"
          },
          "handingFeeUID": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "description": "手续费账户",
            "x-go-json": "handingFeeUID",
            "x-go-name": "HandingFeeUID",
            "x-go-validate": "@string[1,32]"
          },
          "mainUID": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "description": "主账户UID",
            "x-go-json": "mainUID",
            "x-go-name": "MainUID",
            "x-go-validate": "@string[1,32]"
          },
          "mainUidBindId": {
            "type": "integer",
            "format": "int64",
            "description": "绑卡流水",
            "default": "0",
            "x-go-json": "mainUidBindId",
            "x-go-name": "MainUidBindId"
          },
          "totalAmount": {
            "type": "integer",
            "format": "int64",
            "description": "结算金额",
            "default": "0",
            "x-go-json": "totalAmount",
            "x-go-name": "TotalAmount"
          }
        },
        "required": [
          "mainUID",
          "handingFeeUID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/setllement.CreateAndSubmitSettlementByUIDHxbBody"
      },
      "CreateApplyBody": {
        "type": "object",
        "properties": {
          "allInPayApply": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AllinPayApply"
              },
              {
                "description": "通联开户"
              }
            ],
            "x-go-json": "allInPayApply",
            "x-go-name": "AllInPayApply",
            "x-pointer": 1
          },
          "applyID": {
            "type": "string",
            "format": "uint64",
            "description": "申请单ID，不为空则修改申请单",
            "default": "0",
            "x-go-json": "applyID,string",
            "x-go-name": "ApplyID"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Attachment"
            },
            "description": "申请单附件",
            "x-go-json": "attachments",
            "x-go-name": "Attachments"
          },
          "companyName": {
            "type": "string",
            "description": "公司名称",
            "x-go-json": "companyName",
            "x-go-name": "CompanyName",
            "x-go-validate": "@char[1,256]"
          },
          "contact": {
            "type": "string",
            "description": "联系人",
            "x-go-json": "contact",
            "x-go-name": "Contact",
            "x-go-validate": "@char[0,64]"
          },
          "contactPhone": {
            "type": "string",
            "description": "联系人手机号",
            "x-go-json": "contactPhone",
            "x-go-name": "ContactPhone",
            "x-go-validate": "@char[0,32]"
          },
          "cpcnApply": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CpcnApply"
              },
              {
                "description": "中金开户"
              }
            ],
            "x-go-json": "cpcnApply",
            "x-go-name": "CpcnApply",
            "x-pointer": 1
          },
          "isSetRealName": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bool"
              },
              {
                "description": "是否需要实名认证, 仅通联渠道适用",
                "default": "FALSE"
              }
            ],
            "x-go-json": "isSetRealName",
            "x-go-name": "IsSetRealName"
          },
          "merchantUserType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvMerchantUserType"
              },
              {
                "description": "商户开户用户类型"
              }
            ],
            "x-go-json": "merchantUserType",
            "x-go-name": "MerchantUserType"
          },
          "myBankApply": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MyBankApply"
              },
              {
                "description": "网商云资金开户"
              }
            ],
            "x-go-json": "myBankApply",
            "x-go-name": "MyBankApply",
            "x-pointer": 1
          },
          "operatorID": {
            "type": "string",
            "description": "操作人ID",
            "x-go-json": "operatorID",
            "x-go-name": "OperatorID",
            "x-go-validate": "@char[1,64]"
          },
          "operatorName": {
            "type": "string",
            "description": "操作人名称",
            "x-go-json": "operatorName",
            "x-go-name": "OperatorName",
            "x-go-validate": "@char[1,200]"
          },
          "vspPayApply": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VspPayApply"
              },
              {
                "description": "收银宝开户"
              }
            ],
            "x-go-json": "vspPayApply",
            "x-go-name": "VspPayApply",
            "x-pointer": 1
          }
        },
        "required": [
          "companyName",
          "merchantUserType",
          "operatorID",
          "operatorName"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.CreateApplyBody"
      },
      "CreateApplyLogBody": {
        "type": "object",
        "properties": {
          "applyID": {
            "type": "string",
            "format": "uint64",
            "minimum": 1,
            "description": "申请单id",
            "x-go-json": "applyID,string",
            "x-go-name": "ApplyID",
            "x-go-validate": "@uint64[1,]"
          },
          "comment": {
            "type": "string",
            "description": "备注",
            "x-go-json": "comment",
            "x-go-name": "Comment",
            "x-go-validate": "@char[1,1000]"
          },
          "isDisplay": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bool"
              },
              {
                "enum": [
                  "",
                  "TRUE",
                  "FALSE"
                ],
                "description": "修改日志前端是否可见",
                "default": "FALSE"
              }
            ],
            "x-go-json": "isDisplay",
            "x-go-name": "IsDisplay",
            "x-go-validate": "@string{,TRUE,FALSE}"
          },
          "operatorID": {
            "type": "string",
            "description": "操作人ID",
            "x-go-json": "operatorID",
            "x-go-name": "OperatorID",
            "x-go-validate": "@char[1,64]"
          },
          "operatorName": {
            "type": "string",
            "description": "操作人名称",
            "x-go-json": "operatorName",
            "x-go-name": "OperatorName",
            "x-go-validate": "@char[1,200]"
          }
        },
        "required": [
          "applyID",
          "comment",
          "operatorID",
          "operatorName"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.CreateApplyLogBody"
      },
      "CreateApplyRsp": {
        "type": "object",
        "properties": {
          "accountID": {
            "type": "string",
            "format": "uint64",
            "description": "子账户id",
            "x-go-json": "accountID,string",
            "x-go-name": "AccountID"
          },
          "applyID": {
            "type": "string",
            "format": "uint64",
            "description": "申请单号",
            "x-go-json": "applyID,string",
            "x-go-name": "ApplyID"
          },
          "applyStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvApplyStatus"
              },
              {
                "description": "申请单状态"
              }
            ],
            "x-go-json": "applyStatus",
            "x-go-name": "ApplyStatus"
          },
          "mainAccountID": {
            "type": "string",
            "format": "uint64",
            "description": "主账户ID",
            "x-go-json": "mainAccountID,string",
            "x-go-name": "MainAccountID"
          },
          "mainUID": {
            "type": "string",
            "description": "主账户uid",
            "x-go-json": "mainUID",
            "x-go-name": "MainUID"
          },
          "providerSN": {
            "type": "string",
            "description": "服务商申请流水号",
            "x-go-json": "providerSN",
            "x-go-name": "ProviderSN"
          },
          "uID": {
            "type": "string",
            "description": "子账户uid",
            "x-go-json": "uID",
            "x-go-name": "UID"
          }
        },
        "required": [
          "applyID",
          "providerSN",
          "applyStatus",
          "mainAccountID",
          "mainUID",
          "uID",
          "accountID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.CreateApplyRsp"
      },
      "CreateBankTransferTransBody": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "description": "交易金额, 单位分",
            "x-go-json": "amount",
            "x-go-name": "Amount",
            "x-go-validate": "@int64[1,]"
          },
          "payeeBankAccountName": {
            "type": "string",
            "description": "收款人账户名称",
            "x-go-json": "payeeBankAccountName",
            "x-go-name": "PayeeBankAccountName",
            "x-go-validate": "@char[1,256]"
          },
          "payeeBankAccountNumber": {
            "type": "string",
            "description": "收款人账户号码",
            "x-go-json": "payeeBankAccountNumber",
            "x-go-name": "PayeeBankAccountNumber",
            "x-go-validate": "@char[1,192]"
          },
          "payerBankAccountName": {
            "type": "string",
            "description": "付款人账户名称",
            "x-go-json": "payerBankAccountName",
            "x-go-name": "PayerBankAccountName",
            "x-go-validate": "@char[1,256]"
          },
          "payerBankAccountNumber": {
            "type": "string",
            "description": "付款人账户号码",
            "x-go-json": "payerBankAccountNumber",
            "x-go-name": "PayerBankAccountNumber",
            "x-go-validate": "@char[1,192]"
          },
          "paymentUid": {
            "type": "string",
            "description": "付款人uid",
            "x-go-json": "paymentUid",
            "x-go-name": "PaymentUid"
          },
          "receiptUid": {
            "type": "string",
            "description": "收款人uid",
            "x-go-json": "receiptUid",
            "x-go-name": "ReceiptUid"
          },
          "remark": {
            "type": "string",
            "description": "备注",
            "x-go-json": "remark",
            "x-go-name": "Remark",
            "x-go-validate": "@char[0,256]"
          },
          "sourceTxSN": {
            "type": "string",
            "description": "原业务交易流水号",
            "x-go-json": "sourceTxSN",
            "x-go-name": "SourceTxSN",
            "x-go-validate": "@char[1,32]"
          },
          "userID": {
            "type": "integer",
            "format": "uint64",
            "description": "用户ID",
            "x-go-json": "userID",
            "x-go-name": "UserID"
          }
        },
        "required": [
          "sourceTxSN",
          "amount",
          "userID",
          "payerBankAccountNumber",
          "payerBankAccountName",
          "payeeBankAccountNumber",
          "payeeBankAccountName"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/trans.CreateBankTransferTransBody"
      },
      "CreateBillBody": {
        "type": "object",
        "properties": {
          "mainUID": {
            "type": "string",
            "description": "主账户UID",
            "x-go-json": "mainUID",
            "x-go-name": "MainUID",
            "x-go-validate": "@char[1,32]"
          },
          "tradeNo": {
            "type": "string",
            "description": "外部交易号",
            "x-go-json": "tradeNo",
            "x-go-name": "TradeNo",
            "x-go-validate": "@char[1,32]"
          },
          "uID": {
            "type": "string",
            "description": "子账户",
            "x-go-json": "uID",
            "x-go-name": "UID",
            "x-go-validate": "@char[1,32]"
          }
        },
        "required": [
          "mainUID",
          "uID",
          "tradeNo"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cloud_funds.CreateBillBody"
      },
      "CreateChannelForAccountBody": {
        "type": "object",
        "properties": {
          "channelType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvChannelType"
              },
              {
                "description": "开通渠道"
              }
            ],
            "x-go-json": "channelType",
            "x-go-name": "ChannelType"
          },
          "config": {
            "type": "string",
            "minLength": 0,
            "description": "渠道支付参数设置JSON, 微信小程序支付配置：{\\\"app_id\\\":\\\"\\\",\\\"mch_id\\\":\\\"\\\",\\\"app_key\\\":\\\"\\\",\\\"sign_type\\\":\\\"MD5\\\",\\\"no_credit\\\":\\\"TRUE\\\",\\\"cert_path\\\":\\\"49306440967393280_cert.pem\\\",\\\"key_path\\\":\\\"49306440967393280_key.pem\\\"}",
            "x-go-json": "config",
            "x-go-name": "Config",
            "x-go-validate": "@string[0,]"
          }
        },
        "required": [
          "channelType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/account.CreateChannelForAccountBody"
      },
      "CreateCompanyBody": {
        "type": "object",
        "properties": {
          "buCompanyId": {
            "type": "integer",
            "format": "uint64",
            "minimum": 1,
            "description": "业务方公司id",
            "x-go-json": "buCompanyId",
            "x-go-name": "BuCompanyID",
            "x-go-validate": "@uint64[1,]"
          },
          "platform": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountPlatformType"
              },
              {
                "description": "来源平台"
              }
            ],
            "x-go-json": "platform",
            "x-go-name": "Platform"
          }
        },
        "required": [
          "buCompanyId",
          "platform"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/company.CreateCompanyBody"
      },
      "CreateCpcnAccountBody": {
        "type": "object",
        "properties": {
          "accountLevel": {
            "type": "integer",
            "format": "int64",
            "maximum": 10,
            "minimum": 0,
            "description": "账户层级: 1=1 级 2=2 级 3=3 级 4=4 级 5=5 级 6=6 级 7=7 级 8=8 级 9=9 级 10=10 级,中金账户必填，层级 分为 1-10 级",
            "default": "1",
            "x-go-json": "accountLevel",
            "x-go-name": "AccountLevel",
            "x-go-validate": "@int[0,10]"
          },
          "bankAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BankAccount"
              },
              {
                "description": "绑定银行账户域, 注:业务类型:20=开户并绑卡时必填"
              }
            ],
            "x-go-json": "bankAccount",
            "x-go-name": "BankAccount"
          },
          "businessType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayOpenBusinessType"
              },
              {
                "description": "业务类型: 10=开户 20=开户并绑卡, 注:默认为10=开户",
                "default": "10"
              }
            ],
            "x-go-json": "businessType",
            "x-go-name": "BusinessType"
          },
          "corporation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Corporation"
              },
              {
                "description": "企业开户"
              }
            ],
            "x-go-json": "corporation",
            "x-go-name": "Corporation"
          },
          "imageCollectionTxSN": {
            "type": "string",
            "description": "影印件采集交易流水号, 中金账户必填、电子账户模式众邦银行企业用户必填，4600接口中的TxSN;",
            "x-go-json": "imageCollectionTxSN",
            "x-go-name": "ImageCollectionTxSN",
            "x-go-validate": "@char[0,32]"
          },
          "individual": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Individual"
              },
              {
                "description": "个人开户"
              }
            ],
            "x-go-json": "individual",
            "x-go-name": "Individual"
          },
          "retailer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Retailer"
              },
              {
                "description": "个体户开户"
              }
            ],
            "x-go-json": "retailer",
            "x-go-name": "Retailer"
          },
          "uID": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "description": "绑定用户中心UID",
            "x-go-json": "uID",
            "x-go-name": "UID",
            "x-go-validate": "@string[1,32]"
          },
          "userType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayAccountUserType"
              },
              {
                "description": "用户类型: 11=个人用户 12=企业用户 13=个体工商 用户"
              }
            ],
            "x-go-json": "userType",
            "x-go-name": "UserType"
          }
        },
        "required": [
          "uID",
          "userType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.CreateCpcnAccountBody"
      },
      "CreateCpcnAccountResp": {
        "type": "object",
        "properties": {
          "dBank": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DBank"
              },
              {
                "description": "银行存管,银行存管下开户状态Status=30不为空,其他为空"
              }
            ],
            "x-go-json": "dBank",
            "x-go-name": "DBank"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayCreateAccountUserStatus"
              },
              {
                "description": "状态: 15=待审核 20=处理中 30=成功 40=失败"
              }
            ],
            "x-go-json": "status",
            "x-go-name": "Status"
          },
          "txSn": {
            "type": "string",
            "description": "开户流水号",
            "x-go-json": "txSn",
            "x-go-name": "TxSN"
          },
          "userId": {
            "type": "string",
            "description": "用户ID",
            "x-go-json": "userId",
            "x-go-name": "UserID"
          }
        },
        "required": [
          "txSn",
          "userId",
          "status",
          "dBank"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.CreateCpcnAccountResp"
      },
      "CreateCpcnAccountUploadBody": {
        "type": "object",
        "properties": {
          "imageInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageInfo"
            },
            "description": "影印件明细，出现次数大于等于1次，单次最多上送4条明细",
            "x-go-json": "imageInfo",
            "x-go-name": "ImageInfo",
            "x-go-validate": "@array[1,4]"
          },
          "userType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayAccountUserType"
              },
              {
                "description": "用户类型"
              }
            ],
            "x-go-json": "userType",
            "x-go-name": "UserType"
          }
        },
        "required": [
          "userType",
          "imageInfo"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.CreateCpcnAccountUploadBody"
      },
      "CreateCpcnAccountUploadPhotoResp": {
        "type": "object",
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayUploadStatus"
              },
              {
                "description": "交易状态: 20=采集成功 30=采集失败"
              }
            ],
            "x-go-json": "status",
            "x-go-name": "Status"
          },
          "txSN": {
            "type": "string",
            "description": "交易流水号，同请求",
            "x-go-json": "txSN",
            "x-go-name": "TxSN"
          }
        },
        "required": [
          "txSN",
          "status"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.CreateCpcnAccountUploadPhotoResp"
      },
      "CreateElectronicBody": {
        "type": "object",
        "properties": {
          "eType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvElectronicType"
              },
              {
                "description": "电子回单类型",
                "default": "TRADE"
              }
            ],
            "x-go-json": "eType",
            "x-go-name": "EType"
          },
          "tradeNo": {
            "type": "string",
            "format": "uint64",
            "minimum": 1,
            "description": "单号",
            "x-go-json": "tradeNo,string",
            "x-go-name": "TradeNo",
            "x-go-validate": "@uint64[1,]"
          }
        },
        "required": [
          "tradeNo"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/electronic.CreateElectronicBody"
      },
      "CreateGatheringAndSubmitBody": {
        "type": "object",
        "properties": {
          "bindID": {
            "type": "string",
            "format": "uint64",
            "minimum": 1,
            "description": "收款人绑卡流水",
            "x-go-json": "bindID,string",
            "x-go-name": "BindID",
            "x-go-validate": "@uint64[1,]"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvTransCurrencyType"
              },
              {
                "description": "币种 CNY=人民币",
                "default": "CNY"
              }
            ],
            "x-go-json": "currency",
            "x-go-name": "Currency"
          },
          "extend": {
            "type": "string",
            "description": "扩展信息",
            "x-go-json": "extend",
            "x-go-name": "Extend",
            "x-go-validate": "@char[0,1000]"
          },
          "notifyUrl": {
            "type": "string",
            "description": "异步通知回调地址",
            "x-go-json": "notifyUrl",
            "x-go-name": "NotifyUrl",
            "x-go-validate": "@char[1,128]"
          },
          "paymentAccountName": {
            "type": "string",
            "description": "支付账户名称(结算户代付可为空)",
            "x-go-json": "paymentAccountName",
            "x-go-name": "PaymentAccountName",
            "x-go-validate": "@char[0,256]"
          },
          "paymentAccountNumber": {
            "type": "string",
            "description": "支付账户号码(结算户代付为结算标识)",
            "x-go-json": "paymentAccountNumber",
            "x-go-name": "PaymentAccountNumber",
            "x-go-validate": "@char[0,32]"
          },
          "paymentFlag": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvGatheringPaymentFlag"
              },
              {
                "description": "代付表识 NORMAL=普通代付 BALANCE=支付账户余额代付 GATHERING=代付通账户代付 SETTLEMENT=结算户代付"
              }
            ],
            "x-go-json": "paymentFlag",
            "x-go-name": "PaymentFlag"
          },
          "paymentUID": {
            "type": "string",
            "description": "付款账号ID",
            "x-go-json": "paymentUID",
            "x-go-name": "PaymentUID",
            "x-go-validate": "@char[1,32]"
          },
          "platform": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountPlatformType"
              },
              {
                "enum": [
                  "",
                  "PC",
                  "MOBILE",
                  "ZIDIAN"
                ],
                "description": "代付单来源平台"
              }
            ],
            "x-go-json": "platform",
            "x-go-name": "Platform",
            "x-go-validate": "@string{,PC,MOBILE,ZIDIAN}"
          },
          "receiptUID": {
            "type": "string",
            "description": "收款人UID",
            "x-go-json": "receiptUID",
            "x-go-name": "ReceiptUID",
            "x-go-validate": "@char[1,32]"
          },
          "remark": {
            "type": "string",
            "description": "备注",
            "x-go-json": "remark",
            "x-go-name": "Remark",
            "x-go-validate": "@char[0,100]"
          },
          "sourceIp": {
            "type": "string",
            "description": "ip",
            "x-go-json": "sourceIp",
            "x-go-name": "SourceIP",
            "x-go-validate": "@char[0,30]"
          },
          "totalAmount": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "description": "代付总金额（单位分）",
            "x-go-json": "totalAmount",
            "x-go-name": "TotalAmount",
            "x-go-validate": "@int64[1,]"
          },
          "tradeNo": {
            "type": "string",
            "description": "外部代付单号,最多支持32位字符",
            "x-go-json": "tradeNo",
            "x-go-name": "TradeNo",
            "x-go-validate": "@char[1,32]"
          },
          "userAgent": {
            "type": "string",
            "description": "UserAgent",
            "x-go-json": "userAgent",
            "x-go-name": "UserAgent",
            "x-go-validate": "@char[0,150]"
          }
        },
        "required": [
          "paymentFlag",
          "totalAmount",
          "paymentUID",
          "notifyUrl",
          "tradeNo",
          "receiptUID",
          "bindID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/gathering.CreateGatheringAndSubmitBody"
      },
      "CreateProductBody": {
        "type": "object",
        "properties": {
          "allowOpen": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AllowOpen"
              },
              {
                "description": "允许开户的商户类型"
              }
            ],
            "x-go-json": "allowOpen",
            "x-go-name": "AllowOpen"
          },
          "authPath": {
            "type": "string",
            "description": "支付路径配置, 多个用英文逗号分割",
            "x-go-json": "authPath",
            "x-go-name": "AuthPath",
            "x-go-validate": "@httpUrl"
          },
          "feeRule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FeeRules"
              },
              {
                "description": "扣费规则"
              }
            ],
            "x-go-json": "feeRule",
            "x-go-name": "FeeRule",
            "x-pointer": 1
          },
          "operatorID": {
            "type": "string",
            "description": "操作人ID",
            "x-go-json": "operatorID",
            "x-go-name": "OperatorID",
            "x-go-validate": "@char[1,64]"
          },
          "operatorName": {
            "type": "string",
            "description": "操作人名称",
            "x-go-json": "operatorName",
            "x-go-name": "OperatorName",
            "x-go-validate": "@char[1,200]"
          },
          "platform": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvPlatform"
              },
              {
                "description": "平台"
              }
            ],
            "x-go-json": "platform",
            "x-go-name": "Platform"
          },
          "productCode": {
            "type": "string",
            "description": "产品代码,默认添加Platform为前缀",
            "x-go-json": "productCode",
            "x-go-name": "ProductCode",
            "x-go-validate": "@char[1,64]"
          },
          "productId": {
            "type": "integer",
            "format": "uint64",
            "description": "产品id, 不为0则修改",
            "default": "0",
            "x-go-json": "productId",
            "x-go-name": "ProductID"
          },
          "productName": {
            "type": "string",
            "description": "产品名称",
            "x-go-json": "productName",
            "x-go-name": "ProductName",
            "x-go-validate": "@char[1,100]"
          },
          "provider": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvProviderType"
              },
              {
                "description": "服务提供商"
              }
            ],
            "x-go-json": "provider",
            "x-go-name": "Provider"
          },
          "workFlow": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WorkFlow"
              },
              {
                "description": "开户流程, 定义开户步骤，顺序"
              }
            ],
            "x-go-json": "workFlow",
            "x-go-name": "WorkFlow"
          }
        },
        "required": [
          "productName",
          "productCode",
          "platform",
          "provider",
          "workFlow",
          "allowOpen",
          "feeRule",
          "operatorID",
          "operatorName"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/product.CreateProductBody"
      },
      "CreateReduceRuleBody": {
        "type": "object",
        "properties": {
          "config": {
            "type": "string",
            "minLength": 0,
            "description": "网商来账识别阶梯扣费规则,仅支持大于等于, [{\"reduceValue\":手续费扣费金额单位分,\"stepAmount\":交易金额扣费阶梯额}], 中金来账识别阶梯扣费规则, [{\"reduceValue\":手续费扣费金额单位分,\"minAmount\":交易金额阶梯小值, 最小为1, \"maxAmount\":交易金额阶梯大值, 不设限时为0}]",
            "x-go-json": "config",
            "x-go-name": "Config",
            "x-go-validate": "@string[0,]"
          },
          "max": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "description": "最大扣费金额，若设置此值，当计算金额大于此金额时使用此金额",
            "default": "0",
            "x-go-json": "max",
            "x-go-name": "Max",
            "x-go-validate": "@int64[0,]"
          },
          "min": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "description": "最小扣款金额, 若设置此值，当计算得出金额小于此值时使用此金额扣费",
            "default": "0",
            "x-go-json": "min",
            "x-go-name": "Min",
            "x-go-validate": "@int64[0,]"
          },
          "operator": {
            "type": "string",
            "description": "创建人姓名",
            "x-go-json": "operator",
            "x-go-name": "Operator",
            "x-go-validate": "@char[1,32]"
          },
          "operatorID": {
            "type": "string",
            "description": "创建人ID",
            "x-go-json": "operatorID",
            "x-go-name": "OperatorID",
            "x-go-validate": "@char[1,32]"
          },
          "payMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvReducePayMethodType"
              },
              {
                "description": "支付方式"
              }
            ],
            "x-go-json": "payMethod",
            "x-go-name": "PayMethod"
          },
          "reduceMode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvReduceMode"
              },
              {
                "description": "扣费模式"
              }
            ],
            "x-go-json": "reduceMode",
            "x-go-name": "ReduceMode"
          },
          "reduceValue": {
            "type": "number",
            "format": "double",
            "description": "扣费值",
            "default": "0",
            "x-go-json": "reduceValue",
            "x-go-name": "ReduceValue",
            "x-go-validate": "@float64\u003c8,4\u003e"
          }
        },
        "required": [
          "payMethod",
          "reduceMode",
          "operator",
          "operatorID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/handing_fee.CreateReduceRuleBody"
      },
      "CreateSettlementBody": {
        "type": "object",
        "properties": {
          "bindID": {
            "type": "string",
            "format": "uint64",
            "minimum": 1,
            "description": "收款账户已经绑定的银行卡，绑定序号",
            "x-go-json": "bindID,string",
            "x-go-name": "BindID",
            "x-go-validate": "@uint64[1,]"
          },
          "comment": {
            "type": "string",
            "description": "简介",
            "x-go-json": "comment",
            "x-go-name": "Comment",
            "x-go-validate": "@char[1,100]"
          },
          "notifyUrl": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "description": "异步通知回调地址",
            "x-go-json": "notifyUrl",
            "x-go-name": "NotifyUrl",
            "x-go-validate": "@string[1,100]"
          },
          "payChannelType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvChannelType"
              },
              {
                "description": "结算支付渠道, CPCN_PAY=中金无手续费结算，CPCN_OFFICIAL_ACCOUNT=中金有手续费结算，MYBANK_VOSTRO=网商银行结算提现，CPCN_ACCOUNT_OFFICIAL_ACCOUNT=中金账户模式有手续费结算"
              }
            ],
            "x-go-json": "payChannelType",
            "x-go-name": "ChannelType",
            "x-go-validate": "@strint{,CPCN_PAY,CPCN_OFFICIAL_ACCOUNT,MYBANK_VOSTRO,CPCN_ACCOUNT_OFFICIAL_ACCOUNT}"
          },
          "paymentUID": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "description": "付款账号ID",
            "x-go-json": "paymentUID",
            "x-go-name": "PaymentUID",
            "x-go-validate": "@string[1,32]"
          },
          "receiptUID": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "description": "收款账户ID",
            "x-go-json": "receiptUID",
            "x-go-name": "ReceiptUID",
            "x-go-validate": "@string[1,32]"
          },
          "totalAmount": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "description": "结算金额（单位=分）",
            "x-go-json": "totalAmount",
            "x-go-name": "TotalAmount",
            "x-go-validate": "@int64[1,]"
          },
          "tradeNo": {
            "type": "string",
            "description": "业务方结算单号",
            "x-go-json": "tradeNo",
            "x-go-name": "TradeNo",
            "x-go-validate": "@char[0,32]"
          }
        },
        "required": [
          "paymentUID",
          "receiptUID",
          "comment",
          "totalAmount",
          "payChannelType",
          "notifyUrl",
          "bindID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/setllement.CreateSettlementBody"
      },
      "CreateSettlementByUIDBody": {
        "type": "object",
        "properties": {
          "isStoreSettlement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bool"
              },
              {
                "enum": [
                  "",
                  "TRUE",
                  "FALSE"
                ],
                "description": "是否为店铺结算， 当店铺结算时，结算手续费从总部扣除，需从店铺的余额扣掉手续费在结算，同时扣除总部的手续费，需要退还到总部余额",
                "default": "FALSE"
              }
            ],
            "x-go-json": "isStoreSettlement",
            "x-go-name": "IsStoreSettlement",
            "x-go-validate": "@string{,TRUE,FALSE}"
          },
          "mainUID": {
            "type": "string",
            "description": "主账户UID",
            "x-go-json": "mainUID",
            "x-go-name": "MainUID",
            "x-go-validate": "@char[1,32]"
          },
          "notifyUrl": {
            "type": "string",
            "description": "异步通知地址",
            "x-go-json": "notifyUrl",
            "x-go-name": "NotifyUrl",
            "x-go-validate": "@char[0,100]"
          },
          "returnNotifyUrl": {
            "type": "string",
            "description": "当店铺结算时必填，退还总部余额的回调地址",
            "x-go-json": "returnNotifyUrl",
            "x-go-name": "ReturnNotifyUrl",
            "x-go-validate": "@char[0,100]"
          },
          "subReceiptUID": {
            "type": "string",
            "description": "需要结算的分账账户UID`",
            "x-go-json": "subReceiptUID",
            "x-go-name": "SubReceiptUID",
            "x-go-validate": "@char[1,32]"
          },
          "tradeNo": {
            "type": "string",
            "description": "业务方结算单号",
            "x-go-json": "tradeNo",
            "x-go-name": "TradeNo",
            "x-go-validate": "@char[0,32]"
          }
        },
        "required": [
          "mainUID",
          "subReceiptUID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/setllement.CreateSettlementByUIDBody"
      },
      "CreateSettlementForMybankBody": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "简介",
            "x-go-json": "comment",
            "x-go-name": "Comment",
            "x-go-validate": "@char[1,100]"
          },
          "notifyUrl": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "description": "异步通知回调地址",
            "x-go-json": "notifyUrl",
            "x-go-name": "NotifyUrl",
            "x-go-validate": "@string[1,100]"
          },
          "paymentUID": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "description": "付款账号ID",
            "x-go-json": "paymentUID",
            "x-go-name": "PaymentUID",
            "x-go-validate": "@string[1,32]"
          },
          "receiptUID": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "description": "收款账户ID",
            "x-go-json": "receiptUID",
            "x-go-name": "ReceiptUID",
            "x-go-validate": "@string[1,32]"
          },
          "totalAmount": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "description": "结算金额（单位=分）",
            "x-go-json": "totalAmount",
            "x-go-name": "TotalAmount",
            "x-go-validate": "@int64[1,]"
          },
          "tradeNo": {
            "type": "string",
            "description": "业务方结算单号",
            "x-go-json": "tradeNo",
            "x-go-name": "TradeNo",
            "x-go-validate": "@char[0,32]"
          }
        },
        "required": [
          "paymentUID",
          "receiptUID",
          "comment",
          "totalAmount",
          "notifyUrl"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/setllement.CreateSettlementForMybankBody"
      },
      "CreateSplitSubAccountBody": {
        "type": "object",
        "properties": {
          "accountMode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountMode"
              },
              {
                "enum": [
                  "",
                  "MARKET",
                  "MERCHANT",
                  "CPCN_ACCOUNT"
                ],
                "description": "账户使用的模式"
              }
            ],
            "x-go-json": "accountMode",
            "x-go-name": "AccountMode",
            "x-go-validate": "@string{,MARKET,MERCHANT,CPCN_ACCOUNT}"
          },
          "accountName": {
            "type": "string",
            "description": "账户名称",
            "x-go-json": "accountName",
            "x-go-name": "AccountName",
            "x-go-validate": "@char[1,200]"
          },
          "accountRealName": {
            "type": "string",
            "description": "交易账户名称",
            "x-go-json": "accountRealName",
            "x-go-name": "AccountRealName",
            "x-go-validate": "@char[0,200]"
          },
          "accountStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountStatus"
              },
              {
                "enum": [
                  "",
                  "ENABLE",
                  "DISABLE"
                ],
                "description": "账户状态",
                "default": "ENABLE"
              }
            ],
            "x-go-json": "accountStatus",
            "x-go-name": "AccountStatus",
            "x-go-validate": "@string{,ENABLE,DISABLE}"
          },
          "accountType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountType"
              },
              {
                "enum": [
                  "",
                  "RECIPIENT",
                  "PAYMENT"
                ],
                "description": "账户类型"
              }
            ],
            "x-go-json": "accountType",
            "x-go-name": "AccountType",
            "x-go-validate": "@string{,RECIPIENT,PAYMENT}"
          },
          "bodyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountBodyType"
              },
              {
                "enum": [
                  "",
                  "PERSONAL",
                  "COMPANY"
                ],
                "description": "账号主体类型"
              }
            ],
            "x-go-json": "bodyType",
            "x-go-name": "BodyType",
            "x-go-validate": "@string{,PERSONAL,COMPANY}"
          },
          "buCompanyId": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0,
            "description": "业务方公司id",
            "x-go-json": "buCompanyId",
            "x-go-name": "BuCompanyId",
            "x-go-validate": "@uint64[0,]"
          },
          "contactMobile": {
            "type": "string",
            "description": "联系人手机号",
            "x-go-json": "contactMobile",
            "x-go-name": "ContactMobile",
            "x-go-validate": "@phoneNo"
          },
          "contactName": {
            "type": "string",
            "maxLength": 150,
            "minLength": 1,
            "description": "联系人姓名",
            "x-go-json": "contactName",
            "x-go-name": "ContactName",
            "x-go-validate": "@string[1,150]"
          },
          "paymentPassword": {
            "type": "string",
            "description": "支付密码，用于余额支付场景",
            "x-go-json": "paymentPassword",
            "x-go-name": "PaymentPassword",
            "x-go-validate": "@char[0,200]"
          },
          "platform": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountPlatformType"
              },
              {
                "description": "账户来源, 默认为：直店",
                "default": "ZIDIAN"
              }
            ],
            "x-go-json": "platform",
            "x-go-name": "Platform"
          },
          "spiltRate": {
            "type": "number",
            "format": "double",
            "description": "分账比例",
            "x-go-json": "spiltRate",
            "x-go-name": "SpiltRate",
            "x-go-validate": "@float64\u003c8,4\u003e"
          },
          "splitArea": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "分账地区配置",
            "x-go-json": "splitArea",
            "x-go-name": "SplitArea",
            "x-go-validate": "@array[0,]:@string[0,]"
          },
          "splitMode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvSplitMode"
              },
              {
                "description": "分账模式，交易时分账/交易后分账, 默认为交易时分账",
                "default": "TRADING"
              }
            ],
            "x-go-json": "splitMode",
            "x-go-name": "SplitMode"
          },
          "subUID": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "description": "子账户绑定用户中心UID",
            "x-go-json": "subUID",
            "x-go-name": "SubUID",
            "x-go-validate": "@string[1,32]"
          },
          "userType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountUserType"
              },
              {
                "description": "用户类型",
                "default": "SELF"
              }
            ],
            "x-go-json": "userType",
            "x-go-name": "UserType"
          }
        },
        "required": [
          "subUID",
          "accountName",
          "bodyType",
          "accountType",
          "accountMode",
          "contactName",
          "contactMobile",
          "spiltRate",
          "splitArea"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/account.CreateSplitSubAccountBody"
      },
      "CreateSubAccountAreaForSplitBody": {
        "type": "object",
        "properties": {
          "areaID": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "地区编号ID",
            "x-go-json": "areaID",
            "x-go-name": "AreaID",
            "x-go-validate": "@array[1,200]:@string[1,]"
          },
          "spiltRate": {
            "type": "number",
            "format": "double",
            "description": "分账比例",
            "x-go-json": "spiltRate",
            "x-go-name": "SplitRate",
            "x-go-validate": "@float64\u003c8,4\u003e"
          },
          "subUID": {
            "type": "string",
            "description": "子账户UID",
            "x-go-json": "subUID",
            "x-go-name": "SubUID",
            "x-go-validate": "@char[1,32]"
          }
        },
        "required": [
          "subUID",
          "areaID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/account.CreateSubAccountAreaForSplitBody"
      },
      "CreateSubAccountBody": {
        "type": "object",
        "properties": {
          "contactMobile": {
            "type": "string",
            "description": "联系人手机号",
            "x-go-json": "contactMobile",
            "x-go-name": "ContactMobile",
            "x-go-validate": "@phoneNo"
          },
          "contactName": {
            "type": "string",
            "maxLength": 150,
            "minLength": 1,
            "description": "联系人姓名",
            "x-go-json": "contactName",
            "x-go-name": "ContactName",
            "x-go-validate": "@string[1,150]"
          },
          "mainUID": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "description": "主账户UID",
            "x-go-json": "mainUID",
            "x-go-name": "MainUID",
            "x-go-validate": "@string[1,32]"
          },
          "spiltRate": {
            "type": "number",
            "format": "double",
            "description": "分账比例",
            "x-go-json": "spiltRate",
            "x-go-name": "SpiltRate",
            "x-go-validate": "@float64\u003c8,4\u003e"
          },
          "splitArea": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "分账地区配置",
            "x-go-json": "splitArea",
            "x-go-name": "SplitArea",
            "x-go-validate": "@array[0,]:@string[0,]"
          },
          "userType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountUserType"
              },
              {
                "description": "账户类型",
                "default": "SELF"
              }
            ],
            "x-go-json": "userType",
            "x-go-name": "UserType"
          }
        },
        "required": [
          "mainUID",
          "contactName",
          "contactMobile"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/account.CreateSubAccountBody"
      },
      "CreateSubAccountForSplitBody": {
        "type": "object",
        "properties": {
          "accountMode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountMode"
              },
              {
                "enum": [
                  "",
                  "MARKET",
                  "MERCHANT"
                ],
                "description": "账户使用的模式"
              }
            ],
            "x-go-json": "accountMode",
            "x-go-name": "AccountMode",
            "x-go-validate": "@string{,MARKET,MERCHANT}"
          },
          "accountName": {
            "type": "string",
            "description": "账户名称",
            "x-go-json": "accountName",
            "x-go-name": "AccountName",
            "x-go-validate": "@char[1,200]"
          },
          "accountStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountStatus"
              },
              {
                "enum": [
                  "",
                  "ENABLE",
                  "DISABLE"
                ],
                "description": "账户状态"
              }
            ],
            "x-go-json": "accountStatus",
            "x-go-name": "AccountStatus",
            "x-go-validate": "@string{,ENABLE,DISABLE}"
          },
          "accountType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountType"
              },
              {
                "enum": [
                  "",
                  "RECIPIENT",
                  "PAYMENT"
                ],
                "description": "账户类型"
              }
            ],
            "x-go-json": "accountType",
            "x-go-name": "AccountType",
            "x-go-validate": "@string{,RECIPIENT,PAYMENT}"
          },
          "areaID": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "地区编号ID",
            "x-go-json": "areaID",
            "x-go-name": "AreaID",
            "x-go-validate": "@array[1,]:@string[1,]"
          },
          "bankAddress": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0,
            "description": "开户行地址",
            "x-go-json": "bankAddress",
            "x-go-name": "BankAddress",
            "x-go-validate": "@string[0,100]"
          },
          "bankCity": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "description": "开户行城市",
            "x-go-json": "bankCity",
            "x-go-name": "BankCity",
            "x-go-validate": "@string[1,100]"
          },
          "bankName": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "description": "开户行分支行名称",
            "x-go-json": "bankName",
            "x-go-name": "BankName",
            "x-go-validate": "@string[1,100]"
          },
          "bankProvince": {
            "type": "string",
            "maxLength": 60,
            "minLength": 1,
            "description": "开户行分支行省份",
            "x-go-json": "bankProvince",
            "x-go-name": "BankProvince",
            "x-go-validate": "@string[1,60]"
          },
          "bankType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvBankType"
              },
              {
                "description": "开户行"
              }
            ],
            "x-go-json": "bankType",
            "x-go-name": "BankCode"
          },
          "bindID": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0,
            "description": "绑定流水号",
            "x-go-json": "bindID",
            "x-go-name": "BindID",
            "x-go-validate": "@uint64[0,]"
          },
          "bodyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountBodyType"
              },
              {
                "enum": [
                  "",
                  "PERSONAL",
                  "COMPANY"
                ],
                "description": "账号主体类型"
              }
            ],
            "x-go-json": "bodyType",
            "x-go-name": "BodyType",
            "x-go-validate": "@string{,PERSONAL,COMPANY}"
          },
          "cardAccountType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvCardAccountType"
              },
              {
                "description": "账户类型"
              }
            ],
            "x-go-json": "cardAccountType",
            "x-go-name": "CardAccountType"
          },
          "cardName": {
            "type": "string",
            "maxLength": 60,
            "minLength": 1,
            "description": "账户户名",
            "x-go-json": "cardName",
            "x-go-name": "CardName",
            "x-go-validate": "@string[1,60]"
          },
          "cardNo": {
            "type": "string",
            "description": "银行卡号",
            "x-go-json": "cardNo",
            "x-go-name": "CardNo",
            "x-go-validate": "@bankCard"
          },
          "contactMobile": {
            "type": "string",
            "description": "联系人手机号",
            "x-go-json": "contactMobile",
            "x-go-name": "ContactMobile",
            "x-go-validate": "@char[0,15]"
          },
          "contactName": {
            "type": "string",
            "description": "联系人姓名",
            "x-go-json": "contactName",
            "x-go-name": "ContactName",
            "x-go-validate": "@char[0,200]"
          },
          "financeMobile": {
            "type": "string",
            "description": "财务手机号",
            "x-go-json": "financeMobile",
            "x-go-name": "FinanceMobile",
            "x-go-validate": "@char[0,15]"
          },
          "paymentPassword": {
            "type": "string",
            "description": "支付密码，用于余额支付场景",
            "x-go-json": "paymentPassword",
            "x-go-name": "PaymentPassword",
            "x-go-validate": "@char[0,200]"
          },
          "platform": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountPlatformType"
              },
              {
                "description": "账户来源",
                "default": "ZIDIAN"
              }
            ],
            "x-go-json": "platform",
            "x-go-name": "Platform"
          },
          "spiltRate": {
            "type": "number",
            "format": "double",
            "description": "分账比例",
            "x-go-json": "spiltRate",
            "x-go-name": "SplitRate",
            "x-go-validate": "@float64\u003c8,4\u003e"
          },
          "subAccountNumber": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "description": "分账账户的名额数",
            "default": "0",
            "x-go-json": "subAccountNumber",
            "x-go-name": "SubAccountNumber",
            "x-go-validate": "@int64[0,]"
          },
          "subUID": {
            "type": "string",
            "description": "子账户UID",
            "x-go-json": "subUID",
            "x-go-name": "SubUID",
            "x-go-validate": "@char[1,32]"
          },
          "userType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountUserType"
              },
              {
                "description": "用户类型",
                "default": "SELF"
              }
            ],
            "x-go-json": "userType",
            "x-go-name": "UserType"
          }
        },
        "required": [
          "subUID",
          "accountName",
          "accountStatus",
          "bodyType",
          "accountType",
          "areaID",
          "cardAccountType",
          "cardName",
          "cardNo",
          "bankType",
          "bankName",
          "bankProvince",
          "bankCity"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/account.CreateSubAccountForSplitBody"
      },
      "CreateTransBody": {
        "type": "object",
        "properties": {
          "acctType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAcctType"
              },
              {
                "description": "支付账户账户标识类型, 收款账户模式为通联支付必传, WECHAT_PUBLIC=微信公众号, WECHAT_MINI=微信小程序, ALIPAY_SERVICE=支付宝生活号, UNIONPAY_JS=银联JS支付"
              }
            ],
            "x-go-json": "acctType",
            "x-go-name": "AcctType"
          },
          "comment": {
            "type": "string",
            "description": "简介将显示在渠道方",
            "x-go-json": "comment",
            "x-go-name": "Comment",
            "x-go-validate": "@char[1,100]"
          },
          "deviceNo": {
            "type": "string",
            "description": "交易设备号",
            "x-go-json": "deviceNo",
            "x-go-name": "DeviceNo",
            "x-go-validate": "@char[0,32]"
          },
          "expires": {
            "type": "integer",
            "format": "uint64",
            "maximum": 172800,
            "minimum": 300,
            "description": "交易单超时秒数,最小超时时间5分钟，最大2天",
            "x-go-json": "expires",
            "x-go-name": "Expires",
            "x-go-validate": "@uint64[300,172800]"
          },
          "extend": {
            "type": "string",
            "description": "扩展字段",
            "x-go-json": "extend",
            "x-go-name": "Extend"
          },
          "isPreSplit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bool"
              },
              {
                "enum": [
                  "",
                  "TRUE",
                  "FALSE"
                ],
                "description": "是否预分账，默认为FALSE，若为TRUE表示，该交易单只有在业务方调用确认分账接口后才进行分账",
                "default": "FALSE"
              }
            ],
            "x-go-json": "isPreSplit",
            "x-go-name": "IsPreSplit",
            "x-go-validate": "@string{,TRUE,FALSE}"
          },
          "notifyUrl": {
            "type": "string",
            "description": "异步通知回调地址",
            "x-go-json": "notifyUrl",
            "x-go-name": "NotifyUrl",
            "x-go-validate": "@char[1,128]"
          },
          "openID": {
            "type": "string",
            "description": "支付账户用户标识,收款账户模式为通联支付时必传",
            "x-go-json": "openID",
            "x-go-name": "OpenID",
            "x-go-validate": "@char[0,128]"
          },
          "orderDetail": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateTransDetail"
            },
            "description": "订单详情",
            "x-go-json": "orderDetail",
            "x-go-name": "OrderDetail"
          },
          "payChannelType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvChannelType"
              },
              {
                "description": "支付渠道(不走收银台选择支付方式，此项必填)账户id"
              }
            ],
            "x-go-json": "payChannelType",
            "x-go-name": "ChannelType"
          },
          "paymentUID": {
            "type": "string",
            "description": "付款账号ID",
            "x-go-json": "paymentUID",
            "x-go-name": "PaymentUID",
            "x-go-validate": "@char[1,32]"
          },
          "platform": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountPlatformType"
              },
              {
                "enum": [
                  "",
                  "PC",
                  "MOBILE",
                  "ZIDIAN",
                  "HXB"
                ],
                "description": "交易单来源平台，此标志用于扣除手续时标记扣费平台，在手续费流水列表体现,如：订单来源为直店，手续费列表标记为: 直店手续费扣款, 默认为:手续费扣款",
                "default": "ZIDIAN"
              }
            ],
            "x-go-json": "platform",
            "x-go-name": "Platform",
            "x-go-validate": "@string{,PC,MOBILE,ZIDIAN,HXB}"
          },
          "receiptUID": {
            "type": "string",
            "description": "收款账户ID",
            "x-go-json": "receiptUID",
            "x-go-name": "ReceiptUID",
            "x-go-validate": "@char[1,32]"
          },
          "returnUrl": {
            "type": "string",
            "description": "同步通知回调地址",
            "x-go-json": "returnUrl",
            "x-go-name": "ReturnUrl",
            "x-go-validate": "@char[0,128]"
          },
          "sourceIp": {
            "type": "string",
            "description": "客户IP",
            "x-go-json": "sourceIp",
            "x-go-name": "SourceIP",
            "x-go-validate": "@ipv4"
          },
          "splitType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvTransSplitType"
              },
              {
                "enum": [
                  "",
                  "NO_SPLIT",
                  "BY_AREA",
                  "BY_MANUAL",
                  "BY_INSTITUTION"
                ],
                "description": "分账模式",
                "default": "NO_SPLIT"
              }
            ],
            "x-go-json": "splitType",
            "x-go-name": "SplitType",
            "x-go-validate": "@string{,NO_SPLIT,BY_AREA,BY_MANUAL,BY_INSTITUTION}"
          },
          "splitValue": {
            "type": "string",
            "description": "预付款，分账值，分账模式不为NO_SPLIT时必填, 当splitType=BY_AREA，splitValue为订单所在地区ID，当splitType=BY_MANUAL时为json字符串:{\"data\":[{\"uid\":\"111\",\"splitAmount\":100},{\"uid\":\"111\",\"splitAmount\":100}]}, 当splitType=BY_INSTITUTION时为json字符串: {\"data\":[{\"uid\":\"111\",\"institutionID\":\"005795\",\"settlementFlag\":\"00001\",\"splitAmount\":100}]}\n实时扣收，分账值，分账模式不为NO_SPLIT时必填, 当splitType=BY_AREA，splitValue为订单所在地区ID，当splitType=BY_MANUAL时为json字符串:{\"data\":[{\"uid\":\"111\",\"splitAmount\":100},{\"uid\":\"111\",\"splitAmount\":100, \"splitBillType\":\"DEFAULT\"}, {\"uid\":\"111\",\"splitAmount\":100, \"splitBillType\":\"HANDINGFEE\"}]}, 当splitType=BY_INSTITUTION时为json字符串: {\"data\":[{\"uid\":\"111\",\"splitAmount\":100, \"splitBillType\":\"DEFAULT\"}, {\"uid\":\"111\",\"splitAmount\":100, \"splitBillType\":\"HANDINGFEE\"}]}",
            "x-go-json": "splitValue",
            "x-go-name": "SplitValue",
            "x-go-validate": "@char[0,500]"
          },
          "totalAmount": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "description": "订单金额（单位=分）",
            "x-go-json": "totalAmount",
            "x-go-name": "TotalAmount",
            "x-go-validate": "@int64[1,]"
          },
          "tradeNo": {
            "type": "string",
            "description": "业务方订单号",
            "x-go-json": "tradeNo",
            "x-go-name": "TradeNo",
            "x-go-validate": "@char[1,32]"
          },
          "userAgent": {
            "type": "string",
            "description": "userAgent",
            "x-go-json": "userAgent",
            "x-go-name": "UserAgent",
            "x-go-validate": "@char[0,150]"
          }
        },
        "required": [
          "comment",
          "expires",
          "notifyUrl",
          "payChannelType",
          "paymentUID",
          "receiptUID",
          "sourceIp",
          "totalAmount",
          "tradeNo"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/trans.CreateTransBody"
      },
      "CreateTransDetail": {
        "type": "object",
        "properties": {
          "goodsName": {
            "type": "string",
            "description": "商品名称",
            "x-go-json": "goodsName",
            "x-go-name": "GoodsName"
          },
          "goodsNum": {
            "type": "integer",
            "format": "uint64",
            "description": "数量",
            "x-go-json": "goodsNum",
            "x-go-name": "GoodsNum"
          },
          "goodsPrice": {
            "type": "integer",
            "format": "uint64",
            "description": "商品价格",
            "default": "0",
            "x-go-json": "goodsPrice,omitempty",
            "x-go-name": "GoodsPrice"
          },
          "goodsUrl": {
            "type": "string",
            "description": "商品URL",
            "x-go-json": "goodsUrl,omitempty",
            "x-go-name": "GoodsUrl"
          }
        },
        "required": [
          "goodsName",
          "goodsNum"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.CreateTransDetail"
      },
      "CreateTransRsp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Trans"
          },
          {
            "type": "object",
            "properties": {
              "jumpMiniUserName": {
                "type": "string",
                "description": "app跳转微信小程序支付的小程序原始id, 仅在app跳转微信小程序支付时有返回",
                "x-go-json": "jumpMiniUserName",
                "x-go-name": "JumpMiniUserName"
              },
              "payAppID": {
                "type": "string",
                "description": "app跳转微信小程序支付appID, 仅在app跳转微信小程序支付时有返回",
                "x-go-json": "payAppID",
                "x-go-name": "PayAppID"
              }
            },
            "required": [
              "payAppID",
              "jumpMiniUserName"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/trans.CreateTransRsp"
      },
      "CreateTransferBody": {
        "type": "object",
        "properties": {
          "channelType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvChannelType"
              },
              {
                "enum": [
                  "",
                  "CPCN_ACCOUNT_UNIONER_SETTLEMENT",
                  "CPCN_ACCOUNT_SUPPLIER_SETTLEMENT",
                  "CPCN_ACCOUNT_FEE_SETTLEMENT"
                ],
                "description": "支付方式 用于区分联营，采购结算，生成账户交易流水, CPCN_ACCOUNT_FEE_SETTLEMENT=费用结算，CPCN_ACCOUNT_UNIONER_SETTLEMENT=联营结算，CPCN_ACCOUNT_SUPPLIER_SETTLEMENT=采购结算"
              }
            ],
            "x-go-json": "channelType",
            "x-go-name": "ChannelType",
            "x-go-validate": "@string{,CPCN_ACCOUNT_UNIONER_SETTLEMENT,CPCN_ACCOUNT_SUPPLIER_SETTLEMENT,CPCN_ACCOUNT_FEE_SETTLEMENT}"
          },
          "extend": {
            "type": "string",
            "description": "扩展字段",
            "x-go-json": "extend",
            "x-go-name": "Extend"
          },
          "isAuthToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bool"
              },
              {
                "description": "验证token",
                "default": "TRUE"
              }
            ],
            "x-go-json": "isAuthToken",
            "x-go-name": "IsAuthToken"
          },
          "isReduceFee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bool"
              },
              {
                "description": "转账是否扣除手续费, 默认为TRUE",
                "default": "TRUE"
              }
            ],
            "x-go-json": "isReduceFee",
            "x-go-name": "IsReduceFee"
          },
          "notifyUrl": {
            "type": "string",
            "description": "异步通知回调地址",
            "x-go-json": "notifyUrl",
            "x-go-name": "NotifyUrl",
            "x-go-validate": "@char[0,128]"
          },
          "paymentUID": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "description": "付款账号ID",
            "x-go-json": "paymentUID",
            "x-go-name": "PaymentUID",
            "x-go-validate": "@string[1,32]"
          },
          "platform": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountPlatformType"
              },
              {
                "description": "交易单来源平台，此标志用于扣除手续时标记扣费平台，在手续费流水列表体现,如：订单来源为直店，手续费列表标记为: 直店手续费扣款, 默认为:手续费扣款",
                "default": "ZIDIAN"
              }
            ],
            "x-go-json": "platform",
            "x-go-name": "Platform"
          },
          "receiptUID": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "description": "收款账户ID",
            "x-go-json": "receiptUID",
            "x-go-name": "ReceiptUID",
            "x-go-validate": "@string[1,32]"
          },
          "reduceTiming": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReduceTimingType"
              },
              {
                "description": "扣费时机，SETTLEMENT=结算时按结算扣费规则扣除，TRANSFER=转账时按转账扣费规则扣除 默认为结算时扣除",
                "default": "SETTLEMENT"
              }
            ],
            "x-go-json": "reduceTiming",
            "x-go-name": "ReduceTiming"
          },
          "sourceIp": {
            "type": "string",
            "description": "客户IP",
            "x-go-json": "sourceIp",
            "x-go-name": "SourceIP",
            "x-go-validate": "@ipv4"
          },
          "totalAmount": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "description": "订单金额",
            "x-go-json": "totalAmount",
            "x-go-name": "TotalAmount",
            "x-go-validate": "@int64[1,]"
          },
          "tradeNo": {
            "type": "string",
            "description": "业务方订单号",
            "x-go-json": "tradeNo",
            "x-go-name": "TradeNo",
            "x-go-validate": "@char[1,32]"
          },
          "whoPayFee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WhoPayFeeType"
              },
              {
                "description": "转账手续费付费方, 默认为RECEIPT从ReceiptUID扣除",
                "default": "RECEIPT"
              }
            ],
            "x-go-json": "whoPayFee",
            "x-go-name": "WhoPayFee"
          },
          "withSettlement": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bool"
              },
              {
                "description": "是否同时提现，默认为 TRUE",
                "default": "TRUE"
              }
            ],
            "x-go-json": "withSettlement",
            "x-go-name": "WithSettlement"
          }
        },
        "required": [
          "paymentUID",
          "receiptUID",
          "totalAmount",
          "tradeNo",
          "sourceIp",
          "channelType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/transfer.CreateTransferBody"
      },
      "CreateTransferRsp": {
        "type": "object",
        "properties": {
          "payStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvTransPayStatus"
              },
              {
                "description": "转账支付状态"
              }
            ],
            "x-go-json": "payStatus",
            "x-go-name": "PayStatus"
          },
          "settlementStatue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvSettlementStatus"
              },
              {
                "description": "结算状态, WithSettlement为TRUE时出现"
              }
            ],
            "x-go-json": "settlementStatue",
            "x-go-name": "SettlementStatue"
          },
          "transID": {
            "type": "integer",
            "format": "uint64",
            "description": "转账交易单号",
            "x-go-json": "transID",
            "x-go-name": "TransID"
          }
        },
        "required": [
          "transID",
          "payStatus",
          "settlementStatue"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/transfer.CreateTransferRsp"
      },
      "CreateWhitelistBody": {
        "type": "object",
        "properties": {
          "bankCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvBankType"
              },
              {
                "description": "绑定银行ID"
              }
            ],
            "x-go-json": "bankCode",
            "x-go-name": "BankCode"
          },
          "cardName": {
            "type": "string",
            "description": "付款银行账户名称",
            "x-go-json": "cardName",
            "x-go-name": "CardName",
            "x-go-validate": "@char[1,32]"
          },
          "cardNo": {
            "type": "string",
            "description": "付款银行账户号码",
            "x-go-json": "cardNo",
            "x-go-name": "CardNo",
            "x-go-validate": "@char[1,32]"
          },
          "paymentUID": {
            "type": "string",
            "description": "付款账户id",
            "x-go-json": "paymentUID",
            "x-go-name": "PaymentUID",
            "x-go-validate": "@char[1,32]"
          },
          "receiveUID": {
            "type": "string",
            "description": "收款账户ID",
            "x-go-json": "receiveUID",
            "x-go-name": "ReceiveUID",
            "x-go-validate": "@char[1,32]"
          }
        },
        "required": [
          "receiveUID",
          "paymentUID",
          "cardName",
          "cardNo",
          "bankCode"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.CreateWhitelistBody"
      },
      "DBank": {
        "type": "object",
        "properties": {
          "eAccountName": {
            "type": "string",
            "description": "电子账户名称",
            "x-go-json": "eAccountName",
            "x-go-name": "EAccountName"
          },
          "eAccountNumber": {
            "type": "string",
            "description": "电子账户号码",
            "x-go-json": "eAccountNumber",
            "x-go-name": "EAccountNumber"
          }
        },
        "required": [
          "eAccountName",
          "eAccountNumber"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.DBank"
      },
      "DelApplyBody": {
        "type": "object",
        "properties": {
          "applyID": {
            "type": "string",
            "format": "uint64",
            "minimum": 1,
            "description": "申请单ID，不为空则修改申请单",
            "x-go-json": "applyID,string",
            "x-go-name": "ApplyID",
            "x-go-validate": "@uint64[1,]"
          }
        },
        "required": [
          "applyID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.DelApplyBody"
      },
      "DelApplyMerchantInfoBody": {
        "type": "object",
        "properties": {
          "applyID": {
            "type": "string",
            "format": "uint64",
            "minimum": 1,
            "description": "申请单ID，不为空则修改申请单",
            "x-go-json": "applyID,string",
            "x-go-name": "ApplyID",
            "x-go-validate": "@uint64[1,]"
          },
          "payType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvMerchantPayType"
              },
              {
                "description": "支付类别,"
              }
            ],
            "x-go-json": "payType",
            "x-go-name": "PayType"
          },
          "payWay": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvMerchantPayWay"
              },
              {
                "description": "支付方式, WECHAT=微信， ALIPAY=支付宝，UNIONPAY=银联"
              }
            ],
            "x-go-json": "payWay",
            "x-go-name": "PayWay"
          }
        },
        "required": [
          "applyID",
          "payWay",
          "payType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.DelApplyMerchantInfoBody"
      },
      "DeleteWhitelistBody": {
        "type": "object",
        "properties": {
          "paymentUID": {
            "type": "string",
            "description": "付款账户id",
            "x-go-json": "paymentUID",
            "x-go-name": "PaymentUID",
            "x-go-validate": "@char[1,32]"
          },
          "receiveUID": {
            "type": "string",
            "description": "收款账户ID",
            "x-go-json": "receiveUID",
            "x-go-name": "ReceiveUID",
            "x-go-validate": "@char[1,32]"
          },
          "wlID": {
            "type": "integer",
            "format": "uint64",
            "description": "白名单id",
            "x-go-json": "wlID",
            "x-go-name": "WlID"
          }
        },
        "required": [
          "receiveUID",
          "paymentUID",
          "wlID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.DeleteWhitelistBody"
      },
      "DisabledMerchantBody": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "商户关闭原因",
            "x-go-json": "comment",
            "x-go-name": "Comment",
            "x-go-validate": "@char[1,256]"
          }
        },
        "required": [
          "comment"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/mybank.DisabledMerchantBody"
      },
      "DoClearBody": {
        "type": "object",
        "properties": {
          "accountID": {
            "type": "integer",
            "format": "uint64",
            "minimum": 1,
            "description": "账户id",
            "x-go-json": "accountID",
            "x-go-name": "AccountID",
            "x-go-validate": "@uint64[1,]"
          },
          "batchNo": {
            "type": "string",
            "description": "批次号",
            "x-go-json": "batchNo",
            "x-go-name": "BatchNo",
            "x-go-validate": "@char[1,32]"
          }
        },
        "required": [
          "accountID",
          "batchNo"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/sett_task.DoClearBody"
      },
      "DoCreateTransferFeeBody": {
        "type": "object",
        "properties": {
          "extend": {
            "type": "string",
            "description": "扩展字段",
            "x-go-json": "extend",
            "x-go-name": "Extend"
          },
          "fee": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "description": "手续费金额",
            "x-go-json": "fee",
            "x-go-name": "Fee",
            "x-go-validate": "@int64[1,]"
          },
          "feeRate": {
            "type": "number",
            "format": "double",
            "description": "手续费汇率",
            "default": "0",
            "x-go-json": "feeRate",
            "x-go-name": "FeeRate"
          },
          "paymentAccountID": {
            "type": "integer",
            "format": "uint64",
            "minimum": 1,
            "description": "付款账号id, 支出手续费的账户id",
            "x-go-json": "paymentAccountID",
            "x-go-name": "PaymentAccountID",
            "x-go-validate": "@uint64[1,]"
          },
          "platform": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountPlatformType"
              },
              {
                "description": "交易单来源平台，此标志用于扣除手续时标记扣费平台，在手续费流水列表体现,如：订单来源为直店，手续费列表标记为: 直店手续费扣款, 默认为:手续费扣款",
                "default": "ZIDIAN"
              }
            ],
            "x-go-json": "platform",
            "x-go-name": "Platform"
          },
          "sourceIp": {
            "type": "string",
            "description": "客户IP",
            "x-go-json": "sourceIp",
            "x-go-name": "SourceIP",
            "x-go-validate": "@char[0,32]"
          },
          "tradeNo": {
            "type": "string",
            "description": "这里为 联营， 采购，结算，发起时那一笔交易单号",
            "x-go-json": "tradeNo",
            "x-go-name": "TradeNo",
            "x-go-validate": "@char[1,32]"
          },
          "userAgent": {
            "type": "string",
            "description": "校验",
            "x-go-json": "userAgent",
            "x-go-name": "UserAgent"
          }
        },
        "required": [
          "paymentAccountID",
          "fee",
          "tradeNo",
          "userAgent"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/transfer.DoCreateTransferFeeBody"
      },
      "DoSplitByTransBody": {
        "type": "object",
        "properties": {
          "splitValue": {
            "type": "string",
            "maxLength": 500,
            "minLength": 0,
            "description": "分账值, 当splitType=BY_MANUAL时为json字符串:{\"data\":[{\"uid\":\"111\",\"splitAmount\":100},{\"uid\":\"111\",\"splitAmount\":100}]}",
            "x-go-json": "splitValue",
            "x-go-name": "SplitValue",
            "x-go-validate": "@string[0,500]"
          }
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/trans.DoSplitByTransBody"
      },
      "DoWithdrawalBody": {
        "type": "object",
        "properties": {
          "taskID": {
            "type": "integer",
            "format": "uint64",
            "minimum": 1,
            "description": "任务号",
            "x-go-json": "taskID",
            "x-go-name": "TaskID",
            "x-go-validate": "@uint64[1,]"
          }
        },
        "required": [
          "taskID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/sett_task.DoWithdrawalBody"
      },
      "Electronic": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "$ref": "#/components/schemas/OperateTime"
          },
          {
            "$ref": "#/components/schemas/SoftDelete"
          },
          {
            "type": "object",
            "properties": {
              "eID": {
                "type": "string",
                "format": "uint64",
                "description": "单据编号",
                "x-go-json": "eID,string",
                "x-go-name": "EID"
              },
              "eSn": {
                "type": "string",
                "description": "服务商电子回单编号",
                "x-go-json": "eSn",
                "x-go-name": "ESn"
              },
              "eType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvElectronicType"
                  },
                  {
                    "description": "电子回单类型"
                  }
                ],
                "x-go-json": "eType",
                "x-go-name": "EType"
              },
              "paymentAccountID": {
                "type": "string",
                "format": "uint64",
                "description": "付款账号ID",
                "x-go-json": "paymentAccountID,string",
                "x-go-name": "PaymentAccountID"
              },
              "receiptAccountID": {
                "type": "string",
                "format": "uint64",
                "description": "收款账户ID",
                "x-go-json": "receiptAccountID,string",
                "x-go-name": "ReceiptAccountID"
              },
              "status": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvElectronicStatus"
                  },
                  {
                    "description": "状态"
                  }
                ],
                "x-go-json": "status",
                "x-go-name": "Status"
              },
              "tradeNo": {
                "type": "string",
                "description": "关联交易号, 支付为交易单号，提现为结算单号",
                "x-go-json": "tradeNo",
                "x-go-name": "TradeNo"
              },
              "txSn": {
                "type": "string",
                "description": "电子回单流水号",
                "x-go-json": "txSn",
                "x-go-name": "TxSn"
              },
              "url": {
                "type": "string",
                "description": "电子回单下载地址",
                "x-go-json": "url",
                "x-go-name": "Url"
              }
            },
            "required": [
              "eID",
              "eSn",
              "eType",
              "paymentAccountID",
              "receiptAccountID",
              "status",
              "tradeNo",
              "txSn",
              "url"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.Electronic"
      },
      "EnabledMerchantBody": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "商户开启原因",
            "x-go-json": "comment",
            "x-go-name": "Comment",
            "x-go-validate": "@char[1,256]"
          }
        },
        "required": [
          "comment"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/mybank.EnabledMerchantBody"
      },
      "ErrorField": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "description": "出错字段路径\n这个信息为一个 json 字符串,方便客户端进行定位错误原因\n例如输入中 {\"name\":{ \"alias\" : \"test\"}} 中的alias出错,则返回 \"name.alias\"\n如果alias是数组, 且第2个元素的a字段错误,则返回\"name.alias[2].a\"",
            "x-go-json": "field",
            "x-go-name": "Field",
            "x-tag-xml": "field"
          },
          "in": {
            "type": "string",
            "description": "错误字段位置\nbody, query, header, path, formData",
            "x-go-json": "in",
            "x-go-name": "In",
            "x-tag-xml": "in"
          },
          "msg": {
            "type": "string",
            "description": "错误信息",
            "x-go-json": "msg",
            "x-go-name": "Msg",
            "x-tag-xml": "msg"
          }
        },
        "required": [
          "field",
          "msg",
          "in"
        ],
        "x-go-named": "go-hummer/hummer/status_error.ErrorField"
      },
      "ErrorFields": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ErrorField"
        },
        "x-go-named": "go-hummer/hummer/status_error.ErrorFields"
      },
      "FaceOCRReqBody": {
        "type": "object",
        "properties": {
          "images": {
            "type": "string",
            "description": "图片base64,图片大小建议不要超过 1.5M，防止网络传输延时过长",
            "x-go-json": "images",
            "x-go-name": "Images"
          }
        },
        "required": [
          "images"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/tools.FaceOCRReqBody"
      },
      "FaceOcrRsp": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "地址信息",
            "x-go-json": "address",
            "x-go-name": "Address"
          },
          "birth": {
            "type": "string",
            "description": "出生日期",
            "x-go-json": "birth",
            "x-go-name": "Birth"
          },
          "configStr": {
            "type": "string",
            "description": "配置信息，同输入configure",
            "x-go-json": "configStr",
            "x-go-name": "ConfigStr"
          },
          "isFake": {
            "type": "boolean",
            "description": "是否是复印件",
            "x-go-json": "isFake",
            "x-go-name": "IsFake"
          },
          "name": {
            "type": "string",
            "description": "姓名",
            "x-go-json": "name",
            "x-go-name": "Name"
          },
          "nationality": {
            "type": "string",
            "description": "民族",
            "x-go-json": "nationality",
            "x-go-name": "Nationality"
          },
          "num": {
            "type": "string",
            "description": "身份证号",
            "x-go-json": "num",
            "x-go-name": "Num"
          },
          "sex": {
            "type": "string",
            "description": "性别",
            "x-go-json": "sex",
            "x-go-name": "Sex"
          },
          "success": {
            "type": "boolean",
            "description": "识别结果，true表示成功，false表示失败",
            "x-go-json": "success",
            "x-go-name": "Success"
          }
        },
        "required": [
          "address",
          "configStr",
          "name",
          "nationality",
          "num",
          "sex",
          "birth",
          "isFake",
          "success"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/tools.FaceOcrRsp"
      },
      "FeeRule": {
        "type": "object",
        "properties": {
          "config": {
            "type": "string",
            "description": "网商来账识别阶梯扣费规则,仅支持大于等于, [{\"reduceValue\":手续费扣费金额单位分,\"stepAmount\":交易金额扣费阶梯额}], 中金来账识别阶梯扣费规则, [{\"reduceValue\":手续费扣费金额单位分,\"minAmount\":交易金额阶梯小值, 最小为1, \"maxAmount\":交易金额阶梯大值, 不设限时为0}]",
            "x-go-json": "config,omitempty",
            "x-go-name": "Config",
            "x-go-validate": "@char[0,5000]"
          },
          "max": {
            "type": "integer",
            "format": "int64",
            "description": "最大扣费金额，若设置此值，当计算金额大于此金额时使用此金额",
            "x-go-json": "max,omitempty",
            "x-go-name": "Max"
          },
          "min": {
            "type": "integer",
            "format": "int64",
            "description": "最小扣费金额 ，若设置此值，当计算得出金额小于此值时使用此金额扣费",
            "x-go-json": "min,omitempty",
            "x-go-name": "Min"
          },
          "payMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvReducePayMethodType"
              },
              {
                "description": "支付方式"
              }
            ],
            "x-go-json": "payMethod",
            "x-go-name": "PayMethod"
          },
          "reduceMode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvReduceMode"
              },
              {
                "description": "扣费模式"
              }
            ],
            "x-go-json": "reduceMode",
            "x-go-name": "ReduceMode"
          },
          "reduceValue": {
            "type": "number",
            "format": "double",
            "description": "扣费值, 扣费模式为按单笔=扣费金额， 扣费模式为按比例=扣费比例 小数表示",
            "x-go-json": "reduceValue,omitempty",
            "x-go-name": "ReduceValue"
          }
        },
        "required": [
          "payMethod",
          "reduceMode"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.FeeRule"
      },
      "FeeRules": {
        "type": "object",
        "properties": {
          "preCharge": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeeRule"
            },
            "description": "预充值",
            "x-go-json": "preCharge",
            "x-go-name": "PreCharge"
          },
          "trading": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeeRule"
            },
            "description": "坐扣",
            "x-go-json": "trading",
            "x-go-name": "Trading"
          }
        },
        "required": [
          "preCharge",
          "trading"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.FeeRules"
      },
      "FreezeResp": {
        "type": "object",
        "properties": {
          "outTradeNo": {
            "type": "string",
            "description": "外部交易号",
            "x-go-json": "outTradeNo",
            "x-go-name": "OutTradeNo"
          }
        },
        "required": [
          "outTradeNo"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_mybank_gateway.FreezeResp"
      },
      "Gathering": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "$ref": "#/components/schemas/OperateTime"
          },
          {
            "$ref": "#/components/schemas/SoftDelete"
          },
          {
            "type": "object",
            "properties": {
              "accountName": {
                "type": "string",
                "description": "账户名称",
                "x-go-json": "accountName",
                "x-go-name": "AccountName"
              },
              "accountNumber": {
                "type": "string",
                "description": "账户号码",
                "x-go-json": "accountNumber",
                "x-go-name": "AccountNumber"
              },
              "accountType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvCardAccountType"
                  },
                  {
                    "description": "账户类型"
                  }
                ],
                "x-go-json": "accountType",
                "x-go-name": "AccountType"
              },
              "amount": {
                "type": "integer",
                "format": "int64",
                "description": "交易金额",
                "x-go-json": "amount",
                "x-go-name": "Amount"
              },
              "bankCode": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvBankType"
                  },
                  {
                    "description": "银行ID"
                  }
                ],
                "x-go-json": "bankCode",
                "x-go-name": "BankCode"
              },
              "bankNoByPBC": {
                "type": "string",
                "description": "人行联行号",
                "x-go-json": "bankNoByPBC",
                "x-go-name": "BankNoByPBC"
              },
              "batchNo": {
                "type": "string",
                "description": "代付批次号",
                "x-go-json": "batchNo",
                "x-go-name": "BatchNo"
              },
              "branchName": {
                "type": "string",
                "description": "分支行",
                "x-go-json": "branchName",
                "x-go-name": "BranchName"
              },
              "city": {
                "type": "string",
                "description": "分支行城市",
                "x-go-json": "city",
                "x-go-name": "City"
              },
              "currency": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvTransCurrencyType"
                  },
                  {
                    "description": "币种 CNY=人民币"
                  }
                ],
                "x-go-json": "currency",
                "x-go-name": "Currency"
              },
              "email": {
                "type": "string",
                "description": "电子邮箱",
                "x-go-json": "email",
                "x-go-name": "Email"
              },
              "extend": {
                "type": "string",
                "description": "扩展信息",
                "x-go-json": "extend",
                "x-go-name": "Extend"
              },
              "gatheringID": {
                "type": "string",
                "format": "int64",
                "description": "代付交易单号",
                "x-go-json": "gatheringID,string",
                "x-go-name": "GatheringID"
              },
              "handingFee": {
                "type": "integer",
                "format": "int64",
                "description": "本次交易扣除的手续费,仅支持中金商户模式的公众号、快捷、扫码支付方式",
                "x-go-json": "handingFee",
                "x-go-name": "HandingFee"
              },
              "handingFeeRate": {
                "type": "number",
                "format": "double",
                "description": "本次交易扣除的手续费费率",
                "x-go-json": "handingFeeRate",
                "x-go-name": "HandingFeeRate"
              },
              "identificationNumber": {
                "type": "string",
                "description": "证件号码",
                "x-go-json": "identificationNumber",
                "x-go-name": "IdentificationNumber"
              },
              "identificationType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvIdentificationType"
                  },
                  {
                    "description": "开户证件类型 1=身份证 2=户口簿 3=护照 4=军官证 5=士兵证 6=港澳居民来往内地通行证 7=台湾同胞来往内地通行证 8=临时身份证 9=外国人居留证 10=警官证 11=其他证件"
                  }
                ],
                "x-go-json": "identificationType",
                "x-go-name": "IdentificationType"
              },
              "itemNo": {
                "type": "string",
                "description": "交易记录流水号",
                "x-go-json": "itemNo",
                "x-go-name": "ItemNo"
              },
              "note": {
                "type": "string",
                "description": "备注",
                "x-go-json": "note",
                "x-go-name": "Note"
              },
              "notifyMsg": {
                "type": "string",
                "description": "通知消息",
                "x-go-json": "notifyMsg",
                "x-go-name": "NotifyMsg"
              },
              "notifyNum": {
                "type": "integer",
                "format": "int64",
                "description": "通知次数",
                "x-go-json": "notifyNum",
                "x-go-name": "NotifyNum"
              },
              "notifyReturn": {
                "type": "string",
                "description": "通知消息",
                "x-go-json": "notifyReturn",
                "x-go-name": "NotifyReturn"
              },
              "notifyUrl": {
                "type": "string",
                "description": "异步通知回调地址",
                "x-go-json": "notifyUrl",
                "x-go-name": "NotifyUrl"
              },
              "payMsg": {
                "type": "string",
                "description": "第三方支付平台返回的消息",
                "x-go-json": "payMsg",
                "x-go-name": "PayMsg"
              },
              "paySn": {
                "type": "string",
                "description": "第三方支付平台交易号",
                "x-go-json": "paySn",
                "x-go-name": "PaySN"
              },
              "payTime": {
                "type": "string",
                "description": "付款时间",
                "x-go-json": "payTime",
                "x-go-name": "PayTime"
              },
              "paymentAccountID": {
                "type": "string",
                "format": "uint64",
                "description": "付款账号ID",
                "x-go-json": "paymentAccountID,string",
                "x-go-name": "PaymentAccountID"
              },
              "paymentAccountName": {
                "type": "string",
                "description": "支付账户名称(结算户代付可为空)",
                "x-go-json": "paymentAccountName",
                "x-go-name": "PaymentAccountName"
              },
              "paymentAccountNumber": {
                "type": "string",
                "description": "支付账户号码(结算户代付为结算标识)",
                "x-go-json": "paymentAccountNumber",
                "x-go-name": "PaymentAccountNumber"
              },
              "paymentFlag": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvGatheringPaymentFlag"
                  },
                  {
                    "description": "代付标识 1=普通代付 2=支付账户余额代付 3=代付通账户代付 4=结算户代付"
                  }
                ],
                "x-go-json": "paymentFlag",
                "x-go-name": "PaymentFlag"
              },
              "phoneNumber": {
                "type": "string",
                "description": "手机号",
                "x-go-json": "phoneNumber",
                "x-go-name": "PhoneNumber"
              },
              "platform": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvAccountPlatformType"
                  },
                  {
                    "description": "交易单来源平台,1=PC, 2=移动端, 3=直店"
                  }
                ],
                "x-go-json": "platform",
                "x-go-name": "Platform"
              },
              "province": {
                "type": "string",
                "description": "分支行省份",
                "x-go-json": "province",
                "x-go-name": "Province"
              },
              "receiptAccountID": {
                "type": "string",
                "format": "uint64",
                "description": "收款账户ID",
                "x-go-json": "receiptAccountID,string",
                "x-go-name": "ReceiptAccountID"
              },
              "remark": {
                "type": "string",
                "description": "备注",
                "x-go-json": "remark",
                "x-go-name": "Remark"
              },
              "sourceIp": {
                "type": "string",
                "description": "IP",
                "x-go-json": "sourceIp",
                "x-go-name": "SourceIP"
              },
              "status": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvGatheringStatus"
                  },
                  {
                    "description": "代付交易单状态"
                  }
                ],
                "x-go-json": "status",
                "x-go-name": "Status"
              },
              "totalAmount": {
                "type": "integer",
                "format": "int64",
                "description": "代付总金额（单位分）",
                "x-go-json": "totalAmount",
                "x-go-name": "TotalAmount"
              },
              "totalCount": {
                "type": "integer",
                "format": "int64",
                "description": "代付笔数",
                "x-go-json": "totalCount",
                "x-go-name": "TotalCount"
              },
              "tradeNo": {
                "type": "string",
                "description": "外部代付单号,最多支持32位字符",
                "x-go-json": "tradeNo",
                "x-go-name": "TradeNo"
              },
              "userAgent": {
                "type": "string",
                "description": "userAgent",
                "x-go-json": "userAgent",
                "x-go-name": "UserAgent"
              },
              "version": {
                "type": "integer",
                "format": "uint64",
                "description": "乐观锁",
                "x-go-json": "version",
                "x-go-name": "Version"
              }
            },
            "required": [
              "accountName",
              "accountNumber",
              "accountType",
              "amount",
              "bankCode",
              "bankNoByPBC",
              "batchNo",
              "branchName",
              "city",
              "currency",
              "email",
              "extend",
              "gatheringID",
              "handingFee",
              "handingFeeRate",
              "identificationNumber",
              "identificationType",
              "itemNo",
              "note",
              "notifyMsg",
              "notifyNum",
              "notifyReturn",
              "notifyUrl",
              "payMsg",
              "paySn",
              "payTime",
              "paymentAccountID",
              "paymentAccountName",
              "paymentAccountNumber",
              "paymentFlag",
              "phoneNumber",
              "platform",
              "province",
              "receiptAccountID",
              "remark",
              "sourceIp",
              "status",
              "totalAmount",
              "totalCount",
              "tradeNo",
              "userAgent",
              "version"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.Gathering"
      },
      "GetAccountDetailResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/GetAccountResp"
          },
          {
            "type": "object",
            "properties": {
              "financeMobile": {
                "type": "string",
                "description": "财务手机号，已经弃用，请使用company中相关接口",
                "x-go-json": "financeMobile",
                "x-go-name": "FinanceMobile"
              },
              "isSettlementedInToday": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bool"
                  },
                  {
                    "description": "当日是否已经发起过结算"
                  }
                ],
                "x-go-json": "isSettlementedInToday",
                "x-go-name": "IsSettlementedInToday"
              },
              "mainAccountSplitAmount": {
                "type": "integer",
                "format": "int64",
                "description": "主账户可结算金额，仅支持市场模式",
                "x-go-json": "mainAccountSplitAmount",
                "x-go-name": "MainAccountSplitAmount"
              },
              "remainAccountNumber": {
                "type": "integer",
                "format": "int64",
                "description": "剩余可用分账账户数",
                "x-go-json": "remainAccountNumber",
                "x-go-name": "RemainAccountNumber"
              },
              "remainSupplierAccountNumber": {
                "type": "integer",
                "format": "int64",
                "description": "剩余供应商分账账户数",
                "x-go-json": "remainSupplierAccountNumber",
                "x-go-name": "RemainSupplierAccountNumber"
              },
              "remainUnionerAccountNumber": {
                "type": "integer",
                "format": "int64",
                "description": "剩余联营商分账账户数",
                "x-go-json": "remainUnionerAccountNumber",
                "x-go-name": "RemainUnionerAccountNumber"
              },
              "subAccountNumber": {
                "type": "integer",
                "format": "int64",
                "description": "购买分账账户数",
                "x-go-json": "subAccountNumber",
                "x-go-name": "SubAccountNumber"
              },
              "supplierAccountNumber": {
                "type": "integer",
                "format": "int64",
                "description": "购买供应商分账账户数",
                "x-go-json": "supplierAccountNumber",
                "x-go-name": "SupplierAccountNumber"
              },
              "unionerAccountNumber": {
                "type": "integer",
                "format": "int64",
                "description": "购买联营商分账账户数",
                "x-go-json": "unionerAccountNumber",
                "x-go-name": "UnionerAccountNumber"
              }
            },
            "required": [
              "financeMobile",
              "subAccountNumber",
              "supplierAccountNumber",
              "remainAccountNumber",
              "remainSupplierAccountNumber",
              "unionerAccountNumber",
              "remainUnionerAccountNumber",
              "mainAccountSplitAmount",
              "isSettlementedInToday"
            ]
          }
        ],
        "description": "获取账户基本信息返回",
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/account.GetAccountDetailResp"
      },
      "GetAccountListByHandingFeeResp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountList"
            },
            "x-go-json": "data",
            "x-go-name": "Data"
          }
        },
        "required": [
          "data"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.GetAccountListByHandingFeeResp"
      },
      "GetAccountListByMybankBalanceResp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MybankBalanceAccountList"
            },
            "x-go-json": "data",
            "x-go-name": "Data"
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "偏移量",
            "x-go-json": "offset",
            "x-go-name": "Offset"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "每页数量",
            "x-go-json": "size",
            "x-go-name": "Size"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "总数",
            "x-go-json": "total",
            "x-go-name": "Total"
          }
        },
        "required": [
          "data",
          "offset",
          "size",
          "total"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.GetAccountListByMybankBalanceResp"
      },
      "GetAccountOpenedChannelListResp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseSrvChannelType"
            },
            "x-go-json": "data",
            "x-go-name": "Data"
          }
        },
        "required": [
          "data"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.GetAccountOpenedChannelListResp"
      },
      "GetAccountResp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAccount"
          },
          {
            "type": "object",
            "properties": {
              "accountType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvAccountType"
                  },
                  {}
                ],
                "x-go-json": "accountType",
                "x-go-name": "AccountType"
              }
            },
            "required": [
              "accountType"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.GetAccountResp"
      },
      "GetApplyDetailRsp": {
        "type": "object",
        "properties": {
          "allInPayApply": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AllinpayApplyDetail"
              },
              {
                "description": "通联开户信息"
              }
            ],
            "x-go-json": "allInPayApply",
            "x-go-name": "AllInPayApply"
          },
          "atts": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplyAttList"
              },
              {
                "description": "附件"
              }
            ],
            "x-go-json": "atts",
            "x-go-name": "Atts"
          },
          "base": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Apply"
              },
              {
                "description": "基本信息"
              }
            ],
            "x-go-json": "base",
            "x-go-name": "Base"
          },
          "cpcnApply": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CpcnApplyDetail"
              },
              {
                "description": "中金开户信息"
              }
            ],
            "x-go-json": "cpcnApply",
            "x-go-name": "CpcnApply"
          },
          "logs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplyLogList"
              },
              {
                "description": "日志"
              }
            ],
            "x-go-json": "logs",
            "x-go-name": "Logs"
          },
          "myBankApply": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplyMyBank"
              },
              {
                "description": "网商开户信息"
              }
            ],
            "x-go-json": "myBankApply",
            "x-go-name": "MyBankApply"
          },
          "vspPayApply": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VspApplyDetail"
              },
              {
                "description": "收银宝开户"
              }
            ],
            "x-go-json": "vspPayApply",
            "x-go-name": "VspPayApply"
          }
        },
        "required": [
          "base",
          "atts",
          "logs",
          "cpcnApply",
          "myBankApply",
          "allInPayApply",
          "vspPayApply"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.GetApplyDetailRsp"
      },
      "GetApplyQueryRsp": {
        "type": "object",
        "properties": {
          "allInPayApply": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AllinpayApplyDetail"
              },
              {
                "description": "通联开户信息"
              }
            ],
            "x-go-json": "allInPayApply",
            "x-go-name": "AllInPayApply"
          },
          "atts": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplyAttList"
              },
              {
                "description": "附件"
              }
            ],
            "x-go-json": "atts",
            "x-go-name": "Atts"
          },
          "base": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Apply"
              },
              {
                "description": "基本信息"
              }
            ],
            "x-go-json": "base",
            "x-go-name": "Base"
          },
          "cpcnApply": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CpcnApplyDetail"
              },
              {
                "description": "中金开户信息"
              }
            ],
            "x-go-json": "cpcnApply",
            "x-go-name": "CpcnApply"
          },
          "isMain": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bool"
              },
              {
                "description": "是否为主账户的申请单"
              }
            ],
            "x-go-json": "isMain",
            "x-go-name": "IsMain"
          },
          "logs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplyLogList"
              },
              {
                "description": "日志"
              }
            ],
            "x-go-json": "logs",
            "x-go-name": "Logs"
          },
          "myBankApply": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplyMyBank"
              },
              {
                "description": "网商开户信息"
              }
            ],
            "x-go-json": "myBankApply",
            "x-go-name": "MyBankApply"
          },
          "vspPayApply": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VspApplyDetail"
              },
              {
                "description": "收银宝开户信息"
              }
            ],
            "x-go-json": "vspPayApply",
            "x-go-name": "VspPayApply"
          }
        },
        "required": [
          "isMain",
          "base",
          "atts",
          "logs",
          "cpcnApply",
          "myBankApply",
          "allInPayApply",
          "vspPayApply"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.GetApplyQueryRsp"
      },
      "GetBankListResp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bank"
            },
            "x-go-json": "data",
            "x-go-name": "Data"
          }
        },
        "required": [
          "data"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/tools.GetBankListResp"
      },
      "GetBindCardInfoResp": {
        "type": "object",
        "properties": {
          "accountID": {
            "type": "string",
            "format": "uint64",
            "description": "账户ID",
            "x-go-json": "accountID,string",
            "x-go-name": "AccountID"
          },
          "bankAddress": {
            "type": "string",
            "description": "开户行地址",
            "x-go-json": "bankAddress",
            "x-go-name": "BankAddress"
          },
          "bankCity": {
            "type": "string",
            "description": "开户行城市",
            "x-go-json": "bankCity",
            "x-go-name": "BankCity"
          },
          "bankCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvBankType"
              },
              {
                "description": "开户行"
              }
            ],
            "x-go-json": "bankCode",
            "x-go-name": "BankCode"
          },
          "bankName": {
            "type": "string",
            "description": "开户行名称",
            "x-go-json": "bankName",
            "x-go-name": "BankName"
          },
          "bankProvince": {
            "type": "string",
            "description": "开户行分支行省份",
            "x-go-json": "bankProvince",
            "x-go-name": "BankProvince"
          },
          "bindID": {
            "type": "string",
            "format": "uint64",
            "description": "绑定序号",
            "x-go-json": "bindID,string",
            "x-go-name": "BindID"
          },
          "bindStatus": {
            "type": "string",
            "description": "中金账户模式,绑定状态",
            "x-go-json": "bindStatus",
            "x-go-name": "BindStatus"
          },
          "bindTxSn": {
            "type": "string",
            "description": "中金账户模式，绑定流水号",
            "x-go-json": "bindTxSn",
            "x-go-name": "BindTxSn"
          },
          "branchName": {
            "type": "string",
            "description": "开户分支行名称",
            "x-go-json": "branchName",
            "x-go-name": "BranchName"
          },
          "cardAccountType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvCardAccountType"
              },
              {
                "description": "绑定账户类型"
              }
            ],
            "x-go-json": "cardAccountType",
            "x-go-name": "CardAccountType"
          },
          "cardName": {
            "type": "string",
            "description": "户名",
            "x-go-json": "cardName",
            "x-go-name": "CardName"
          },
          "cardNo": {
            "type": "string",
            "description": "绑定的银行卡卡号",
            "x-go-json": "cardNo",
            "x-go-name": "CardNo"
          },
          "cnapsCode": {
            "type": "string",
            "description": "人民银行联行号",
            "x-go-json": "cnapsCode",
            "x-go-name": "CNAPSCode"
          },
          "createTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MySQLTimestamp"
              },
              {
                "description": "创建时间"
              }
            ],
            "x-go-json": "createTime",
            "x-go-name": "CreateTime"
          },
          "parentBankCode": {
            "type": "string",
            "x-go-json": "parentBankCode",
            "x-go-name": "ParentBankCode"
          },
          "parentBankName": {
            "type": "string",
            "description": "开户银行名称",
            "x-go-json": "parentBankName",
            "x-go-name": "ParentBankName"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bool"
              },
              {
                "description": "绑定状态"
              }
            ],
            "x-go-json": "status",
            "x-go-name": "Status"
          },
          "updateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MySQLTimestamp"
              },
              {
                "description": "更新时间"
              }
            ],
            "x-go-json": "updateTime",
            "x-go-name": "UpdateTime"
          }
        },
        "required": [
          "accountID",
          "bankAddress",
          "bankCity",
          "bankCode",
          "bankName",
          "branchName",
          "bankProvince",
          "bindID",
          "bindStatus",
          "bindTxSn",
          "cardAccountType",
          "cardName",
          "cardNo",
          "status",
          "createTime",
          "updateTime",
          "parentBankName",
          "cnapsCode",
          "parentBankCode"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.GetBindCardInfoResp"
      },
      "GetBindPhoneRsp": {
        "type": "object",
        "properties": {
          "mobile": {
            "type": "string",
            "description": "账户绑定的手机号",
            "x-go-json": "mobile",
            "x-go-name": "Mobile"
          }
        },
        "required": [
          "mobile"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.GetBindPhoneRsp"
      },
      "GetCardBinResp": {
        "type": "object",
        "properties": {
          "bankCode": {
            "type": "string",
            "description": "发卡行机构代码",
            "x-go-json": "bankCode",
            "x-go-name": "BankCode"
          },
          "bankName": {
            "type": "string",
            "description": "发卡行名称",
            "x-go-json": "bankName",
            "x-go-name": "BankName"
          },
          "cardName": {
            "type": "string",
            "description": "卡名",
            "x-go-json": "cardName",
            "x-go-name": "CardName"
          },
          "cardType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CardBinCardType"
              },
              {
                "description": "卡种"
              }
            ],
            "x-go-json": "cardType",
            "x-go-name": "CardType"
          }
        },
        "required": [
          "bankName",
          "bankCode",
          "cardName",
          "cardType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/tools.GetCardBinResp"
      },
      "GetCategoryListResp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Category"
            },
            "x-go-json": "data",
            "x-go-name": "Data"
          }
        },
        "required": [
          "data"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/tools.GetCategoryListResp"
      },
      "GetCpcnAreqByProvinceResp": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseCpcnAreaList"
              },
              {
                "description": "数据"
              }
            ],
            "x-go-json": "data",
            "x-go-name": "Data"
          }
        },
        "required": [
          "data"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.GetCpcnAreqByProvinceResp"
      },
      "GetCpcnAreqResp": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseCpcnAreaList"
              },
              {
                "description": "数据"
              }
            ],
            "x-go-json": "data",
            "x-go-name": "Data"
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "偏移量",
            "x-go-json": "offset",
            "x-go-name": "Offset"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "每页数量",
            "x-go-json": "size",
            "x-go-name": "Size"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "总数",
            "x-go-json": "total",
            "x-go-name": "Total"
          }
        },
        "required": [
          "data",
          "offset",
          "size",
          "total"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.GetCpcnAreqResp"
      },
      "GetHandingFeeBalanceResp": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "integer",
            "format": "int64",
            "description": "手续费余额",
            "x-go-json": "balance",
            "x-go-name": "Balance"
          },
          "mybankBalance": {
            "type": "integer",
            "format": "int64",
            "description": "网商银行来账识别剩余交易次数",
            "x-go-json": "mybankBalance",
            "x-go-name": "MybankBalance"
          }
        },
        "required": [
          "balance",
          "mybankBalance"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/handing_fee.GetHandingFeeBalanceResp"
      },
      "GetHandingFeeDetailByHFIDResp": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseHandingFeeList"
              },
              {
                "description": "数据"
              }
            ],
            "x-go-json": "data",
            "x-go-name": "Data"
          }
        },
        "required": [
          "data"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.GetHandingFeeDetailByHFIDResp"
      },
      "GetHandingFeeListResp": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseHandingFeeList"
              },
              {
                "description": "数据"
              }
            ],
            "x-go-json": "data",
            "x-go-name": "Data"
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "偏移量",
            "x-go-json": "offset",
            "x-go-name": "Offset"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "每页数量",
            "x-go-json": "size",
            "x-go-name": "Size"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "总数",
            "x-go-json": "total",
            "x-go-name": "Total"
          },
          "totalConsumeAmount": {
            "type": "integer",
            "format": "int64",
            "description": "总消费",
            "x-go-json": "totalConsumeAmount",
            "x-go-name": "TotalConsumeAmount"
          },
          "totalRechargeAmount": {
            "type": "integer",
            "format": "int64",
            "description": "总充值",
            "x-go-json": "totalRechargeAmount",
            "x-go-name": "TotalRechargeAmount"
          }
        },
        "required": [
          "data",
          "offset",
          "size",
          "total",
          "totalConsumeAmount",
          "totalRechargeAmount"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.GetHandingFeeListResp"
      },
      "GetHandingFeeListWithAccountResp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseHandingFeeLog"
            },
            "description": "数据",
            "x-go-json": "data",
            "x-go-name": "Data"
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "偏移量",
            "x-go-json": "offset",
            "x-go-name": "Offset"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "每页数量",
            "x-go-json": "size",
            "x-go-name": "Size"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "总数",
            "x-go-json": "total",
            "x-go-name": "Total"
          }
        },
        "required": [
          "data",
          "offset",
          "size",
          "total"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.GetHandingFeeListWithAccountResp"
      },
      "GetIndustryBelongTypeResp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndustryBelongType"
            },
            "x-go-json": "data",
            "x-go-name": "Data"
          }
        },
        "required": [
          "data"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/tools.GetIndustryBelongTypeResp"
      },
      "GetIndustryResp": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseIndustryList"
              },
              {
                "description": "数据"
              }
            ],
            "x-go-json": "data",
            "x-go-name": "Data"
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "偏移量",
            "x-go-json": "offset",
            "x-go-name": "Offset"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "每页数量",
            "x-go-json": "size",
            "x-go-name": "Size"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "总数",
            "x-go-json": "total",
            "x-go-name": "Total"
          }
        },
        "required": [
          "data",
          "offset",
          "size",
          "total"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.GetIndustryResp"
      },
      "GetInsOutCodeResp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstCodeResp"
            },
            "description": "数据集",
            "x-go-json": "data",
            "x-go-name": "Data"
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "偏移量",
            "x-go-json": "offset",
            "x-go-name": "Offset"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "每页数量",
            "x-go-json": "size",
            "x-go-name": "Size"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "总数",
            "x-go-json": "total",
            "x-go-name": "Total"
          }
        },
        "required": [
          "offset",
          "size",
          "total",
          "data"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/tools.GetInsOutCodeResp"
      },
      "GetLastApplyByAccountIdRsp": {
        "type": "object",
        "properties": {
          "applyID": {
            "type": "string",
            "format": "uint64",
            "description": "申请单id",
            "x-go-json": "applyID,string",
            "x-go-name": "ApplyID"
          }
        },
        "required": [
          "applyID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.GetLastApplyByAccountIdRsp"
      },
      "GetMccTypeListResp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MccType"
            },
            "x-go-json": "data",
            "x-go-name": "Data"
          }
        },
        "required": [
          "data"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/mybank.GetMccTypeListResp"
      },
      "GetMybankAreqResp": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseAreaList"
              },
              {
                "description": "数据"
              }
            ],
            "x-go-json": "data",
            "x-go-name": "Data"
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "偏移量",
            "x-go-json": "offset",
            "x-go-name": "Offset"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "每页数量",
            "x-go-json": "size",
            "x-go-name": "Size"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "总数",
            "x-go-json": "total",
            "x-go-name": "Total"
          }
        },
        "required": [
          "data",
          "offset",
          "size",
          "total"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.GetMybankAreqResp"
      },
      "GetMybankBalanceListResp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseMybankTransBalance"
            },
            "description": "数据",
            "x-go-json": "data",
            "x-go-name": "Data"
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "偏移量",
            "x-go-json": "offset",
            "x-go-name": "Offset"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "每页数量",
            "x-go-json": "size",
            "x-go-name": "Size"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "总数",
            "x-go-json": "total",
            "x-go-name": "Total"
          }
        },
        "required": [
          "data",
          "offset",
          "size",
          "total"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.GetMybankBalanceListResp"
      },
      "GetProductDetailRsp": {
        "type": "object",
        "properties": {
          "Base": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Product"
              },
              {}
            ],
            "x-go-name": "Base"
          },
          "Logs": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProductLogList"
              },
              {}
            ],
            "x-go-name": "Logs"
          }
        },
        "required": [
          "Base",
          "Logs"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.GetProductDetailRsp"
      },
      "GetProductListRsp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Product"
            },
            "description": "数据",
            "x-go-json": "data",
            "x-go-name": "Data"
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "偏移量",
            "x-go-json": "offset",
            "x-go-name": "Offset"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "每页数量",
            "x-go-json": "size",
            "x-go-name": "Size"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "总数",
            "x-go-json": "total",
            "x-go-name": "Total"
          }
        },
        "required": [
          "data",
          "offset",
          "size",
          "total"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.GetProductListRsp"
      },
      "GetProductRsp": {
        "type": "object",
        "properties": {
          "allowOpen": {
            "type": "string",
            "description": "允许开户的类型",
            "x-go-json": "allowOpen",
            "x-go-name": "AllowOpen"
          },
          "provider": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvProviderType"
              },
              {
                "description": "服务提供商"
              }
            ],
            "x-go-json": "provider",
            "x-go-name": "Provider"
          },
          "workFlow": {
            "allOf": [
              {
                "$ref": "#/components/schemas/WorkFlow"
              },
              {
                "description": "该产品开户流程控制"
              }
            ],
            "x-go-json": "workFlow",
            "x-go-name": "WorkFlow"
          }
        },
        "required": [
          "allowOpen",
          "provider",
          "workFlow"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.GetProductRsp"
      },
      "GetProvinceListResp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Province"
            },
            "x-go-json": "data",
            "x-go-name": "Data"
          }
        },
        "required": [
          "data"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/tools.GetProvinceListResp"
      },
      "GetQuickPayBindCardListByUIDAndReceiptUIDResp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BindCardList"
            },
            "x-go-json": "data",
            "x-go-name": "Data"
          }
        },
        "required": [
          "data"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/quick.GetQuickPayBindCardListByUIDAndReceiptUIDResp"
      },
      "GetSettTaskReqResponse": {
        "type": "object",
        "properties": {
          "Body": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SettTask"
              },
              {}
            ],
            "x-go-name": "Body"
          },
          "Meta": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Metadata"
              },
              {}
            ],
            "x-go-name": "Meta"
          }
        },
        "required": [
          "Meta",
          "Body"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.GetSettTaskReqResponse"
      },
      "GetSettlementBalanceRsp": {
        "type": "object",
        "properties": {
          "bodyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountBodyType"
              },
              {
                "description": "账号主体类型"
              }
            ],
            "x-go-json": "bodyType",
            "x-go-name": "BodyType"
          },
          "mode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountMode"
              },
              {
                "description": "账户使用模式"
              }
            ],
            "x-go-json": "mode",
            "x-go-name": "Mode"
          },
          "settlementAmount": {
            "type": "integer",
            "format": "int64",
            "description": "可结算金额",
            "x-go-json": "settlementAmount",
            "x-go-name": "SettlementAmount"
          },
          "subAccountID": {
            "type": "string",
            "format": "uint64",
            "description": "账户ID",
            "x-go-json": "subAccountID,string",
            "x-go-name": "SubAccountID"
          },
          "subAccountName": {
            "type": "string",
            "description": "账户名称",
            "x-go-json": "subAccountName",
            "x-go-name": "SubAccountName"
          },
          "subUID": {
            "type": "string",
            "description": "账户UID",
            "x-go-json": "subUID",
            "x-go-name": "SubReceiptUID"
          },
          "userType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountUserType"
              },
              {
                "description": "账户类型"
              }
            ],
            "x-go-json": "userType",
            "x-go-name": "UserType"
          }
        },
        "required": [
          "subUID",
          "subAccountID",
          "subAccountName",
          "settlementAmount",
          "mode",
          "bodyType",
          "userType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/setllement.GetSettlementBalanceRsp"
      },
      "GetSettlementListResp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SettlementData"
            },
            "description": "数据集",
            "x-go-json": "data",
            "x-go-name": "Data"
          },
          "handingFeeAmount": {
            "type": "integer",
            "format": "int64",
            "description": "手续费金额",
            "x-go-json": "handingFeeAmount",
            "x-go-name": "HandingFeeAmount"
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "偏移量",
            "x-go-json": "offset",
            "x-go-name": "Offset"
          },
          "settlementAmount": {
            "type": "integer",
            "format": "int64",
            "description": "结算金额",
            "x-go-json": "settlementAmount",
            "x-go-name": "SettlementAmount"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "每页数量",
            "x-go-json": "size",
            "x-go-name": "Size"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "总数",
            "x-go-json": "total",
            "x-go-name": "Total"
          }
        },
        "required": [
          "data",
          "handingFeeAmount",
          "offset",
          "settlementAmount",
          "size",
          "total"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.GetSettlementListResp"
      },
      "GetSplitBillListResp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SplitBill"
            },
            "description": "数据",
            "x-go-json": "data",
            "x-go-name": "Data"
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "偏移量",
            "x-go-json": "offset",
            "x-go-name": "Offset"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "每页数量",
            "x-go-json": "size",
            "x-go-name": "Size"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "总数",
            "x-go-json": "total",
            "x-go-name": "Total"
          }
        },
        "required": [
          "data",
          "offset",
          "size",
          "total"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.GetSplitBillListResp"
      },
      "GetSubAccountListData": {
        "type": "object",
        "properties": {
          "accountID": {
            "type": "string",
            "format": "uint64",
            "description": "账户ID",
            "x-go-json": "accountID,string",
            "x-go-name": "AccountID"
          },
          "accountName": {
            "type": "string",
            "description": "账户名称",
            "x-go-json": "accountName",
            "x-go-name": "AccountName"
          },
          "bodyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountBodyType"
              },
              {
                "description": "账号主体类型"
              }
            ],
            "x-go-json": "bodyType",
            "x-go-name": "BodyType"
          },
          "contactMobile": {
            "type": "string",
            "description": "联系人手机号",
            "x-go-json": "contactMobile",
            "x-go-name": "ContactMobile"
          },
          "contactName": {
            "type": "string",
            "description": "联系人",
            "x-go-json": "contactName",
            "x-go-name": "ContactName"
          },
          "mode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountMode"
              },
              {
                "description": "账户使用模式"
              }
            ],
            "x-go-json": "mode",
            "x-go-name": "Mode"
          },
          "splitRate": {
            "type": "number",
            "format": "double",
            "description": "分账比例",
            "x-go-json": "splitRate",
            "x-go-name": "SplitRate"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountStatus"
              },
              {
                "description": "账户状态"
              }
            ],
            "x-go-json": "status",
            "x-go-name": "Status"
          },
          "uid": {
            "type": "string",
            "description": "账户UID",
            "x-go-json": "uid",
            "x-go-name": "UID"
          },
          "userType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountUserType"
              },
              {
                "description": "账户类型"
              }
            ],
            "x-go-json": "userType",
            "x-go-name": "UserType"
          }
        },
        "required": [
          "uid",
          "accountID",
          "accountName",
          "contactName",
          "contactMobile",
          "splitRate",
          "status",
          "mode",
          "bodyType",
          "userType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/account.GetSubAccountListData"
      },
      "GetSubAccountListResp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetSubAccountListData"
            },
            "description": "数据集",
            "x-go-json": "data",
            "x-go-name": "Data"
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "偏移量",
            "x-go-json": "offset",
            "x-go-name": "Offset"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "每页数量",
            "x-go-json": "size",
            "x-go-name": "Size"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "总数",
            "x-go-json": "total",
            "x-go-name": "Total"
          }
        },
        "required": [
          "offset",
          "size",
          "total",
          "data"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/account.GetSubAccountListResp"
      },
      "GetSubAccountResp": {
        "type": "object",
        "properties": {
          "accountName": {
            "type": "string",
            "description": "账户名称",
            "x-go-json": "accountName",
            "x-go-name": "AccountName"
          },
          "contactMobile": {
            "type": "string",
            "description": "联系人手机号",
            "x-go-json": "contactMobile",
            "x-go-name": "ContactMobile"
          },
          "contactName": {
            "type": "string",
            "description": "联系人姓名",
            "x-go-json": "contactName",
            "x-go-name": "ContactName"
          },
          "spiltRate": {
            "type": "number",
            "format": "double",
            "description": "分账比例",
            "x-go-json": "spiltRate",
            "x-go-name": "SpiltRate"
          },
          "splitArea": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "分账地区配置",
            "x-go-json": "splitArea",
            "x-go-name": "SplitArea"
          }
        },
        "required": [
          "accountName",
          "contactName",
          "contactMobile",
          "spiltRate",
          "splitArea"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/account.GetSubAccountResp"
      },
      "GetSubAccountSettlementListData": {
        "type": "object",
        "properties": {
          "accountID": {
            "type": "string",
            "format": "uint64",
            "description": "账户ID",
            "x-go-json": "accountID,string",
            "x-go-name": "AccountID"
          },
          "accountName": {
            "type": "string",
            "description": "账户名称",
            "x-go-json": "accountName",
            "x-go-name": "AccountName"
          },
          "bodyType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountBodyType"
              },
              {
                "description": "账号主体类型"
              }
            ],
            "x-go-json": "bodyType",
            "x-go-name": "BodyType"
          },
          "contactMobile": {
            "type": "string",
            "description": "联系人手机号",
            "x-go-json": "contactMobile",
            "x-go-name": "ContactMobile"
          },
          "contactName": {
            "type": "string",
            "description": "联系人",
            "x-go-json": "contactName",
            "x-go-name": "ContactName"
          },
          "handingFee": {
            "type": "integer",
            "format": "int64",
            "description": "手续费",
            "x-go-json": "handingFee",
            "x-go-name": "HandingFee"
          },
          "isSettlementedInToday": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bool"
              },
              {
                "description": "当日是否已经发起过结算"
              }
            ],
            "x-go-json": "isSettlementedInToday",
            "x-go-name": "IsSettlementedInToday"
          },
          "mode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountMode"
              },
              {
                "description": "账户使用模式"
              }
            ],
            "x-go-json": "mode",
            "x-go-name": "Mode"
          },
          "settlementAmount": {
            "type": "integer",
            "format": "int64",
            "description": "待结算金额",
            "x-go-json": "settlementAmount",
            "x-go-name": "SettlementAmount"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountStatus"
              },
              {
                "description": "账户状态"
              }
            ],
            "x-go-json": "status",
            "x-go-name": "Status"
          },
          "uid": {
            "type": "string",
            "description": "账户UID",
            "x-go-json": "uid",
            "x-go-name": "UID"
          },
          "userType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountUserType"
              },
              {
                "description": "账户类型"
              }
            ],
            "x-go-json": "userType",
            "x-go-name": "UserType"
          }
        },
        "required": [
          "uid",
          "accountID",
          "accountName",
          "contactName",
          "contactMobile",
          "settlementAmount",
          "handingFee",
          "status",
          "isSettlementedInToday",
          "mode",
          "bodyType",
          "userType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/account.GetSubAccountSettlementListData"
      },
      "GetSubAccountSettlementListResp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetSubAccountSettlementListData"
            },
            "description": "数据集",
            "x-go-json": "data",
            "x-go-name": "Data"
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "偏移量",
            "x-go-json": "offset",
            "x-go-name": "Offset"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "每页数量",
            "x-go-json": "size",
            "x-go-name": "Size"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "总数",
            "x-go-json": "total",
            "x-go-name": "Total"
          }
        },
        "required": [
          "offset",
          "size",
          "total",
          "data"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/account.GetSubAccountSettlementListResp"
      },
      "GetSubmitIndustryListResp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Industry"
            },
            "x-go-json": "data",
            "x-go-name": "Data"
          }
        },
        "required": [
          "data"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/tools.GetSubmitIndustryListResp"
      },
      "GetVSPMccResp": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseVSPMccIDList"
              },
              {
                "description": "数据"
              }
            ],
            "x-go-json": "data",
            "x-go-name": "Data"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "总数",
            "x-go-json": "total",
            "x-go-name": "Total"
          }
        },
        "required": [
          "data",
          "total"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.GetVSPMccResp"
      },
      "GetVspAreqResp": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseCloudAreaCodeList"
              },
              {
                "description": "数据"
              }
            ],
            "x-go-json": "data",
            "x-go-name": "Data"
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "偏移量",
            "x-go-json": "offset",
            "x-go-name": "Offset"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "每页数量",
            "x-go-json": "size",
            "x-go-name": "Size"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "总数",
            "x-go-json": "total",
            "x-go-name": "Total"
          }
        },
        "required": [
          "offset",
          "size",
          "total",
          "data"
        ],
        "description": "返回",
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/tools.GetVspAreqResp"
      },
      "GetVspBankBranchResp": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseVSPBankBranchList"
              },
              {
                "description": "数据"
              }
            ],
            "x-go-json": "data",
            "x-go-name": "Data"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "总数",
            "x-go-json": "total",
            "x-go-name": "Total"
          }
        },
        "required": [
          "total",
          "data"
        ],
        "description": "返回",
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/tools.GetVspBankBranchResp"
      },
      "GetWhitelistRsp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseAccountWhitelist"
            },
            "x-go-json": "data",
            "x-go-name": "Data"
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "偏移量",
            "x-go-json": "offset",
            "x-go-name": "Offset"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "每页数量",
            "x-go-json": "size",
            "x-go-name": "Size"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "总数",
            "x-go-json": "total",
            "x-go-name": "Total"
          }
        },
        "required": [
          "data",
          "offset",
          "size",
          "total"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.GetWhitelistRsp"
      },
      "H5PayTransBody": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PayTransBody"
          },
          {
            "type": "object",
            "properties": {
              "transID": {
                "type": "string",
                "format": "uint64",
                "minimum": 1,
                "description": "交易单号",
                "x-go-json": "transID,string",
                "x-go-name": "TransID",
                "x-go-validate": "@uint64[1,]"
              }
            },
            "required": [
              "transID"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/pay.H5PayTransBody"
      },
      "IdentificationType": {
        "type": "string",
        "enum": [
          "FOREIGN_ID",
          "HOME_RETURN_PERMIT",
          "HOME_RETURN_TAIWAN",
          "HOUSEHOLD_REGISTER",
          "ID",
          "MILITARY_ID",
          "OTHER",
          "PASSPORT",
          "POLICE_ID",
          "PROVISIONAL_ID",
          "SOLDIER_ID"
        ],
        "x-enum-labels": [
          "外国人居留证",
          "港澳居民来往内地通行证",
          "台湾同胞来往内地通行证",
          "户口簿",
          "身份证",
          "军官证",
          "其他证件",
          "护照",
          "警官证",
          "临时身份证",
          "士兵证"
        ],
        "x-enum-vals": [
          9,
          6,
          7,
          2,
          1,
          4,
          11,
          3,
          10,
          8,
          5
        ],
        "x-enum-values": [
          "FOREIGN_ID",
          "HOME_RETURN_PERMIT",
          "HOME_RETURN_TAIWAN",
          "HOUSEHOLD_REGISTER",
          "ID",
          "MILITARY_ID",
          "OTHER",
          "PASSPORT",
          "POLICE_ID",
          "PROVISIONAL_ID",
          "SOLDIER_ID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/constants/types.IdentificationType"
      },
      "ImageInfo": {
        "type": "object",
        "properties": {
          "imageContent": {
            "type": "string",
            "description": "影印件,图片JPG格式，大小不超过500KB，图片二进制数据转BASE64编码",
            "x-go-json": "imageContent",
            "x-go-name": "ImageContent"
          },
          "imageType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayImageType"
              },
              {
                "description": "影印件类别: 10=身份证人像面 11=身份证国徽面 20=统一社会信用代码证 30=个体工商营业执照"
              }
            ],
            "x-go-json": "imageType",
            "x-go-name": "ImageType"
          }
        },
        "required": [
          "imageType",
          "imageContent"
        ],
        "description": "影印件明细，出现次数大于等于1次，单次最 多上送 4 条明细",
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.ImageInfo"
      },
      "Individual": {
        "type": "object",
        "properties": {
          "credentialAddress": {
            "type": "string",
            "description": "身份证地址,注:亿联银行存管必填",
            "x-go-json": "credentialAddress",
            "x-go-name": "CredentialAddress",
            "x-go-validate": "@char[0,256]"
          },
          "credentialNumber": {
            "type": "string",
            "description": "证件号码",
            "x-go-json": "credentialNumber",
            "x-go-name": "CredentialNumber",
            "x-go-validate": "@char[0,18]"
          },
          "credentialType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayCredentialType"
              },
              {
                "description": "证件类型: 0-身份证"
              }
            ],
            "x-go-json": "credentialType",
            "x-go-name": "CredentialType"
          },
          "expiryDate": {
            "type": "string",
            "description": "证件到期日,注:当证件长期有效时为 99991231",
            "x-go-json": "expiryDate",
            "x-go-name": "ExpiryDate",
            "x-go-validate": "@char[0,8]"
          },
          "indAddress": {
            "type": "string",
            "description": "联系地址",
            "x-go-json": "indAddress",
            "x-go-name": "IndAddress",
            "x-go-validate": "@char[0,256]"
          },
          "indEmail": {
            "type": "string",
            "description": "个人邮箱",
            "x-go-json": "indEmail",
            "x-go-name": "IndEmail",
            "x-go-validate": "@char[0,64]"
          },
          "issDate": {
            "type": "string",
            "description": "证件发证日",
            "x-go-json": "issDate",
            "x-go-name": "IssDate",
            "x-go-validate": "@char[0,8]"
          },
          "occupation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayOccupationType"
              },
              {
                "description": "职业: 1A=各类专业，技术人员 1B=国家机关，党群组织，企事业单位的负责人 1C=办事人员和有关人员 1D=商业工作人员 1E=服务性工作人员 1F=农林牧渔劳动者1G=生产工作， 运输工作和部分体力劳动者 1H=不便分类的其他劳动者, 注:亿联银行存管必填;"
              }
            ],
            "x-go-json": "occupation",
            "x-go-name": "Occupation"
          },
          "phoneNumber": {
            "type": "string",
            "description": "开户手机号码",
            "x-go-json": "phoneNumber",
            "x-go-name": "PhoneNumber",
            "x-go-validate": "@char[0,16]"
          },
          "userName": {
            "type": "string",
            "description": "用户姓名",
            "x-go-json": "userName",
            "x-go-name": "UserName",
            "x-go-validate": "@char[0,128]"
          }
        },
        "description": "个人开户",
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.Individual"
      },
      "IndividualInfo": {
        "type": "object",
        "properties": {
          "credentialAddress": {
            "type": "string",
            "description": "身份证地址,注:亿联银行存管必填",
            "x-go-json": "credentialAddress,omitempty",
            "x-go-name": "CredentialAddress",
            "x-go-validate": "@char[0,256]"
          },
          "credentialNumber": {
            "type": "string",
            "description": "证件号码",
            "x-go-json": "credentialNumber,omitempty",
            "x-go-name": "CredentialNumber",
            "x-go-validate": "@char[0,18]"
          },
          "credentialType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvApplyCredentialType"
              },
              {
                "description": "证件类型: 1-身份证, 2-外国护照, 5-港澳居民来往内地通行证, 6-台湾居民来往大陆通行证",
                "default": "1"
              }
            ],
            "x-go-json": "credentialType,omitempty",
            "x-go-name": "CredentialType"
          },
          "expiryDate": {
            "type": "string",
            "description": "证件到期日, 注:当证件长期有效时为 99991231;亿联银行存管必填;",
            "x-go-json": "expiryDate,omitempty",
            "x-go-name": "ExpiryDate",
            "x-go-validate": "@char[0,8]"
          },
          "indAddress": {
            "type": "string",
            "description": "联系地址,注:常驻信息包括 (国家、省、市、 县、详细地址 )",
            "x-go-json": "indAddress,omitempty",
            "x-go-name": "IndAddress",
            "x-go-validate": "@char[0,256]"
          },
          "indEmail": {
            "type": "string",
            "description": "个人邮箱",
            "x-go-json": "indEmail,omitempty",
            "x-go-name": "IndEmail",
            "x-go-validate": "@char[0,64]"
          },
          "issDate": {
            "type": "string",
            "description": "证件发证日, 注:格式: yyyyMMdd;亿联银行存管必填",
            "x-go-json": "issDate,omitempty",
            "x-go-name": "IssDate",
            "x-go-validate": "@char[0,8]"
          },
          "phoneNumber": {
            "type": "string",
            "description": "开户手机号",
            "x-go-json": "phoneNumber,omitempty",
            "x-go-name": "PhoneNumber",
            "x-go-validate": "@char[0,16]"
          },
          "userName": {
            "type": "string",
            "description": "用户姓名",
            "x-go-json": "userName,omitempty",
            "x-go-name": "UserName",
            "x-go-validate": "@char[0,128]"
          }
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.IndividualInfo"
      },
      "Industry": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "行业编码",
            "x-go-json": "id",
            "x-go-name": "ID"
          },
          "name": {
            "type": "string",
            "description": "行业名称",
            "x-go-json": "name",
            "x-go-name": "Name"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/tools.Industry"
      },
      "IndustryBelongType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "行业编码",
            "x-go-json": "id",
            "x-go-name": "ID"
          },
          "name": {
            "type": "string",
            "description": "行业名称",
            "x-go-json": "name",
            "x-go-name": "Name"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/tools.IndustryBelongType"
      },
      "InstCodeResp": {
        "type": "object",
        "properties": {
          "agentBankCode": {
            "type": "string",
            "description": "法人行号",
            "x-go-json": "agentBankCode",
            "x-go-name": "AgentBankCode"
          },
          "bankName": {
            "type": "string",
            "description": "银行名称",
            "x-go-json": "bankName",
            "x-go-name": "BankName"
          },
          "categoryCode": {
            "type": "string",
            "description": "行别号",
            "x-go-json": "categoryCode",
            "x-go-name": "CategoryCode"
          },
          "ccpcCode": {
            "type": "string",
            "description": "CCPC节点",
            "x-go-json": "ccpcCode",
            "x-go-name": "CCPCCode"
          },
          "cityCode": {
            "type": "string",
            "description": "城市code",
            "x-go-json": "cityCode",
            "x-go-name": "CityCode"
          },
          "instInnerCode": {
            "type": "string",
            "description": "机构内标",
            "x-go-json": "instInnerCode",
            "x-go-name": "InstInnerCode"
          },
          "instOutCode": {
            "type": "string",
            "description": "联行号",
            "x-go-json": "instOutCode",
            "x-go-name": "InstOutCode"
          },
          "instOutCodeType": {
            "type": "string",
            "description": "外标类型",
            "x-go-json": "instOutCodeType",
            "x-go-name": "InstOutCodeType"
          },
          "systemSign": {
            "type": "string",
            "description": "系统标识",
            "x-go-json": "systemSign",
            "x-go-name": "SystemSign"
          }
        },
        "required": [
          "instInnerCode",
          "instOutCode",
          "instOutCodeType",
          "agentBankCode",
          "bankName",
          "ccpcCode",
          "cityCode",
          "systemSign",
          "categoryCode"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/tools.InstCodeResp"
      },
      "IsSubAccountRsp": {
        "type": "object",
        "properties": {
          "isSubAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bool"
              },
              {}
            ],
            "x-go-json": "isSubAccount",
            "x-go-name": "IsSubAccount"
          }
        },
        "required": [
          "isSubAccount"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/account.IsSubAccountRsp"
      },
      "Item": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int64",
            "description": "发生额,单位分",
            "x-go-json": "amount",
            "x-go-name": "Amount"
          },
          "balance": {
            "type": "integer",
            "format": "int64",
            "description": "期末可用余额",
            "x-go-json": "balance",
            "x-go-name": "Balance"
          },
          "frozen": {
            "type": "integer",
            "format": "int64",
            "description": "冻结余额",
            "x-go-json": "frozen",
            "x-go-name": "Frozen"
          },
          "operation": {
            "type": "string",
            "description": "收支标识: 10=收 20=支 30=冻结 40=冲正 50=在途结转 60=解冻",
            "x-go-json": "operation",
            "x-go-name": "Operation"
          },
          "receivable": {
            "type": "integer",
            "format": "int64",
            "description": "期末在途余额",
            "x-go-json": "receivable",
            "x-go-name": "Receivable"
          },
          "remark": {
            "type": "string",
            "description": "备注",
            "x-go-json": "remark",
            "x-go-name": "Remark"
          },
          "txSn": {
            "type": "string",
            "description": "交易流水号,注:除50-在途结转外均非空",
            "x-go-json": "txSn",
            "x-go-name": "TxSn"
          },
          "txTime": {
            "type": "string",
            "description": "账户交易时间",
            "x-go-json": "txTime",
            "x-go-name": "TxTime"
          },
          "txType": {
            "type": "string",
            "description": "交易类型",
            "x-go-json": "txType",
            "x-go-name": "TxType"
          }
        },
        "required": [
          "amount",
          "balance",
          "frozen",
          "operation",
          "receivable",
          "remark",
          "txSn",
          "txTime",
          "txType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.Item"
      },
      "JSONBytes": {
        "type": "string",
        "format": "json",
        "x-go-named": "go-hummer/hummer/swagger.JSONBytes"
      },
      "MarketOrderBatchGathering": {
        "type": "object",
        "properties": {
          "Amount": {
            "type": "integer",
            "format": "int64",
            "description": "金额，单位:分",
            "x-go-name": "Amount",
            "x-tag-xml": "Amount"
          },
          "BatchNo": {
            "type": "string",
            "description": "批次号",
            "x-go-name": "BatchNo",
            "x-tag-xml": "BatchNo"
          },
          "ItemNo": {
            "type": "string",
            "description": "交易流水号",
            "x-go-name": "ItemNo",
            "x-tag-xml": "ItemNo"
          },
          "Note": {
            "type": "string",
            "description": "备注",
            "x-go-name": "Note",
            "x-tag-xml": "Note"
          },
          "Status": {
            "type": "string",
            "description": "交易状态 30=代扣成功",
            "x-go-name": "Status",
            "x-tag-xml": "Status"
          },
          "TxType": {
            "type": "string",
            "description": "交易类型",
            "x-go-name": "TxType",
            "x-tag-xml": "TxType"
          }
        },
        "required": [
          "Amount",
          "BatchNo",
          "ItemNo",
          "Note",
          "Status",
          "TxType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.MarketOrderBatchGathering"
      },
      "MarketOrderGathering": {
        "type": "object",
        "properties": {
          "Amount": {
            "type": "integer",
            "format": "int64",
            "description": "结算金额",
            "x-go-name": "Amount",
            "x-tag-xml": "Amount"
          },
          "Remark": {
            "type": "string",
            "description": "备注",
            "x-go-name": "Remark",
            "x-tag-xml": "Remark"
          },
          "Status": {
            "type": "string",
            "description": "交易状态 30=代扣成功",
            "x-go-name": "Status",
            "x-tag-xml": "Status"
          },
          "TxSN": {
            "type": "string",
            "description": "交易流水号",
            "x-go-name": "TxSN",
            "x-tag-xml": "TxSN"
          },
          "TxType": {
            "type": "string",
            "description": "交易类型",
            "x-go-name": "TxType",
            "x-tag-xml": "TxType"
          }
        },
        "required": [
          "Amount",
          "Remark",
          "Status",
          "TxSN",
          "TxType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.MarketOrderGathering"
      },
      "MarketOrderGatheringSMS": {
        "type": "object",
        "properties": {
          "Amount": {
            "type": "integer",
            "format": "int64",
            "description": "金额，单位:分",
            "x-go-name": "Amount",
            "x-tag-xml": "Amount"
          },
          "Remark": {
            "type": "string",
            "description": "备注",
            "x-go-name": "Remark",
            "x-tag-xml": "Remark"
          },
          "SMSFlag": {
            "type": "string",
            "description": "短信标识 10=未发送 20=已发送 30=验证成功 50=已超时",
            "x-go-name": "SMSFlag",
            "x-tag-xml": "SMSFlag"
          },
          "Status": {
            "type": "string",
            "description": "交易状态 30=代扣成功",
            "x-go-name": "Status",
            "x-tag-xml": "Status"
          },
          "TxSN": {
            "type": "string",
            "description": "交易流水",
            "x-go-name": "TxSN",
            "x-tag-xml": "TxSN"
          },
          "TxType": {
            "type": "string",
            "description": "交易类型",
            "x-go-name": "TxType",
            "x-tag-xml": "TxType"
          }
        },
        "required": [
          "Amount",
          "Remark",
          "SMSFlag",
          "Status",
          "TxSN",
          "TxType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.MarketOrderGatheringSMS"
      },
      "MarketOrderO2OPayment": {
        "type": "object",
        "properties": {
          "Amount": {
            "type": "integer",
            "format": "int64",
            "description": "金额，单位:分",
            "x-go-name": "Amount",
            "x-tag-xml": "Amount"
          },
          "PayedAmount": {
            "type": "integer",
            "format": "int64",
            "description": "实际支付金额，单位:分",
            "x-go-name": "PayedAmount",
            "x-tag-xml": "PayedAmount"
          },
          "Remark": {
            "type": "string",
            "description": "备注",
            "x-go-name": "Remark",
            "x-tag-xml": "Remark"
          },
          "Status": {
            "type": "string",
            "description": "状态: 10=未支付 20=支付成功 30=部分支付 40=支付失败",
            "x-go-name": "Status",
            "x-tag-xml": "Status"
          },
          "TxSN": {
            "type": "string",
            "description": "交易流水",
            "x-go-name": "TxSN",
            "x-tag-xml": "TxSN"
          },
          "TxType": {
            "type": "string",
            "description": "交易类型",
            "x-go-name": "TxType",
            "x-tag-xml": "TxType"
          }
        },
        "required": [
          "Amount",
          "PayedAmount",
          "Remark",
          "Status",
          "TxSN",
          "TxType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.MarketOrderO2OPayment"
      },
      "MarketOrderScanPayment": {
        "type": "object",
        "properties": {
          "Amount": {
            "type": "integer",
            "format": "int64",
            "description": "金额",
            "x-go-name": "Amount",
            "x-tag-xml": "Amount"
          },
          "PaymentNo": {
            "type": "string",
            "description": "支付交易流水号",
            "x-go-name": "PaymentNo",
            "x-tag-xml": "PaymentNo"
          },
          "Remark": {
            "type": "string",
            "description": "备注",
            "x-go-name": "Remark",
            "x-tag-xml": "Remark"
          },
          "Status": {
            "type": "string",
            "description": "交易状态 20=支付成功",
            "x-go-name": "Status",
            "x-tag-xml": "Status"
          },
          "TxType": {
            "type": "string",
            "description": "交易类型",
            "x-go-name": "TxType",
            "x-tag-xml": "TxType"
          }
        },
        "required": [
          "Amount",
          "PaymentNo",
          "Remark",
          "Status",
          "TxType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.MarketOrderScanPayment"
      },
      "MccType": {
        "type": "object",
        "properties": {
          "mccCode": {
            "type": "string",
            "description": "经营类目编码",
            "x-go-json": "mccCode",
            "x-go-name": "MccCode"
          },
          "mccName": {
            "type": "string",
            "description": "经营类目名称",
            "x-go-json": "mccName",
            "x-go-name": "MccName"
          }
        },
        "required": [
          "mccCode",
          "mccName"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/mybank.MccType"
      },
      "MerchantBalanceQueryResp": {
        "type": "object",
        "properties": {
          "balanceList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BalanceListResp"
            },
            "description": "余额列表",
            "x-go-json": "balanceList",
            "x-go-name": "BalanceList"
          },
          "merchantId": {
            "type": "string",
            "description": "商户号。网商为商户分配的商户号，通过商户入驻结果查询接口获取。",
            "x-go-json": "merchantId",
            "x-go-name": "MerchantId"
          }
        },
        "required": [
          "balanceList",
          "merchantId"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_mybank_gateway.MerchantBalanceQueryResp"
      },
      "MerchantDetail": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "地址（上传后在支付宝的商户等级会更高，有机会使用花呗支付、商家自运营（支付即会员）等功能 备注：Province、City、District、Address须同时出现。",
            "x-go-json": "address",
            "x-go-name": "Address",
            "x-go-validate": "@char[0,128]"
          },
          "alias": {
            "type": "string",
            "description": "商户简称,注：可包含汉字、数字、字母，可全为数字，最多20个汉字或字符",
            "x-go-json": "alias",
            "x-go-name": "Alias",
            "x-go-validate": "@char[1,20]"
          },
          "bussAuthParam": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BussAuthParam"
              },
              {
                "description": "商户证件。可选值： 自然人非必填，个体工商户和企业必填"
              }
            ],
            "x-go-json": "bussAuthParam",
            "x-go-name": "BussAuthParam"
          },
          "bussAuthVld": {
            "type": "string",
            "description": "营业执照有效期yyyy-MM-dd",
            "x-go-json": "bussAuthVld",
            "x-go-name": "BussAuthVld",
            "x-go-validate": "@char[0,10]"
          },
          "certPhotoA": {
            "type": "string",
            "description": "负责人或企业法人代表的身份证图片正面。 备注：需要先调商户图片上传接口上传图片获取链接，并将该链接填到本字段。涉及图片上传的接口处理逻辑一致。 对应PhotoType字段（图片类型）：01",
            "x-go-json": "certPhotoA",
            "x-go-name": "CertPhotoA",
            "x-go-validate": "@char[1,500]"
          },
          "certPhotoB": {
            "type": "string",
            "description": "负责人或企业法人代表的身份证图片反面 对应PhotoType字段（图片类型）：02",
            "x-go-json": "certPhotoB",
            "x-go-name": "CertPhotoB",
            "x-go-validate": "@char[1,500]"
          },
          "certPhotoC": {
            "type": "string",
            "description": "手持身份证照片，“自然人”商户选送 对应PhotoType字段（图片类型）：11",
            "x-go-json": "certPhotoC",
            "x-go-name": "CertPhotoC",
            "x-go-validate": "@char[0,500]"
          },
          "checkstandPhoto": {
            "type": "string",
            "description": "收银台照片 对应PhotoType字段（图片类型）：08",
            "x-go-json": "checkstandPhoto",
            "x-go-name": "CheckstandPhoto",
            "x-go-validate": "@char[0,500]"
          },
          "city": {
            "type": "string",
            "description": "城市（按照附录6.5国标省市区号录入）备注：Province、City、District、Address须同时出现。可选填，一旦填写会做正确性校验。",
            "x-go-json": "city",
            "x-go-name": "City",
            "x-go-validate": "@char[0,16]"
          },
          "contactMobile": {
            "type": "string",
            "description": "联系人手机号。为商户常用联系人联系手机号。",
            "x-go-json": "contactMobile",
            "x-go-name": "ContactMobile",
            "x-go-validate": "@char[1,20]"
          },
          "contactName": {
            "type": "string",
            "description": "联系人姓名。为商户常用联系人姓名。",
            "x-go-json": "contactName",
            "x-go-name": "ContactName",
            "x-go-validate": "@char[1,256]"
          },
          "contractPhoto": {
            "type": "string",
            "description": "租赁协议图片，“自然人”商户门头照、内景照、租赁协议三选一上送 对应PhotoType字段（图片类型）：12",
            "x-go-json": "contractPhoto",
            "x-go-name": "ContractPhoto",
            "x-go-validate": "@char[0,500]"
          },
          "district": {
            "type": "string",
            "description": "区（按照附录6.5国标省市区号录入）备注：Province、City、District、Address须同时出现。可选填，一旦填写会做正确性校验。",
            "x-go-json": "district",
            "x-go-name": "District",
            "x-go-validate": "@char[0,16]"
          },
          "email": {
            "type": "string",
            "description": "邮箱， 注：不支持-，支付宝蓝海行动M3要求必填",
            "x-go-json": "email",
            "x-go-name": "Email",
            "x-go-validate": "@char[1,64]"
          },
          "industryLicensePhoto": {
            "type": "string",
            "description": "开户许可证照片(若商户类型为“自然人”无需上送、“个体工商户”可选、企业必送) 对应PhotoType字段（图片类型）：05",
            "x-go-json": "industryLicensePhoto",
            "x-go-name": "IndustryLicensePhoto",
            "x-go-validate": "@char[0,500]"
          },
          "legalPerson": {
            "type": "string",
            "description": "企业法人名称（注意：是法人名称，即营业执照上的公司名称，非法人代表名称）。自然人或个人工商户无须上送。",
            "x-go-json": "legalPerson",
            "x-go-name": "LegalPerson",
            "x-go-validate": "@char[0,256]"
          },
          "licensePhoto": {
            "type": "string",
            "description": "营业执照图片(若商户类型为“自然人”无需上送，企业及个体工商户必送) 对应PhotoType字段（图片类型）：03",
            "x-go-json": "licensePhoto",
            "x-go-name": "LicensePhoto",
            "x-go-validate": "@char[0,500]"
          },
          "otherPhoto": {
            "type": "string",
            "description": "其他图片 对应PhotoType字段（图片类型）：07",
            "x-go-json": "otherPhoto",
            "x-go-name": "OtherPhoto",
            "x-go-validate": "@char[0,500]"
          },
          "personCertVld": {
            "type": "string",
            "description": "身份证件有效期限（自然人商户上送）",
            "x-go-json": "personCertVld",
            "x-go-name": "PersonCertVld",
            "x-go-validate": "@char[0,10]"
          },
          "personProfession": {
            "type": "string",
            "description": "职业（自然人商户上送）",
            "x-go-json": "personProfession",
            "x-go-name": "PersonProfession",
            "x-go-validate": "@char[0,32]"
          },
          "personSex": {
            "type": "string",
            "description": "性别（自然人商户上送）",
            "x-go-json": "personSex",
            "x-go-name": "PersonSex",
            "x-go-validate": "@char[0,2]"
          },
          "prgPhoto": {
            "type": "string",
            "description": "组织机构代码证图片(若商户类型为“自然人”无需上送、“个体工商户”可选) 对应PhotoType字段（图片类型）：04",
            "x-go-json": "prgPhoto",
            "x-go-name": "PrgPhoto",
            "x-go-validate": "@char[0,500]"
          },
          "principalCertNo": {
            "type": "string",
            "description": "负责人证件号码,备注：若自然人送自然人证件号码、若个体工商户送经营者证件号码、若企业送法人代表证件号码。",
            "x-go-json": "principalCertNo",
            "x-go-name": "PrincipalCertNo",
            "x-go-validate": "@char[1,32]"
          },
          "principalCertType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceMybankGatewayPrincipalCertType"
              },
              {
                "description": "负责人证件类型。可选值：01：身份证"
              }
            ],
            "x-go-json": "principalCertType",
            "x-go-name": "PrincipalCertType"
          },
          "principalCertVld": {
            "type": "string",
            "description": "法定代表人或负责人身份证件有效期（企业/个体工商上送）",
            "x-go-json": "principalCertVld",
            "x-go-name": "PrincipalCertVld",
            "x-go-validate": "@char[0,10]"
          },
          "principalMobile": {
            "type": "string",
            "description": "负责人手机号。自然人或个体工商户上送，企业可不上送。备注：若商户后续开通二类户及余利宝功能，该手机号作为客户在网商的预留手机号，企业可不填)。开户发送的短信验证码的手机号需要和负责人手机号一致。支付宝蓝海行动M3要求必填",
            "x-go-json": "principalMobile",
            "x-go-name": "PrincipalMobile",
            "x-go-validate": "@char[0,32]"
          },
          "principalPerson": {
            "type": "string",
            "description": "负责人名称或企业法人代表姓名。 备注：若商户类型为“自然人”填写责任人本人，若为“个体工商户”填写经营者本人，若为“企业”填写企业法人代表名称。",
            "x-go-json": "principalPerson",
            "x-go-name": "PrincipalPerson",
            "x-go-validate": "@char[1,256]"
          },
          "province": {
            "type": "string",
            "description": "省份（按照附录6.5国标省市区号录入）。备注：Province、City、District、Address须同时出现。可选填，一旦填写会做正确性校验。",
            "x-go-json": "province",
            "x-go-name": "Province",
            "x-go-validate": "@char[0,16]"
          },
          "servicePhoneNo": {
            "type": "string",
            "description": "商户客服电话 注：5-15个数字，不能有-",
            "x-go-json": "servicePhoneNo",
            "x-go-name": "ServicePhoneNo",
            "x-go-validate": "@char[5,15]"
          },
          "shareholderCertNo": {
            "type": "string",
            "description": "控股股东或者实际控制人身份证件号码（企业/个体工商上送）",
            "x-go-json": "shareholderCertNo",
            "x-go-name": "ShareholderCertNo",
            "x-go-validate": "@char[0,32]"
          },
          "shareholderCertType": {
            "type": "string",
            "description": "控股股东或者实际控制人身份证件类型（企业/个体工商上送）",
            "x-go-json": "shareholderCertType",
            "x-go-name": "ShareholderCertType",
            "x-go-validate": "@char[0,2]"
          },
          "shareholderCertVld": {
            "type": "string",
            "description": "控股股东或者实际控制人身份证件有效期（企业/个体工商上送）",
            "x-go-json": "shareholderCertVld",
            "x-go-name": "ShareholderCertVld",
            "x-go-validate": "@char[0,10]"
          },
          "shareholderName": {
            "type": "string",
            "description": "控股股东或者实际控制人姓名（企业/个体工商上送）",
            "x-go-json": "shareholderName",
            "x-go-name": "ShareholderName",
            "x-go-validate": "@char[0,256]"
          },
          "shopEntrancePhoto": {
            "type": "string",
            "description": "门店内景照片，企业及个体工商户必送，“自然人”商户门头照、内景照、租赁协议三选一 对应PhotoType字段（图片类型）：09",
            "x-go-json": "shopEntrancePhoto",
            "x-go-name": "ShopEntrancePhoto",
            "x-go-validate": "@char[0,500]"
          },
          "shopPhoto": {
            "type": "string",
            "description": "门头照(店铺门头照，企业及个体工商户必送，“自然人”商户门头照、内景照、租赁协议三选一) 对应PhotoType字段（图片类型）：06",
            "x-go-json": "shopPhoto",
            "x-go-name": "ShopPhoto",
            "x-go-validate": "@char[0,500]"
          },
          "taxNum": {
            "type": "string",
            "description": "税务登记证号码",
            "x-go-json": "taxNum",
            "x-go-name": "TaxNum",
            "x-go-validate": "@char[0,32]"
          }
        },
        "required": [
          "contactMobile",
          "contactName",
          "email",
          "principalCertType",
          "principalCertNo",
          "principalPerson",
          "certPhotoA",
          "certPhotoB",
          "servicePhoneNo",
          "alias"
        ],
        "description": "商户详情",
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/mybank.MerchantDetail"
      },
      "MerchantInfo": {
        "type": "object",
        "properties": {
          "appId": {
            "type": "string",
            "description": "AppId",
            "x-go-json": "appId,omitempty",
            "x-go-name": "AppId",
            "x-go-validate": "@char[0,64]"
          },
          "authPath": {
            "type": "string",
            "description": "当开通微信公众号支付时此字段必填,最多可填写5个路径，不同的路径使用英文逗号分隔",
            "x-go-json": "authPath,omitempty",
            "x-go-name": "AuthPath",
            "x-go-validate": "@char[0,500]"
          },
          "payType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvMerchantPayType"
              },
              {
                "description": "支付类别"
              }
            ],
            "x-go-json": "payType",
            "x-go-name": "PayType"
          },
          "payWay": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvMerchantPayWay"
              },
              {
                "description": "支付方式, WECHAT=微信， ALIPAY=支付宝，UNIONPAY=银联"
              }
            ],
            "x-go-json": "payWay",
            "x-go-name": "PayWay"
          },
          "servicePhone": {
            "type": "string",
            "description": "客服电话",
            "x-go-json": "servicePhone,omitempty",
            "x-go-name": "ServicePhone",
            "x-go-validate": "@char[0,64]"
          }
        },
        "required": [
          "payType",
          "payWay"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.MerchantInfo"
      },
      "MerchantQueryResponseBody": {
        "type": "object",
        "properties": {
          "AuthList": {
            "type": "string",
            "description": "商户认证类型。主要包括商户的图片认证是否通过、工商网信息认证、银行卡认证等",
            "x-go-name": "AuthList",
            "x-tag-xml": "AuthList"
          },
          "BankCardParam": {
            "type": "string",
            "description": "清算卡参数。json格式base64编码，具体报文定义参考下面的清算卡",
            "x-go-name": "BankCardParam",
            "x-tag-xml": "BankCardParam"
          },
          "DealType": {
            "type": "string",
            "description": "商户经营类型。可选值：\n01:实体特约商户\n02:网络特约商户\n03:实体兼网络特约商户",
            "x-go-name": "DealType",
            "x-tag-xml": "DealType"
          },
          "MerchantDetail": {
            "type": "string",
            "description": "商户详情列表。json格式base64编码，具体报文定义参考商户详情。",
            "x-go-name": "MerchantDetail",
            "x-tag-xml": "MerchantDetail"
          },
          "MerchantId": {
            "type": "string",
            "description": "商户号",
            "x-go-name": "MerchantId",
            "x-tag-xml": "MerchantId"
          },
          "MerchantName": {
            "type": "string",
            "description": "商户名称。有营业执照的，要求与营业执照上的名称一致。 注:最多50个汉字或字符，可以包含特殊字符",
            "x-go-name": "MerchantName",
            "x-tag-xml": "MerchantName"
          },
          "MerchantType": {
            "type": "string",
            "description": "商户类型。可选值：\n01:自然人\n02:个体工商户\n03:企业商户\n说明：以同一个身份证件办理的自然人商户受理信用卡的收款金额上限为日累计1000元、月累计1万，建议有营业执照的商户以个体或企业身份入驻",
            "x-go-name": "MerchantType",
            "x-tag-xml": "MerchantType"
          },
          "PermitList": {
            "type": "string",
            "description": "商户限权原因信息返回。当商户入驻结果为成功，且商户资质不全导致被限权时，返回此信息，中文格式，|号分隔多种限权原因。",
            "x-go-name": "PermitList",
            "x-tag-xml": "PermitList"
          },
          "RespInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RespInfo"
              },
              {
                "description": "返回码组件"
              }
            ],
            "x-go-name": "RespInfo",
            "x-tag-xml": "RespInfo"
          }
        },
        "required": [
          "AuthList",
          "BankCardParam",
          "DealType",
          "MerchantDetail",
          "MerchantId",
          "MerchantName",
          "MerchantType",
          "PermitList",
          "RespInfo"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_mybank_gateway.MerchantQueryResponseBody"
      },
      "Metadata": {
        "type": "object",
        "additionalProperties": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "x-go-named": "go-hummer/hummer.Metadata"
      },
      "MiniAppAccountLoginBody": {
        "type": "object",
        "properties": {
          "testUID": {
            "type": "string",
            "description": "网商测试环境用userid, 测试环境必填, 详情看接口备注",
            "x-go-json": "testUID",
            "x-go-name": "TestUID",
            "x-go-validate": "@char[0,32]"
          }
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cloud_register.MiniAppAccountLoginBody"
      },
      "MiniAppAccountLoginRsp": {
        "type": "object",
        "properties": {
          "qrcode": {
            "type": "string",
            "description": "二维码图片",
            "x-go-json": "qrcode",
            "x-go-name": "Qrcode"
          },
          "schema": {
            "type": "string",
            "description": "拉起支付宝schema",
            "x-go-json": "schema",
            "x-go-name": "Schema"
          }
        },
        "required": [
          "qrcode",
          "schema"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cloud_register.MiniAppAccountLoginRsp"
      },
      "MiniAppAccountRegisterBody": {
        "type": "object",
        "properties": {
          "testUID": {
            "type": "string",
            "description": "网商测试环境用userid, 测试环境必填, 详情看接口备注",
            "x-go-json": "testUID",
            "x-go-name": "TestUID",
            "x-go-validate": "@char[0,32]"
          }
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cloud_register.MiniAppAccountRegisterBody"
      },
      "MiniAppAccountRegisterRsp": {
        "type": "object",
        "properties": {
          "qrcode": {
            "type": "string",
            "description": "二维码图片",
            "x-go-json": "qrcode",
            "x-go-name": "Qrcode"
          },
          "schema": {
            "type": "string",
            "description": "拉起支付宝schema",
            "x-go-json": "schema",
            "x-go-name": "Schema"
          }
        },
        "required": [
          "qrcode",
          "schema"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cloud_register.MiniAppAccountRegisterRsp"
      },
      "MiniAppDetailBody": {
        "type": "object",
        "properties": {
          "mainUID": {
            "type": "string",
            "description": "主账户UID",
            "x-go-json": "mainUID",
            "x-go-name": "MainUID",
            "x-go-validate": "@char[1,32]"
          },
          "uID": {
            "type": "string",
            "description": "子账户若为查询主账户，这里为主账户uid",
            "x-go-json": "uID",
            "x-go-name": "UID",
            "x-go-validate": "@char[1,32]"
          }
        },
        "required": [
          "mainUID",
          "uID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cloud_funds.MiniAppDetailBody"
      },
      "MiniAppDoSplitBody": {
        "type": "object",
        "properties": {
          "transID": {
            "type": "integer",
            "format": "uint64",
            "minimum": 1,
            "description": "交易单号",
            "x-go-json": "transID",
            "x-go-name": "TransID",
            "x-go-validate": "@uint64[1,]"
          }
        },
        "required": [
          "transID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/mybank.MiniAppDoSplitBody"
      },
      "MiniAppLoginBody": {
        "type": "object",
        "properties": {
          "mainUID": {
            "type": "string",
            "description": "主账户UID",
            "x-go-json": "mainUID",
            "x-go-name": "MainUID",
            "x-go-validate": "@char[1,32]"
          },
          "testUID": {
            "type": "string",
            "description": "网商测试环境用 uid, 测试环境必填",
            "x-go-json": "testUID",
            "x-go-name": "TestUID",
            "x-go-validate": "@char[0,32]"
          },
          "uID": {
            "type": "string",
            "description": "子账户, 若为主账户登陆，这里为主账户uid",
            "x-go-json": "uID",
            "x-go-name": "UID",
            "x-go-validate": "@char[1,32]"
          }
        },
        "required": [
          "mainUID",
          "uID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cloud_funds.MiniAppLoginBody"
      },
      "MiniAppLoginRsp": {
        "type": "object",
        "properties": {
          "qrcode": {
            "type": "string",
            "description": "二维码图片",
            "x-go-json": "qrcode",
            "x-go-name": "Qrcode"
          },
          "schema": {
            "type": "string",
            "description": "拉起支付宝schema",
            "x-go-json": "schema",
            "x-go-name": "Schema"
          }
        },
        "required": [
          "qrcode",
          "schema"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cloud_funds.MiniAppLoginRsp"
      },
      "MiniAppMerchantBalanceBody": {
        "type": "object",
        "properties": {
          "mainUID": {
            "type": "string",
            "description": "主账户UID",
            "x-go-json": "mainUID",
            "x-go-name": "MainUID",
            "x-go-validate": "@char[1,32]"
          },
          "uID": {
            "type": "string",
            "description": "子账户若为查询主账户，这里为主账户uid",
            "x-go-json": "uID",
            "x-go-name": "UID",
            "x-go-validate": "@char[1,32]"
          }
        },
        "required": [
          "mainUID",
          "uID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cloud_funds.MiniAppMerchantBalanceBody"
      },
      "MiniAppMerchantBussAuthParam": {
        "type": "object",
        "properties": {
          "bussAuthNo": {
            "type": "string",
            "description": "证件号码",
            "x-go-json": "bussAuthNo",
            "x-go-name": "BussAuthNo"
          }
        },
        "required": [
          "bussAuthNo"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_mybank_gateway.MiniAppMerchantBussAuthParam"
      },
      "MiniAppMerchantDetail": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string",
            "description": "商户简称",
            "x-go-json": "alias",
            "x-go-name": "Alias"
          },
          "bussAuthParam": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MiniAppMerchantBussAuthParam"
              },
              {
                "description": "商户证件列表。"
              }
            ],
            "x-go-json": "bussAuthParam",
            "x-go-name": "BussAuthParam"
          },
          "contactMobile": {
            "type": "string",
            "description": "联系人手机号。为商户常用联系人联系手机号",
            "x-go-json": "contactMobile",
            "x-go-name": "ContactMobile"
          },
          "contactName": {
            "type": "string",
            "description": "联系人姓名。为商户常用联系人姓名",
            "x-go-json": "contactName",
            "x-go-name": "ContactName"
          },
          "legalPerson": {
            "type": "string",
            "description": "企业法人名称",
            "x-go-json": "legalPerson",
            "x-go-name": "LegalPerson"
          },
          "principalPerson": {
            "type": "string",
            "description": "负责人名称或企业法人代表姓名。 备注：若商户类型为“自然人”填写责任人本人，若为“个体工商户”填写经营者本人，若为“企业”填写企业法人代表名称。",
            "x-go-json": "principalPerson",
            "x-go-name": "PrincipalPerson"
          }
        },
        "required": [
          "alias",
          "bussAuthParam",
          "contactMobile",
          "contactName",
          "legalPerson",
          "principalPerson"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_mybank_gateway.MiniAppMerchantDetail"
      },
      "MiniAppMerchantQueryRsp": {
        "type": "object",
        "properties": {
          "detail": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MiniAppMerchantDetail"
              },
              {
                "description": "商户详情"
              }
            ],
            "x-go-json": "detail",
            "x-go-name": "Detail"
          },
          "merchantId": {
            "type": "string",
            "description": "商户号。网商为商户分配的商户号，通过商户入驻结果查询接口获取",
            "x-go-json": "merchantId",
            "x-go-name": "MerchantId"
          },
          "merchantType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceMybankGatewayMerchantType"
              },
              {
                "description": "商户类型。可选值：01:自然人 02:个体工商户 03:企业商户"
              }
            ],
            "x-go-json": "merchantType",
            "x-go-name": "MerchantType"
          }
        },
        "required": [
          "detail",
          "merchantId",
          "merchantType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_mybank_gateway.MiniAppMerchantQueryRsp"
      },
      "MiniAppMerchantSceneBalanceBody": {
        "type": "object",
        "properties": {
          "mainUID": {
            "type": "string",
            "description": "主账户UID",
            "x-go-json": "mainUID",
            "x-go-name": "MainUID",
            "x-go-validate": "@char[1,32]"
          },
          "uID": {
            "type": "string",
            "description": "子账户若为查询主账户，这里为主账户uid",
            "x-go-json": "uID",
            "x-go-name": "UID",
            "x-go-validate": "@char[1,32]"
          }
        },
        "required": [
          "mainUID",
          "uID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cloud_funds.MiniAppMerchantSceneBalanceBody"
      },
      "MiniAppMerchantSceneBalanceQueryRsp": {
        "type": "object",
        "properties": {
          "balanceInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BalanceInfo"
              },
              {
                "description": "账户余额"
              }
            ],
            "x-go-json": "balanceInfo",
            "x-go-name": "BalanceInfo"
          },
          "currency": {
            "type": "string",
            "description": "币种",
            "x-go-json": "currency",
            "x-go-name": "Currency"
          },
          "extInfo": {
            "type": "string",
            "description": "预留扩展字段",
            "x-go-json": "extInfo",
            "x-go-name": "ExtInfo"
          },
          "merchantId": {
            "type": "string",
            "description": "商户号。网商为商户分配的商户号，通过商户入驻结果查询接口获取",
            "x-go-json": "merchantId",
            "x-go-name": "MerchantId"
          }
        },
        "required": [
          "balanceInfo",
          "currency",
          "extInfo",
          "merchantId"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_mybank_gateway.MiniAppMerchantSceneBalanceQueryRsp"
      },
      "MiniAppOrderShareRefundRsp": {
        "type": "object",
        "properties": {
          "merchantId": {
            "type": "string",
            "description": "商户号。网商为商户分配的商户号，通过商户入驻结果查询接口获取。",
            "x-go-json": "merchantId",
            "x-go-name": "MerchantId"
          },
          "outTradeNo": {
            "type": "string",
            "description": "外部订单分账退回请求流水号",
            "x-go-json": "outTradeNo",
            "x-go-name": "OutTradeNo"
          },
          "relateOrderNo": {
            "type": "string",
            "description": "关联网商订单号",
            "x-go-json": "relateOrderNo",
            "x-go-name": "RelateOrderNo"
          },
          "shareRefundOrderNo": {
            "type": "string",
            "description": "网商分账退回订单号",
            "x-go-json": "shareRefundOrderNo",
            "x-go-name": "ShareRefundOrderNo"
          }
        },
        "required": [
          "merchantId",
          "outTradeNo",
          "relateOrderNo",
          "shareRefundOrderNo"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_mybank_gateway.MiniAppOrderShareRefundRsp"
      },
      "MiniAppQueryOrderShareRefundRsp": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "币种，默认CNY",
            "x-go-json": "currency",
            "x-go-name": "Currency"
          },
          "errorCode": {
            "type": "string",
            "description": "错误码",
            "x-go-json": "errorCode",
            "x-go-name": "ErrorCode"
          },
          "errorDesc": {
            "type": "string",
            "description": "错误描述",
            "x-go-json": "errorDesc",
            "x-go-name": "ErrorDesc"
          },
          "extInfo": {
            "type": "string",
            "description": "扩展信息",
            "x-go-json": "extInfo",
            "x-go-name": "ExtInfo"
          },
          "memo": {
            "type": "string",
            "description": "备注",
            "x-go-json": "memo",
            "x-go-name": "Memo"
          },
          "merchantId": {
            "type": "string",
            "description": "收款方商户号",
            "x-go-json": "merchantId",
            "x-go-name": "MerchantId"
          },
          "outTradeNo": {
            "type": "string",
            "description": "外部分账退回交易号",
            "x-go-json": "outTradeNo",
            "x-go-name": "OutTradeNo"
          },
          "relateOrderNo": {
            "type": "string",
            "description": "原关联网商订单号",
            "x-go-json": "relateOrderNo",
            "x-go-name": "RelateOrderNo"
          },
          "shareRefundDate": {
            "type": "string",
            "description": "分账退回时间",
            "x-go-json": "shareRefundDate",
            "x-go-name": "ShareRefundDate"
          },
          "shareRefundOrderNo": {
            "type": "string",
            "description": "网商分账退回单号",
            "x-go-json": "shareRefundOrderNo",
            "x-go-name": "ShareRefundOrderNo"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceMybankGatewayStatus"
              },
              {
                "description": "状态(SUCCESS, FAIL,DEALING)"
              }
            ],
            "x-go-json": "status",
            "x-go-name": "Status"
          },
          "totalAmount": {
            "type": "integer",
            "format": "int64",
            "description": "订单金额(金额为分)",
            "x-go-json": "totalAmount",
            "x-go-name": "TotalAmount"
          }
        },
        "required": [
          "currency",
          "errorCode",
          "errorDesc",
          "extInfo",
          "memo",
          "merchantId",
          "outTradeNo",
          "relateOrderNo",
          "shareRefundDate",
          "shareRefundOrderNo",
          "status",
          "totalAmount"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_mybank_gateway.MiniAppQueryOrderShareRefundRsp"
      },
      "MiniAppQueryOrderShareRsp": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "币种，默认CNY",
            "x-go-json": "currency",
            "x-go-name": "Currency"
          },
          "errorCode": {
            "type": "string",
            "description": "错误码",
            "x-go-json": "errorCode",
            "x-go-name": "ErrorCode"
          },
          "errorDesc": {
            "type": "string",
            "description": "错误描述",
            "x-go-json": "errorDesc",
            "x-go-name": "ErrorDesc"
          },
          "extInfo": {
            "type": "string",
            "description": "扩展信息",
            "x-go-json": "extInfo",
            "x-go-name": "ExtInfo"
          },
          "memo": {
            "type": "string",
            "description": "备注",
            "x-go-json": "memo",
            "x-go-name": "Memo"
          },
          "outTradeNo": {
            "type": "string",
            "description": "原外部订单分账请求流水号",
            "x-go-json": "outTradeNo",
            "x-go-name": "OutTradeNo"
          },
          "relateOrderNo": {
            "type": "string",
            "description": "原关联网商订单号",
            "x-go-json": "relateOrderNo",
            "x-go-name": "RelateOrderNo"
          },
          "shareDate": {
            "type": "string",
            "description": "分账时间",
            "x-go-json": "shareDate",
            "x-go-name": "ShareDate"
          },
          "shareOrderNo": {
            "type": "string",
            "description": "网商分账订单号",
            "x-go-json": "shareOrderNo",
            "x-go-name": "ShareOrderNo"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceMybankGatewayStatus"
              },
              {
                "description": "状态(SUCCESS, FAIL,DEALING)"
              }
            ],
            "x-go-json": "status",
            "x-go-name": "Status"
          },
          "totalAmount": {
            "type": "integer",
            "format": "int64",
            "description": "订单金额(金额为分)",
            "x-go-json": "totalAmount",
            "x-go-name": "TotalAmount"
          }
        },
        "required": [
          "currency",
          "errorCode",
          "errorDesc",
          "extInfo",
          "memo",
          "outTradeNo",
          "relateOrderNo",
          "shareDate",
          "shareOrderNo",
          "status",
          "totalAmount"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_mybank_gateway.MiniAppQueryOrderShareRsp"
      },
      "MiniAppRegisterBody": {
        "type": "object",
        "properties": {
          "mainUID": {
            "type": "string",
            "description": "主账户UID",
            "x-go-json": "mainUID",
            "x-go-name": "MainUID",
            "x-go-validate": "@char[1,32]"
          },
          "testUID": {
            "type": "string",
            "description": "网商测试环境用 uid, 测试环境必填",
            "x-go-json": "testUID",
            "x-go-name": "TestUID",
            "x-go-validate": "@char[0,32]"
          },
          "uID": {
            "type": "string",
            "description": "子账户, 若为主账户登陆，这里为主账户uid",
            "x-go-json": "uID",
            "x-go-name": "UID",
            "x-go-validate": "@char[1,32]"
          }
        },
        "required": [
          "mainUID",
          "uID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cloud_funds.MiniAppRegisterBody"
      },
      "MiniAppRegisterQueryBody": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0,
            "description": "开户账户id, 和uid二选一",
            "default": "0",
            "x-go-json": "accountId",
            "x-go-name": "AccountId",
            "x-go-validate": "@uint64[0,]"
          },
          "failReason": {
            "type": "string",
            "description": "失败原因，失败时出现",
            "x-go-json": "failReason",
            "x-go-name": "FailReason",
            "x-go-validate": "@char[0,256]"
          },
          "thirdAccountId": {
            "type": "string",
            "description": "第三方账户Id",
            "x-go-json": "thirdAccountId",
            "x-go-name": "ThirdAccountID",
            "x-go-validate": "@char[0,64]"
          },
          "uID": {
            "type": "string",
            "description": "开户账户UID,和AccountId二选一",
            "x-go-json": "uID",
            "x-go-name": "UID",
            "x-go-validate": "@char[0,32]"
          },
          "withNotify": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bool"
              },
              {
                "description": "是否通知业务端",
                "default": "FALSE"
              }
            ],
            "x-go-json": "withNotify",
            "x-go-name": "WithNotify"
          },
          "withUpdate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bool"
              },
              {
                "description": "是否同步更新本地账户开户状态",
                "default": "FALSE"
              }
            ],
            "x-go-json": "withUpdate",
            "x-go-name": "WithUpdate"
          }
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cloud_funds.MiniAppRegisterQueryBody"
      },
      "MiniAppRegisterQueryRsp": {
        "type": "object",
        "properties": {
          "accountID": {
            "type": "string",
            "format": "uint64",
            "description": "账户ID",
            "x-go-json": "accountID,string",
            "x-go-name": "AccountID"
          },
          "merchantId": {
            "type": "string",
            "description": "网商商户号",
            "x-go-json": "merchantId",
            "x-go-name": "MerchantId"
          },
          "registerStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceMybankGatewayRegisterStatus"
              },
              {
                "description": "注册状态 0：注册中 1：成功 2：失败"
              }
            ],
            "x-go-json": "registerStatus",
            "x-go-name": "RegisterStatus"
          },
          "uID": {
            "type": "string",
            "description": "账户UID",
            "x-go-json": "uID",
            "x-go-name": "UID"
          }
        },
        "required": [
          "uID",
          "accountID",
          "merchantId",
          "registerStatus"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cloud_funds.MiniAppRegisterQueryRsp"
      },
      "MiniAppRegisterRsp": {
        "type": "object",
        "properties": {
          "qrcode": {
            "type": "string",
            "description": "二维码图片",
            "x-go-json": "qrcode",
            "x-go-name": "Qrcode"
          },
          "schema": {
            "type": "string",
            "description": "拉起支付宝schema",
            "x-go-json": "schema",
            "x-go-name": "Schema"
          }
        },
        "required": [
          "qrcode",
          "schema"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cloud_funds.MiniAppRegisterRsp"
      },
      "MyBankApply": {
        "type": "object",
        "properties": {
          "appID": {
            "type": "string",
            "description": "网商分配的APPID",
            "x-go-json": "appID,omitempty",
            "x-go-name": "AppID",
            "x-go-validate": "@char[0,32]"
          },
          "isvOrgID": {
            "type": "string",
            "description": "网商分配的平台机构号",
            "x-go-json": "isvOrgID,omitempty",
            "x-go-name": "IsvOrgID",
            "x-go-validate": "@char[0,32]"
          },
          "priKey": {
            "type": "string",
            "maxLength": 10000,
            "minLength": 0,
            "description": "私钥",
            "x-go-json": "priKey,omitempty",
            "x-go-name": "PriKey",
            "x-go-validate": "@string[0,10000]"
          },
          "pubKey": {
            "type": "string",
            "maxLength": 10000,
            "minLength": 0,
            "description": "公钥",
            "x-go-json": "pubKey,omitempty",
            "x-go-name": "PubKey",
            "x-go-validate": "@string[0,10000]"
          },
          "sftpPwd": {
            "type": "string",
            "description": "sftp密码，补单时必填,aes256cbc",
            "x-go-json": "sftpPwd,omitempty",
            "x-go-name": "SftpPwd",
            "x-go-validate": "@char[0,64]"
          },
          "sftpUser": {
            "type": "string",
            "description": "sftp账户，补单时必填, aes256cbc",
            "x-go-json": "sftpUser,omitempty",
            "x-go-name": "SftpUser",
            "x-go-validate": "@char[0,64]"
          },
          "testUID": {
            "type": "string",
            "maxLength": 32,
            "minLength": 0,
            "description": "测试环境UID",
            "x-go-json": "testUID,omitempty",
            "x-go-name": "TestUID",
            "x-go-validate": "@string[0,32]"
          }
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.MyBankApply"
      },
      "MySQLTimestamp": {
        "type": "string",
        "format": "date-time",
        "x-go-named": "go-hummer/timelib.MySQLTimestamp"
      },
      "MybankBalanceAccountList": {
        "type": "object",
        "properties": {
          "accountID": {
            "type": "integer",
            "format": "uint64",
            "description": "收款账户ID",
            "x-go-json": "accountID",
            "x-go-name": "AccountID"
          },
          "accountName": {
            "type": "string",
            "description": "账户名称",
            "x-go-json": "accountName",
            "x-go-name": "AccountName"
          },
          "mybankBalance": {
            "type": "integer",
            "format": "int64",
            "description": "手续费余额",
            "x-go-json": "mybankBalance",
            "x-go-name": "MybankBalance"
          },
          "uid": {
            "type": "string",
            "description": "用户中心UID",
            "x-go-json": "uid",
            "x-go-name": "UID"
          }
        },
        "required": [
          "accountID",
          "accountName",
          "mybankBalance",
          "uid"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.MybankBalanceAccountList"
      },
      "MybankRegisterStatus": {
        "type": "string",
        "enum": [
          "DEALING",
          "FAIL",
          "SUCCESS"
        ],
        "x-enum-labels": [
          "处理中",
          "失败",
          "成功"
        ],
        "x-enum-vals": [
          1,
          3,
          2
        ],
        "x-enum-values": [
          "DEALING",
          "FAIL",
          "SUCCESS"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/constants/types.MybankRegisterStatus"
      },
      "OcrReviewBody": {
        "type": "object",
        "properties": {
          "applyID": {
            "type": "string",
            "format": "uint64",
            "minimum": 1,
            "description": "申请单id",
            "x-go-json": "applyID,string",
            "x-go-name": "ApplyID",
            "x-go-validate": "@uint64[1,]"
          },
          "comment": {
            "type": "string",
            "description": "备注",
            "x-go-json": "comment",
            "x-go-name": "Comment",
            "x-go-validate": "@char[0,200]"
          },
          "legalOcrStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvOcrStatus"
              },
              {
                "description": "ocr识别状态, 企业法人实名信息是否一致"
              }
            ],
            "x-go-json": "legalOcrStatus",
            "x-go-name": "LegalOcrStatus"
          },
          "notifyID": {
            "type": "string",
            "description": "通知id",
            "x-go-json": "notifyID",
            "x-go-name": "NotifyID",
            "x-go-validate": "@char[1,64]"
          },
          "ocrStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvOcrStatus"
              },
              {
                "description": "ocr识别状态, 企业工商认证信息是否一致"
              }
            ],
            "x-go-json": "ocrStatus",
            "x-go-name": "OcrStatus"
          },
          "operatorID": {
            "type": "string",
            "description": "操作人id",
            "x-go-json": "operatorID",
            "x-go-name": "OperatorId",
            "x-go-validate": "@char[1,32]"
          },
          "operatorName": {
            "type": "string",
            "description": "操作人名称",
            "x-go-json": "operatorName",
            "x-go-name": "OperatorName",
            "x-go-validate": "@char[1,32]"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvApplyStatus"
              },
              {
                "description": "申请单主状态"
              }
            ],
            "x-go-json": "status",
            "x-go-name": "Status"
          },
          "txSn": {
            "type": "string",
            "description": "商户进件流水，商户进件回调时使用",
            "x-go-json": "txSn",
            "x-go-name": "TxSn",
            "x-go-validate": "@char[0,32]"
          }
        },
        "required": [
          "notifyID",
          "applyID",
          "operatorID",
          "operatorName"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.OcrReviewBody"
      },
      "OpSubAccountBody": {
        "type": "object",
        "properties": {
          "accountStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountStatus"
              },
              {
                "enum": [
                  "",
                  "ENABLE",
                  "DISABLE"
                ],
                "description": "账户状态"
              }
            ],
            "x-go-json": "accountStatus",
            "x-go-name": "AccountStatus",
            "x-go-validate": "@string{,ENABLE,DISABLE}"
          }
        },
        "required": [
          "accountStatus"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/account.OpSubAccountBody"
      },
      "OpenApplyBody": {
        "type": "object",
        "properties": {
          "applyID": {
            "type": "string",
            "format": "uint64",
            "minimum": 1,
            "description": "申请单id",
            "x-go-json": "applyID,string",
            "x-go-name": "ApplyID",
            "x-go-validate": "@uint64[1,]"
          },
          "comment": {
            "type": "string",
            "description": "备注",
            "x-go-json": "comment",
            "x-go-name": "Comment",
            "x-go-validate": "@char[0,200]"
          },
          "operatorID": {
            "type": "string",
            "description": "操作人id",
            "x-go-json": "operatorID",
            "x-go-name": "OperatorID",
            "x-go-validate": "@char[1,32]"
          },
          "operatorName": {
            "type": "string",
            "description": "操作人名称",
            "x-go-json": "operatorName",
            "x-go-name": "OperatorName",
            "x-go-validate": "@char[1,32]"
          }
        },
        "required": [
          "applyID",
          "operatorID",
          "operatorName"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.OpenApplyBody"
      },
      "OperateTime": {
        "type": "object",
        "properties": {
          "createTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MySQLTimestamp"
              },
              {}
            ],
            "x-go-json": "createTime",
            "x-go-name": "CreateTime"
          },
          "updateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MySQLTimestamp"
              },
              {}
            ],
            "x-go-json": "updateTime",
            "x-go-name": "UpdateTime"
          }
        },
        "required": [
          "createTime",
          "updateTime"
        ],
        "x-go-named": "go-hummer/sqlx/presets.OperateTime"
      },
      "OrderAuthPayment": {
        "type": "object",
        "properties": {
          "Amount": {
            "type": "integer",
            "format": "int64",
            "description": "金额",
            "x-go-name": "Amount",
            "x-tag-xml": "Amount"
          },
          "MCC": {
            "type": "string",
            "description": "MCC 码",
            "x-go-name": "MCC",
            "x-tag-xml": "MCC"
          },
          "MerchantID": {
            "type": "string",
            "description": "银联商户代码",
            "x-go-name": "MerchantID",
            "x-tag-xml": "MerchantID"
          },
          "MerchantName": {
            "type": "string",
            "description": "银联商户名称",
            "x-go-name": "MerchantName",
            "x-tag-xml": "MerchantName"
          },
          "PaymentNo": {
            "type": "string",
            "description": "支付交易流水号",
            "x-go-name": "PaymentNo",
            "x-tag-xml": "PaymentNo"
          },
          "Remark": {
            "type": "string",
            "description": "备注",
            "x-go-name": "Remark",
            "x-tag-xml": "Remark"
          },
          "Status": {
            "type": "string",
            "description": "交易状态 20=支付成功",
            "x-go-name": "Status",
            "x-tag-xml": "Status"
          },
          "TxType": {
            "type": "string",
            "description": "交易类型",
            "x-go-name": "TxType",
            "x-tag-xml": "TxType"
          }
        },
        "required": [
          "Amount",
          "MCC",
          "MerchantID",
          "MerchantName",
          "PaymentNo",
          "Remark",
          "Status",
          "TxType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.OrderAuthPayment"
      },
      "OrderBookPayment": {
        "type": "object",
        "properties": {
          "Amount": {
            "type": "integer",
            "format": "int64",
            "description": "金额",
            "x-go-name": "Amount",
            "x-tag-xml": "Amount"
          },
          "PaymentNo": {
            "type": "string",
            "description": "支付交易流水号",
            "x-go-name": "PaymentNo",
            "x-tag-xml": "PaymentNo"
          },
          "Remark": {
            "type": "string",
            "description": "备注",
            "x-go-name": "Remark",
            "x-tag-xml": "Remark"
          },
          "Status": {
            "type": "string",
            "description": "交易状态 30=支付成功",
            "x-go-name": "Status",
            "x-tag-xml": "Status"
          },
          "TxType": {
            "type": "string",
            "description": "交易类型",
            "x-go-name": "TxType",
            "x-tag-xml": "TxType"
          }
        },
        "required": [
          "Amount",
          "PaymentNo",
          "Remark",
          "Status",
          "TxType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.OrderBookPayment"
      },
      "OrderPOSPayment": {
        "type": "object",
        "properties": {
          "Amount": {
            "type": "integer",
            "format": "int64",
            "description": "金额",
            "x-go-name": "Amount",
            "x-tag-xml": "Amount"
          },
          "BillNo": {
            "type": "string",
            "description": "银行账单号",
            "x-go-name": "BillNo",
            "x-tag-xml": "BillNo"
          },
          "PhoneNumber": {
            "type": "string",
            "description": "手机号",
            "x-go-name": "PhoneNumber",
            "x-tag-xml": "PhoneNumber"
          },
          "Remark": {
            "type": "string",
            "description": "备注",
            "x-go-name": "Remark",
            "x-tag-xml": "Remark"
          },
          "Status": {
            "type": "string",
            "description": "交易状态 40=支付成功",
            "x-go-name": "Status",
            "x-tag-xml": "Status"
          },
          "TxSN": {
            "type": "string",
            "description": "交易流水号",
            "x-go-name": "TxSN",
            "x-tag-xml": "TxSN"
          },
          "TxType": {
            "type": "string",
            "description": "交易类型",
            "x-go-name": "TxType",
            "x-tag-xml": "TxType"
          }
        },
        "required": [
          "Amount",
          "BillNo",
          "PhoneNumber",
          "Remark",
          "Status",
          "TxSN",
          "TxType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.OrderPOSPayment"
      },
      "OrderPayment": {
        "type": "object",
        "properties": {
          "Amount": {
            "type": "integer",
            "format": "int64",
            "description": "支付金额",
            "x-go-name": "Amount",
            "x-tag-xml": "Amount"
          },
          "PaymentNo": {
            "type": "string",
            "description": "支付流水号",
            "x-go-name": "PaymentNo",
            "x-tag-xml": "PaymentNo"
          },
          "Remark": {
            "type": "string",
            "description": "备注",
            "x-go-name": "Remark",
            "x-tag-xml": "Remark"
          },
          "Status": {
            "type": "string",
            "description": "支付状态 20=已支付",
            "x-go-name": "Status",
            "x-tag-xml": "Status"
          },
          "TxType": {
            "type": "string",
            "description": "交易类型",
            "x-go-name": "TxType",
            "x-tag-xml": "TxType"
          }
        },
        "required": [
          "Amount",
          "PaymentNo",
          "Remark",
          "Status",
          "TxType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.OrderPayment"
      },
      "OrderQuickPayment": {
        "type": "object",
        "properties": {
          "Amount": {
            "type": "integer",
            "format": "int64",
            "description": "金额",
            "x-go-name": "Amount",
            "x-tag-xml": "Amount"
          },
          "Remark": {
            "type": "string",
            "description": "备注",
            "x-go-name": "Remark",
            "x-tag-xml": "Remark"
          },
          "Status": {
            "type": "string",
            "description": "交易状态 30=代扣成功",
            "x-go-name": "Status",
            "x-tag-xml": "Status"
          },
          "TxSN": {
            "type": "string",
            "description": "交易流水号",
            "x-go-name": "TxSN",
            "x-tag-xml": "TxSN"
          },
          "TxType": {
            "type": "string",
            "description": "交易类型",
            "x-go-name": "TxType",
            "x-tag-xml": "TxType"
          }
        },
        "required": [
          "Amount",
          "Remark",
          "Status",
          "TxSN",
          "TxType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.OrderQuickPayment"
      },
      "OrderSettlement": {
        "type": "object",
        "properties": {
          "Amount": {
            "type": "integer",
            "format": "int64",
            "description": "结算金额",
            "x-go-name": "Amount",
            "x-tag-xml": "Amount"
          },
          "Remark": {
            "type": "string",
            "description": "备注",
            "x-go-name": "Remark",
            "x-tag-xml": "Remark"
          },
          "SerialNumber": {
            "type": "string",
            "description": "结算序列号",
            "x-go-name": "SerialNumber",
            "x-tag-xml": "SerialNumber"
          },
          "Status": {
            "type": "string",
            "description": "结算状态 10=已经受理 30=正在结算 40=已经执行(已发送转账指令) 50=转账退回",
            "x-go-name": "Status",
            "x-tag-xml": "Status"
          },
          "TxType": {
            "type": "string",
            "description": "交易类型",
            "x-go-name": "TxType",
            "x-tag-xml": "TxType"
          }
        },
        "required": [
          "Amount",
          "Remark",
          "SerialNumber",
          "Status",
          "TxType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.OrderSettlement"
      },
      "PayTransBody": {
        "type": "object",
        "properties": {
          "appPayType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AppPayType"
              },
              {
                "enum": [
                  "",
                  "WECHAT",
                  "ALIPAY",
                  "UNIONPAY"
                ],
                "description": "APP支付支付类型,APP支付此参数必填"
              }
            ],
            "x-go-json": "appPayType",
            "x-go-name": "AppPayType",
            "x-go-validate": "@string{,WECHAT,ALIPAY,UNIONPAY}"
          },
          "bankCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvBankType"
              },
              {
                "description": "网银支付,银行代码，网银支付此参数必填"
              }
            ],
            "x-go-json": "bankCode",
            "x-go-name": "BankCode"
          },
          "bindID": {
            "type": "string",
            "format": "uint64",
            "minimum": 0,
            "description": "收银宝快捷支付此参数必填，绑卡流水",
            "default": "0",
            "x-go-json": "bindID,string",
            "x-go-name": "BindID",
            "x-go-validate": "@uint64[0,]"
          },
          "channelType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvChannelType"
              },
              {
                "enum": [
                  "",
                  "WECHAT_APPLET",
                  "CPCN_PAY",
                  "CPCN_MERCHANT_ONLINE_BANK",
                  "CPCN_MERCHANT_QUICK",
                  "CPCN_MERCHANT_POSITIVE_SCAN_CODE",
                  "CPCN_MERCHANT_OFFICIAL_ACCOUNT",
                  "MYBANK_VOSTRO",
                  "CPCN_ACCOUNT_QUICK",
                  "CPCN_ACCOUNT_ONLINE_BANK",
                  "CPCN_ACCOUNT_POSITIVE_SCAN_CODE",
                  "CPCN_ACCOUNT_OFFICIAL_ACCOUNT",
                  "CPCN_ACCOUNT_TRANSFER",
                  "CPCN_ACCOUNT_BALANCE",
                  "CPCN_ACCOUNT_APP",
                  "CPCN_ACCOUNT_ALL_POSITIVE_SCAN_CODE",
                  "CPCN_ACCOUNT_ALL_NEGATIVE_SCAN_CODE",
                  " MYBANK_CLOUD_FUNDS_MINIAPP",
                  " VSP_QUICK",
                  " VSP_ONLINE_BANK",
                  " VSP_OFFICIAL_ACCOUNT",
                  " VSP_POSITIVE_SCAN_CODE",
                  " VSP_NEGATIVE_SCAN_CODE",
                  " VSP_APP"
                ],
                "description": "支付渠道(若创建交易单时未指定支付渠道，支付时必传, 此处传递的支付渠道会覆盖创建交易单时传的支付渠道)"
              }
            ],
            "x-go-json": "channelType",
            "x-go-name": "ChannelType",
            "x-go-validate": "@string{,WECHAT_APPLET,CPCN_PAY,CPCN_MERCHANT_ONLINE_BANK,CPCN_MERCHANT_QUICK,CPCN_MERCHANT_POSITIVE_SCAN_CODE,CPCN_MERCHANT_OFFICIAL_ACCOUNT,MYBANK_VOSTRO,CPCN_ACCOUNT_QUICK,CPCN_ACCOUNT_ONLINE_BANK,CPCN_ACCOUNT_POSITIVE_SCAN_CODE,CPCN_ACCOUNT_OFFICIAL_ACCOUNT,CPCN_ACCOUNT_TRANSFER,CPCN_ACCOUNT_BALANCE,CPCN_ACCOUNT_APP,CPCN_ACCOUNT_ALL_POSITIVE_SCAN_CODE,CPCN_ACCOUNT_ALL_NEGATIVE_SCAN_CODE, MYBANK_CLOUD_FUNDS_MINIAPP, VSP_QUICK, VSP_ONLINE_BANK, VSP_OFFICIAL_ACCOUNT, VSP_POSITIVE_SCAN_CODE, VSP_NEGATIVE_SCAN_CODE, VSP_APP}"
          },
          "cvn2": {
            "type": "string",
            "maxLength": 3,
            "minLength": 0,
            "description": "快捷支付,信用卡背面的末3位数字,快捷支付卡类型为信用卡此参数必填",
            "x-go-json": "cvn2",
            "x-go-name": "CVN2",
            "x-go-validate": "@string[0,3]"
          },
          "isMiniApp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bool"
              },
              {
                "enum": [
                  "",
                  "TRUE",
                  "FALSE"
                ],
                "description": "公众号支付， 是否为小程序支付",
                "default": "TRUE"
              }
            ],
            "x-go-json": "isMiniApp",
            "x-go-name": "IsMiniApp",
            "x-go-validate": "@string{,TRUE,FALSE}"
          },
          "openID": {
            "type": "string",
            "maxLength": 128,
            "minLength": 0,
            "description": "openID，微信小程序支付此参数必填",
            "x-go-json": "openID",
            "x-go-name": "OpenID",
            "x-go-validate": "@string[0,128]"
          },
          "paymentWayType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayOfficialAccountsPaymentWayType"
              },
              {
                "description": "公众号支付,公众号类型,商户模式公众号支付此参数必填"
              }
            ],
            "x-go-json": "paymentWayType",
            "x-go-name": "PaymentWayType"
          },
          "scanCodeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScanCodeType"
              },
              {
                "enum": [
                  "",
                  "WECHAT",
                  "ALIPAY",
                  "UNIONPAY"
                ],
                "description": "扫码支付,支付方式, 扫码支付此参数必填"
              }
            ],
            "x-go-json": "scanCodeType",
            "x-go-name": "ScanCodeType",
            "x-go-validate": "@string{,WECHAT,ALIPAY,UNIONPAY}"
          },
          "scanPaymentCode": {
            "type": "string",
            "description": "账户模式条码支付方式-聚合码-反扫授权码",
            "x-go-json": "scanPaymentCode",
            "x-go-name": "ScanPaymentCode",
            "x-go-validate": "@char[0,32]"
          },
          "smsValidationCode": {
            "type": "string",
            "maxLength": 6,
            "minLength": 0,
            "description": "快捷支付,短信验证码,快捷支付此参数必填",
            "x-go-json": "smsValidationCode",
            "x-go-name": "SMSValidationCode",
            "x-go-validate": "@string[0,6]"
          },
          "testUID": {
            "type": "string",
            "description": "网商云资金-小程序支付，测试uid，测试环境必填",
            "x-go-json": "testUID",
            "x-go-name": "TestUID",
            "x-go-validate": "@char[0,32]"
          },
          "thpInfo": {
            "type": "string",
            "description": "收银宝快捷支付此参数必填，发送支付短信时返回的透传信息",
            "x-go-json": "thpInfo",
            "x-go-name": "ThpInfo",
            "x-go-validate": "@char[0,512]"
          },
          "validDate": {
            "type": "string",
            "maxLength": 4,
            "minLength": 0,
            "description": "快捷支付,信用卡有效期,格式 YYMM, 快捷支付卡类型为信用卡此参数必填",
            "x-go-json": "validDate",
            "x-go-name": "ValidDate",
            "x-go-validate": "@string[0,4]"
          }
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/pay.PayTransBody"
      },
      "PrimaryID": {
        "type": "object",
        "x-go-named": "go-hummer/sqlx/presets.PrimaryID"
      },
      "Prod": {
        "type": "object",
        "properties": {
          "creditRate": {
            "type": "string",
            "description": "信用卡费率,例如3.5代表千分之3.5 （借贷分离者必填）",
            "x-go-json": "creditRate,omitempty",
            "x-go-name": "CreditRate",
            "x-go-validate": "@char[0,8]"
          },
          "feeCycle": {
            "type": "string",
            "description": "收费周期,2-日结, 4-月结",
            "x-go-json": "feeCycle,omitempty",
            "x-go-name": "FeeCycle",
            "x-go-validate": "@char[0,2]"
          },
          "feePen": {
            "type": "string",
            "description": "元/笔, 仅当网上收银-网关B2B  时配置其他交易类型为空",
            "x-go-json": "feePen,omitempty",
            "x-go-name": "FeePen",
            "x-go-validate": "@char[0,8]"
          },
          "feeRate": {
            "type": "string",
            "description": "费率 千分之, 例如3.5代表千分之3.5（区分借贷分离时为借记卡费率）",
            "x-go-json": "feeRate,omitempty",
            "x-go-name": "FeeRate",
            "x-go-validate": "@char[0,8]"
          },
          "lowLimit": {
            "type": "string",
            "description": "保底（仅支持借记卡）",
            "x-go-json": "lowLimit,omitempty",
            "x-go-name": "LowLimit"
          },
          "mtrxCode": {
            "type": "string",
            "description": "交易类型",
            "x-go-json": "mtrxCode,omitempty",
            "x-go-name": "MtrxCode",
            "x-go-validate": "@char[0,20]"
          },
          "pid": {
            "type": "string",
            "description": "产品名称,P0003,P0003-网上收银",
            "default": "P0003",
            "x-go-json": "pid,omitempty",
            "x-go-name": "PID",
            "x-go-validate": "@char[0,8]"
          },
          "topLimit": {
            "type": "string",
            "description": "封顶（仅支持借记卡）",
            "x-go-json": "topLimit,omitempty",
            "x-go-name": "TopLimit"
          }
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.Prod"
      },
      "Product": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "$ref": "#/components/schemas/OperateTime"
          },
          {
            "$ref": "#/components/schemas/SoftDelete"
          },
          {
            "type": "object",
            "properties": {
              "allowOpen": {
                "type": "string",
                "description": "允许开户的类型",
                "x-go-json": "allowOpen",
                "x-go-name": "AllowOpen"
              },
              "authPath": {
                "type": "string",
                "description": "小程序，公众号支付路径配置",
                "x-go-json": "authPath",
                "x-go-name": "AuthPath"
              },
              "handingFeeRule": {
                "type": "string",
                "description": "手续费扣费规则配置",
                "x-go-json": "handingFeeRule",
                "x-go-name": "HandingFeeRule"
              },
              "platform": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvPlatform"
                  },
                  {
                    "description": "平台"
                  }
                ],
                "x-go-json": "platform",
                "x-go-name": "Platform"
              },
              "productCode": {
                "type": "string",
                "description": "产品代码",
                "x-go-json": "productCode",
                "x-go-name": "ProductCode"
              },
              "productID": {
                "type": "integer",
                "format": "uint64",
                "description": "产品ID",
                "x-go-json": "productID",
                "x-go-name": "ProductID"
              },
              "productName": {
                "type": "string",
                "description": "产品名称",
                "x-go-json": "productName",
                "x-go-name": "ProductName"
              },
              "provider": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvProviderType"
                  },
                  {
                    "description": "服务提供商"
                  }
                ],
                "x-go-json": "provider",
                "x-go-name": "Provider"
              },
              "workFlow": {
                "type": "string",
                "description": "该产品开户流程控制",
                "x-go-json": "workFlow",
                "x-go-name": "WorkFlow"
              }
            },
            "required": [
              "allowOpen",
              "authPath",
              "handingFeeRule",
              "platform",
              "productCode",
              "productID",
              "productName",
              "provider",
              "workFlow"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.Product"
      },
      "ProductLog": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "$ref": "#/components/schemas/OperateTime"
          },
          {
            "$ref": "#/components/schemas/SoftDelete"
          },
          {
            "type": "object",
            "properties": {
              "content": {
                "type": "string",
                "description": "操作内容",
                "x-go-json": "content",
                "x-go-name": "Content"
              },
              "operatorID": {
                "type": "string",
                "description": "操作人",
                "x-go-json": "operatorID",
                "x-go-name": "OperatorID"
              },
              "operatorName": {
                "type": "string",
                "description": "操作人名称",
                "x-go-json": "operatorName",
                "x-go-name": "OperatorName"
              },
              "productID": {
                "type": "string",
                "format": "uint64",
                "description": "产品ID",
                "x-go-json": "productID,string",
                "x-go-name": "ProductID"
              }
            },
            "required": [
              "content",
              "operatorID",
              "operatorName",
              "productID"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.ProductLog"
      },
      "ProductLogList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ProductLog"
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.ProductLogList"
      },
      "Province": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "省编码",
            "x-go-json": "id",
            "x-go-name": "ID"
          },
          "name": {
            "type": "string",
            "description": "省名称",
            "x-go-json": "name",
            "x-go-name": "Name"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/tools.Province"
      },
      "QueryBindCardAndAccountBody": {
        "type": "object",
        "properties": {
          "operationFlag": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayOperationFlag"
              },
              {
                "description": "操作标识: 10=绑卡 20=解绑"
              }
            ],
            "x-go-json": "operationFlag",
            "x-go-name": "OperationFlag"
          },
          "sourceTxCode": {
            "type": "string",
            "enum": [
              "4601",
              "4611"
            ],
            "description": "原业务交易编码: 4601=开户 4611=绑卡",
            "x-go-json": "sourceTxCode",
            "x-go-name": "SourceTxCode",
            "x-go-validate": "@string{4601,4611}"
          },
          "sourceTxSN": {
            "type": "string",
            "description": "原业务流水号",
            "x-go-json": "sourceTxSN",
            "x-go-name": "SourceTxSN",
            "x-go-validate": "@char[18,32]"
          },
          "uID": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "description": "绑定用户中心UID",
            "x-go-json": "uID",
            "x-go-name": "UID",
            "x-go-validate": "@string[1,32]"
          },
          "userType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayAccountUserType"
              },
              {
                "description": "用户类型: 11=个人用户 12=企业用户 13=个体工商, 注:原业务交易编码为 4601-开户时，用户类型必填"
              }
            ],
            "x-go-json": "userType",
            "x-go-name": "UserType"
          }
        },
        "required": [
          "uID",
          "sourceTxSN",
          "sourceTxCode"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.QueryBindCardAndAccountBody"
      },
      "QueryBindCardAndAccountResp": {
        "type": "object",
        "properties": {
          "availableVeriCount": {
            "type": "integer",
            "format": "int64",
            "description": "剩余可验证次数,注:企业银行账户绑定时不为空;最多可有效验证 3 次",
            "x-go-json": "availableVeriCount",
            "x-go-name": "AvailableVeriCount"
          },
          "dBank": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DBank"
              },
              {
                "description": "银行存管,注:银行存管下开户业务 的状态 Status=30 不为空，其他为空"
              }
            ],
            "x-go-json": "dBank",
            "x-go-name": "DBank"
          },
          "deadLine": {
            "type": "string",
            "description": "打款截止日期,注:格式:yyyyMMdd;企 业银行账户绑定时不为空;可验证有效期自申请之日起 3 个自然日",
            "x-go-json": "deadLine",
            "x-go-name": "DeadLine"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayCreateAccountUserStatus"
              },
              {
                "description": "状态: 10=已受理 15=待短信验证、待审核 16=审核通过 17=待被动打款验证 18=被动已打款待验证 20=处理中 30=成功 40=失败, 注:开户查询 15 代表待审核，绑卡查询 15 代表待短信验证"
              }
            ],
            "x-go-json": "status",
            "x-go-name": "Status"
          },
          "userID": {
            "type": "string",
            "description": "用户ID",
            "x-go-json": "userID",
            "x-go-name": "UserID"
          }
        },
        "required": [
          "userID",
          "status",
          "dBank",
          "availableVeriCount",
          "deadLine"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.QueryBindCardAndAccountResp"
      },
      "QueryCloudSignApplyBody": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "format": "uint64",
            "minimum": 1,
            "description": "申请单id",
            "x-go-json": "accountId,string",
            "x-go-name": "AccountID",
            "x-go-validate": "@uint64[1,]"
          },
          "contractNo": {
            "type": "string",
            "description": "签约号",
            "x-go-json": "contractNo",
            "x-go-name": "ContractNo"
          },
          "operatorID": {
            "type": "string",
            "description": "操作人id",
            "x-go-json": "operatorID",
            "x-go-name": "OperatorId",
            "x-go-validate": "@char[1,32]"
          },
          "operatorName": {
            "type": "string",
            "description": "操作人名称",
            "x-go-json": "operatorName",
            "x-go-name": "OperatorName",
            "x-go-validate": "@char[1,32]"
          }
        },
        "required": [
          "accountId",
          "operatorID",
          "operatorName"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.QueryCloudSignApplyBody"
      },
      "QueryCloudSignApplyRsp": {
        "type": "object",
        "properties": {
          "applyID": {
            "type": "string",
            "format": "uint64",
            "description": "申请单号",
            "x-go-json": "applyID,string",
            "x-go-name": "ApplyID"
          },
          "signStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvSignStatus"
              },
              {
                "description": "状态"
              }
            ],
            "x-go-json": "signStatus",
            "x-go-name": "SignStatus"
          }
        },
        "required": [
          "applyID",
          "signStatus"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.QueryCloudSignApplyRsp"
      },
      "QueryCpcnAccountBody": {
        "type": "object",
        "properties": {
          "uID": {
            "type": "string",
            "description": "绑定用户中心UID",
            "x-go-json": "uID",
            "x-go-name": "UID",
            "x-go-validate": "@char[1,32]"
          }
        },
        "required": [
          "uID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.QueryCpcnAccountBody"
      },
      "QueryCpcnAccountListBody": {
        "type": "object",
        "properties": {
          "endDate": {
            "type": "string",
            "description": "结束日期，格式: yyyyMMdd, 注:开始日期和结束日期不得大于7个自然日",
            "x-go-json": "endDate",
            "x-go-name": "EndDate",
            "x-go-validate": "@char[1,8]"
          },
          "pageIndex": {
            "type": "integer",
            "format": "int64",
            "description": "分页号",
            "default": "1",
            "x-go-json": "pageIndex",
            "x-go-name": "PageIndex"
          },
          "pageSize": {
            "type": "integer",
            "format": "int64",
            "maximum": 100,
            "minimum": 1,
            "description": "分页大小,注:最大100条",
            "default": "10",
            "x-go-json": "pageSize",
            "x-go-name": "PageSize",
            "x-go-validate": "@int[1,100]"
          },
          "startDate": {
            "type": "string",
            "description": "开始日期，格式: yyyyMMdd",
            "x-go-json": "startDate",
            "x-go-name": "StartDate",
            "x-go-validate": "@char[1,8]"
          },
          "uID": {
            "type": "string",
            "description": "绑定用户中心UID",
            "x-go-json": "uID",
            "x-go-name": "UID",
            "x-go-validate": "@char[1,32]"
          }
        },
        "required": [
          "uID",
          "startDate",
          "endDate"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.QueryCpcnAccountListBody"
      },
      "QueryCpcnAccountListResp": {
        "type": "object",
        "properties": {
          "currentPage": {
            "type": "integer",
            "format": "int64",
            "description": "当前页码",
            "x-go-json": "currentPage",
            "x-go-name": "CurrentPage"
          },
          "eAccountNumber": {
            "type": "string",
            "description": "电子账户号码, 注:银行存管时返回",
            "x-go-json": "eAccountNumber",
            "x-go-name": "EAccountNumber"
          },
          "item": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Item"
            },
            "description": "用户账户明细，出现 0-n 次",
            "x-go-json": "item",
            "x-go-name": "Item"
          },
          "totalCount": {
            "type": "integer",
            "format": "int64",
            "description": "记录总条数",
            "x-go-json": "totalCount",
            "x-go-name": "TotalCount"
          },
          "totalPage": {
            "type": "integer",
            "format": "int64",
            "description": "记录总页数",
            "x-go-json": "totalPage",
            "x-go-name": "TotalPage"
          },
          "userID": {
            "type": "string",
            "description": "用户 ID",
            "x-go-json": "userID",
            "x-go-name": "UserID"
          },
          "userName": {
            "type": "string",
            "description": "姓名",
            "x-go-json": "userName",
            "x-go-name": "UserName"
          },
          "userType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayAccountUserType"
              },
              {
                "description": "用户类型: 11=个人 12=企业 13 个体工商"
              }
            ],
            "x-go-json": "userType",
            "x-go-name": "UserType"
          }
        },
        "required": [
          "userID",
          "userName",
          "userType",
          "eAccountNumber",
          "totalCount",
          "totalPage",
          "currentPage",
          "item"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.QueryCpcnAccountListResp"
      },
      "QueryCpcnAccountResp": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "integer",
            "format": "uint64",
            "description": "用户ID",
            "x-go-json": "accountId",
            "x-go-name": "AccountId"
          },
          "balance": {
            "type": "integer",
            "format": "int64",
            "description": "可用账户余额,注:单位:分",
            "x-go-json": "balance",
            "x-go-name": "Balance"
          },
          "fee": {
            "type": "integer",
            "format": "int64",
            "description": "提现手续费",
            "x-go-json": "fee",
            "x-go-name": "Fee"
          },
          "feeMode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvHandingFeeMode"
              },
              {
                "description": "手续费扣费模式, PRECHARGE=预充值, TRADING=坐扣, 当为TRADING=坐扣时，实际可提现金额=可用账户余额 balance - 提现手续费 fee"
              }
            ],
            "x-go-json": "feeMode",
            "x-go-name": "FeeMode"
          },
          "frozenAmount": {
            "type": "integer",
            "format": "int64",
            "description": "冻结账户余额,注:单位:分",
            "x-go-json": "frozenAmount",
            "x-go-name": "FrozenAmount"
          },
          "receivableBalance": {
            "type": "integer",
            "format": "int64",
            "description": "在途余额,注:单位:分",
            "x-go-json": "receivableBalance",
            "x-go-name": "ReceivableBalance"
          },
          "receivedBalance": {
            "type": "integer",
            "format": "int64",
            "description": "到账余额注:单位:分, 可结算提现金额",
            "x-go-json": "receivedBalance",
            "x-go-name": "ReceivedBalance"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayAccountUserStatus"
              },
              {
                "description": "账户状态: 10=正常 20=注销"
              }
            ],
            "x-go-json": "status",
            "x-go-name": "Status"
          },
          "userName": {
            "type": "string",
            "description": "用户名称",
            "x-go-json": "userName",
            "x-go-name": "UserName"
          },
          "userType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayAccountBalanceUserType"
              },
              {
                "description": "用户类型: 10=个人用户 20=企业用户 30=机构用户 40=匿名用户 15=个体工商户用户"
              }
            ],
            "x-go-json": "userType",
            "x-go-name": "UserType"
          }
        },
        "required": [
          "userName",
          "accountId",
          "balance",
          "receivableBalance",
          "receivedBalance",
          "frozenAmount",
          "userType",
          "status",
          "fee",
          "feeMode"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.QueryCpcnAccountResp"
      },
      "QueryInstitutionPayAccountBody": {
        "type": "object",
        "properties": {
          "institutionID": {
            "type": "string",
            "description": "机构ID,默认查询 005795",
            "x-go-json": "institutionID",
            "x-go-name": "InstitutionID",
            "x-go-validate": "@char[0,10]"
          },
          "paymentAccountName": {
            "type": "string",
            "description": "账户名称",
            "x-go-json": "paymentAccountName",
            "x-go-name": "PaymentAccountName",
            "x-go-validate": "@char[1,256]"
          },
          "paymentAccountNumber": {
            "type": "string",
            "description": "账户号码",
            "x-go-json": "paymentAccountNumber",
            "x-go-name": "PaymentAccountNumber",
            "x-go-validate": "@char[5,32]"
          }
        },
        "required": [
          "paymentAccountName",
          "paymentAccountNumber"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.QueryInstitutionPayAccountBody"
      },
      "QueryInstitutionPayAccountResp": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "integer",
            "format": "int64",
            "description": "可用账户余额,注:单位:分",
            "x-go-json": "balance",
            "x-go-name": "Balance"
          },
          "institutionID": {
            "type": "string",
            "description": "机构编号",
            "x-go-json": "institutionID",
            "x-go-name": "InstitutionID"
          },
          "paymentAccountName": {
            "type": "string",
            "description": "账户名称",
            "x-go-json": "paymentAccountName",
            "x-go-name": "PaymentAccountName"
          },
          "paymentAccountNumber": {
            "type": "string",
            "description": "账户号码",
            "x-go-json": "paymentAccountNumber",
            "x-go-name": "PaymentAccountNumber"
          },
          "paymentAccountUsage": {
            "type": "string",
            "description": "账户用途 10=一般用途，20=手续费账户",
            "x-go-json": "paymentAccountUsage",
            "x-go-name": "PaymentAccountUsage"
          }
        },
        "required": [
          "institutionID",
          "paymentAccountName",
          "paymentAccountNumber",
          "paymentAccountUsage",
          "balance"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.QueryInstitutionPayAccountResp"
      },
      "QueryMiniAppDoSplitBody": {
        "type": "object",
        "properties": {
          "shareOrderNo": {
            "type": "string",
            "description": "网商分账单号",
            "x-go-json": "shareOrderNo",
            "x-go-name": "ShareOrderNo",
            "x-go-validate": "@char[0,64]"
          },
          "splitBillId": {
            "type": "integer",
            "format": "uint64",
            "minimum": 1,
            "description": "分账账单id",
            "x-go-json": "splitBillId",
            "x-go-name": "SplitBillID",
            "x-go-validate": "@uint64[1,]"
          },
          "transID": {
            "type": "integer",
            "format": "uint64",
            "minimum": 1,
            "description": "交易单号",
            "x-go-json": "transID",
            "x-go-name": "TransID",
            "x-go-validate": "@uint64[1,]"
          }
        },
        "required": [
          "splitBillId",
          "transID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/mybank.QueryMiniAppDoSplitBody"
      },
      "QueryOrder1330ResponseBody": {
        "type": "object",
        "properties": {
          "Balance": {
            "type": "integer",
            "format": "int64",
            "description": "订单余额",
            "x-go-name": "Balance",
            "x-tag-xml": "Balance"
          },
          "InstitutionID": {
            "type": "string",
            "description": "机构编号",
            "x-go-name": "InstitutionID",
            "x-tag-xml": "InstitutionID"
          },
          "MarketOrderBatchGathering": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketOrderBatchGathering"
            },
            "description": "批量带扣",
            "x-go-name": "MarketOrderBatchGathering",
            "x-tag-xml": "MarketOrderBatchGathering"
          },
          "MarketOrderGathering": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketOrderGathering"
            },
            "description": "带扣流水",
            "x-go-name": "MarketOrderGathering",
            "x-tag-xml": "MarketOrderGathering"
          },
          "MarketOrderGatheringSMS": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketOrderGatheringSMS"
            },
            "x-go-name": "MarketOrderGatheringSMS",
            "x-tag-xml": "MarketOrderGatheringSMS"
          },
          "MarketOrderO2OPayment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketOrderO2OPayment"
            },
            "x-go-name": "MarketOrderO2OPayment",
            "x-tag-xml": "MarketOrderO2OPayment"
          },
          "MarketOrderScanPayment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketOrderScanPayment"
            },
            "x-go-name": "MarketOrderScanPayment",
            "x-tag-xml": "MarketOrderScanPayment"
          },
          "OrderAuthPayment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderAuthPayment"
            },
            "x-go-name": "OrderAuthPayment",
            "x-tag-xml": "OrderAuthPayment"
          },
          "OrderBookPayment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderBookPayment"
            },
            "x-go-name": "OrderBookPayment",
            "x-tag-xml": "OrderBookPayment"
          },
          "OrderNo": {
            "type": "string",
            "description": "订单号",
            "x-go-name": "OrderNo",
            "x-tag-xml": "OrderNo"
          },
          "OrderPOSPayment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderPOSPayment"
            },
            "x-go-name": "OrderPOSPayment",
            "x-tag-xml": "OrderPOSPayment"
          },
          "OrderPayment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderPayment"
            },
            "description": "支付列表",
            "x-go-name": "OrderPayment",
            "x-tag-xml": "OrderPayment"
          },
          "OrderQuickPayment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderQuickPayment"
            },
            "description": "快捷支付",
            "x-go-name": "OrderQuickPayment",
            "x-tag-xml": "OrderQuickPayment"
          },
          "OrderSettlement": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderSettlement"
            },
            "description": "结算列表",
            "x-go-name": "OrderSettlement",
            "x-tag-xml": "OrderSettlement"
          },
          "ResponseCode": {
            "type": "string",
            "description": "响应代码(查询记录超过 10000 笔时，不返回明细)",
            "x-go-name": "ResponseCode",
            "x-tag-xml": "ResponseCode"
          },
          "ResponseMessage": {
            "type": "string",
            "description": "响应消息(查询记录超过 10000 笔时，不返回明细)",
            "x-go-name": "ResponseMessage",
            "x-tag-xml": "ResponseMessage"
          },
          "TotalCount": {
            "type": "integer",
            "format": "int64",
            "description": "交易明细总数",
            "x-go-name": "TotalCount",
            "x-tag-xml": "TotalCount"
          }
        },
        "required": [
          "Balance",
          "InstitutionID",
          "MarketOrderBatchGathering",
          "MarketOrderGathering",
          "MarketOrderGatheringSMS",
          "MarketOrderO2OPayment",
          "MarketOrderScanPayment",
          "OrderAuthPayment",
          "OrderBookPayment",
          "OrderNo",
          "OrderPOSPayment",
          "OrderPayment",
          "OrderQuickPayment",
          "OrderSettlement",
          "ResponseCode",
          "ResponseMessage",
          "TotalCount"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.QueryOrder1330ResponseBody"
      },
      "QuerySignApplyRsp": {
        "type": "object",
        "properties": {
          "applyID": {
            "type": "string",
            "format": "uint64",
            "description": "申请单号",
            "x-go-json": "applyID,string",
            "x-go-name": "ApplyID"
          },
          "phoneNumber": {
            "type": "string",
            "description": "签约手机号",
            "x-go-json": "phoneNumber",
            "x-go-name": "PhoneNumber"
          },
          "providerSignStatus": {
            "type": "string",
            "description": "服务商签约状态",
            "x-go-json": "providerSignStatus",
            "x-go-name": "ProviderSignStatus"
          },
          "signStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvSignStatus"
              },
              {
                "description": "状态"
              }
            ],
            "x-go-json": "signStatus",
            "x-go-name": "SignStatus"
          }
        },
        "required": [
          "applyID",
          "phoneNumber",
          "providerSignStatus",
          "signStatus"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.QuerySignApplyRsp"
      },
      "QuerySplitRefundBody": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "description": "错误码",
            "x-go-json": "errorCode",
            "x-go-name": "ErrorCode",
            "x-go-validate": "@char[0,100]"
          },
          "errorDesc": {
            "type": "string",
            "description": "错误详情",
            "x-go-json": "errorDesc",
            "x-go-name": "ErrorDesc",
            "x-go-validate": "@char[0,1900]"
          },
          "splitBillId": {
            "type": "integer",
            "format": "uint64",
            "minimum": 1,
            "description": "分账账单id",
            "x-go-json": "splitBillId",
            "x-go-name": "SplitBillID",
            "x-go-validate": "@uint64[1,]"
          }
        },
        "required": [
          "splitBillId"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/mybank.QuerySplitRefundBody"
      },
      "QuerySubmitMerchantInfoBody": {
        "type": "object",
        "properties": {
          "applyNo": {
            "type": "string",
            "description": "申请流水号",
            "x-go-json": "applyNo",
            "x-go-name": "ApplyNo",
            "x-go-validate": "@char[6,32]"
          }
        },
        "required": [
          "applyNo"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.QuerySubmitMerchantInfoBody"
      },
      "QuerySubmitMerchantInfoResp": {
        "type": "object",
        "properties": {
          "responseTime": {
            "type": "string",
            "description": "响应时间 格式:yyyyMMddhh24mmss",
            "x-go-json": "responseTime",
            "x-go-name": "ResponseTime"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayAccountOpenChannelStatus"
              },
              {
                "description": "进件状态: 20 - 受理成功 50 - 失败"
              }
            ],
            "x-go-json": "status",
            "x-go-name": "Status"
          }
        },
        "required": [
          "status",
          "responseTime"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.QuerySubmitMerchantInfoResp"
      },
      "QueryTransferRsp": {
        "type": "object",
        "properties": {
          "payStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvTransPayStatus"
              },
              {
                "description": "转账交易状态"
              }
            ],
            "x-go-json": "payStatus",
            "x-go-name": "PayStatus"
          },
          "settlementID": {
            "type": "integer",
            "format": "uint64",
            "description": "结算单号",
            "x-go-json": "settlementID",
            "x-go-name": "SettlementID"
          },
          "settlementStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvSettlementStatus"
              },
              {
                "description": "结算状态"
              }
            ],
            "x-go-json": "settlementStatus",
            "x-go-name": "SettlementStatus"
          },
          "transID": {
            "type": "integer",
            "format": "uint64",
            "description": "转账交易单",
            "x-go-json": "transID",
            "x-go-name": "TransID"
          }
        },
        "required": [
          "transID",
          "payStatus",
          "settlementID",
          "settlementStatus"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/transfer.QueryTransferRsp"
      },
      "QueryVspSignApplyBody": {
        "type": "object",
        "properties": {
          "accountID": {
            "type": "integer",
            "format": "uint64",
            "minimum": 1,
            "description": "收银宝商户id vsp_m_id",
            "x-go-json": "accountID",
            "x-go-name": "AccountID",
            "x-go-validate": "@uint64[1,]"
          },
          "auditStatus": {
            "type": "string",
            "description": "审核状态 0-签约成功 1-签约失败",
            "x-go-json": "auditStatus",
            "x-go-name": "AuditStatus",
            "x-go-validate": "@char[1,12]"
          },
          "operatorID": {
            "type": "string",
            "description": "操作人id",
            "x-go-json": "operatorID",
            "x-go-name": "OperatorId",
            "x-go-validate": "@char[1,32]"
          },
          "operatorName": {
            "type": "string",
            "description": "操作人名称",
            "x-go-json": "operatorName",
            "x-go-name": "OperatorName",
            "x-go-validate": "@char[1,32]"
          },
          "retMsg": {
            "type": "string",
            "description": "签约失败错误信息",
            "x-go-json": "retMsg",
            "x-go-name": "RetMsg"
          }
        },
        "required": [
          "accountID",
          "auditStatus",
          "operatorID",
          "operatorName"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.QueryVspSignApplyBody"
      },
      "QuickPayBindCardStatus": {
        "type": "string",
        "enum": [
          "DEALING",
          "FAIL",
          "REMOVED",
          "SUCCESS"
        ],
        "x-enum-labels": [
          "绑定处理中",
          "绑定失败",
          "解绑成功",
          "绑定成功"
        ],
        "x-enum-vals": [
          1,
          2,
          4,
          3
        ],
        "x-enum-values": [
          "DEALING",
          "FAIL",
          "REMOVED",
          "SUCCESS"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/constants/types.QuickPayBindCardStatus"
      },
      "QuickPayBindCardVerifyStatus": {
        "type": "string",
        "enum": [
          "DEALING",
          "FAIL",
          "SUCCESS",
          "TIMEOUT"
        ],
        "x-enum-labels": [
          "处理中",
          "验证未通过",
          "验证通过",
          "验证码超时"
        ],
        "x-enum-vals": [
          1,
          3,
          4,
          2
        ],
        "x-enum-values": [
          "DEALING",
          "FAIL",
          "SUCCESS",
          "TIMEOUT"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/constants/types.QuickPayBindCardVerifyStatus"
      },
      "ReBindBody": {
        "type": "object",
        "properties": {
          "bindCode": {
            "type": "string",
            "description": "新绑定手机号验证码",
            "x-go-json": "bindCode",
            "x-go-name": "BindCode",
            "x-go-validate": "@char[1,6]"
          },
          "buCompanyId": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0,
            "description": "业务方公司id, 和支付服务公司id二选一",
            "default": "0",
            "x-go-json": "buCompanyId",
            "x-go-name": "BuCompanyID",
            "x-go-validate": "@uint64[0,]"
          },
          "companyId": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0,
            "description": "公司id，和业务方公司id二选一",
            "default": "0",
            "x-go-json": "companyId",
            "x-go-name": "CompanyID",
            "x-go-validate": "@uint64[0,]"
          },
          "mobile": {
            "type": "string",
            "description": "新绑定手机号",
            "x-go-json": "mobile",
            "x-go-name": "Mobile",
            "x-go-validate": "@char[1,32]"
          },
          "platform": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountPlatformType"
              },
              {
                "description": "账户来源平台,传递业务方公司id时必填"
              }
            ],
            "x-go-json": "platform",
            "x-go-name": "Platform"
          },
          "removeCode": {
            "type": "string",
            "description": "解绑手机验证码",
            "x-go-json": "removeCode",
            "x-go-name": "RemoveCode",
            "x-go-validate": "@char[1,6]"
          }
        },
        "required": [
          "removeCode",
          "mobile",
          "bindCode"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/company.ReBindBody"
      },
      "ReBindRsp": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "token",
            "x-go-json": "token",
            "x-go-name": "Token"
          }
        },
        "required": [
          "token"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/company.ReBindRsp"
      },
      "ReSendPaySMSRsp": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string",
            "description": "手机号",
            "x-go-json": "phone",
            "x-go-name": "Phone"
          },
          "transID": {
            "type": "integer",
            "format": "uint64",
            "description": "交易单号",
            "x-go-json": "transID",
            "x-go-name": "TransID"
          }
        },
        "required": [
          "transID",
          "phone"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/pay.ReSendPaySMSRsp"
      },
      "RechargeHandingFeeBody": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "description": "充值金额(单位=分)/网商银行充值充值交易次数,",
            "x-go-json": "amount",
            "x-go-name": "Amount",
            "x-go-validate": "@int64[1,]"
          },
          "channelType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvChannelType"
              },
              {
                "description": "支付渠道"
              }
            ],
            "x-go-json": "channelType",
            "x-go-name": "ChannelType"
          },
          "comment": {
            "type": "string",
            "description": "充值说明",
            "x-go-json": "comment",
            "x-go-name": "Comment",
            "x-go-validate": "@char[0,100]"
          },
          "handingType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvHandingFeeType"
              },
              {
                "enum": [
                  "",
                  "RECHARGE",
                  "GIFT"
                ],
                "description": "类型"
              }
            ],
            "x-go-json": "handingType",
            "x-go-name": "HandingType",
            "x-go-validate": "@string{,RECHARGE,GIFT}"
          },
          "rechargeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RechargeType"
              },
              {
                "enum": [
                  "",
                  "HANDINGFEE",
                  "MYBANK_TRANSNUM"
                ],
                "description": "充值类型",
                "default": "HANDINGFEE"
              }
            ],
            "x-go-json": "rechargeType",
            "x-go-name": "RechargeType",
            "x-go-validate": "@string{,HANDINGFEE,MYBANK_TRANSNUM}"
          },
          "tradeNo": {
            "type": "string",
            "description": "业务方充值交易单号",
            "x-go-json": "tradeNo",
            "x-go-name": "TradeNo",
            "x-go-validate": "@char[1,64]"
          }
        },
        "required": [
          "handingType",
          "tradeNo",
          "amount",
          "channelType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/handing_fee.RechargeHandingFeeBody"
      },
      "RechargeType": {
        "type": "string",
        "enum": [
          "HANDINGFEE",
          "MYBANK_TRANSNUM"
        ],
        "x-enum-labels": [
          "充值手续费",
          "充值网商银行转账笔数"
        ],
        "x-enum-vals": [
          1,
          2
        ],
        "x-enum-values": [
          "HANDINGFEE",
          "MYBANK_TRANSNUM"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/constants/types.RechargeType"
      },
      "ReduceTimingType": {
        "type": "string",
        "enum": [
          "SETTLEMENT",
          "TRANSFER"
        ],
        "x-enum-labels": [
          "结算时扣费",
          "转账时扣费"
        ],
        "x-enum-vals": [
          2,
          1
        ],
        "x-enum-values": [
          "SETTLEMENT",
          "TRANSFER"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/constants/types.ReduceTimingType"
      },
      "RefundTransBody": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "description": "退款原因（如果第三方支持展示退款原因将使用此字段）",
            "x-go-json": "comment",
            "x-go-name": "Comment",
            "x-go-validate": "@string[1,100]"
          },
          "notifyUrl": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "description": "退款结果异步通知地址",
            "x-go-json": "notifyUrl",
            "x-go-name": "NotifyUrl",
            "x-go-validate": "@string[1,100]"
          },
          "refundAmount": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "description": "退款金额(单位=分)",
            "x-go-json": "refundAmount",
            "x-go-name": "RefundAmount",
            "x-go-validate": "@int64[1,]"
          },
          "sourceIp": {
            "type": "string",
            "description": "退款发起方IP",
            "x-go-json": "sourceIp",
            "x-go-name": "SourceIP",
            "x-go-validate": "@ipv4"
          },
          "transID": {
            "type": "string",
            "format": "uint64",
            "minimum": 1,
            "description": "原支付交易单号",
            "x-go-json": "transID,string",
            "x-go-name": "TransID",
            "x-go-validate": "@uint64[1,]"
          },
          "userAgent": {
            "type": "string",
            "maxLength": 100,
            "minLength": 0,
            "description": "退款方userAgent",
            "x-go-json": "userAgent",
            "x-go-name": "UserAgent",
            "x-go-validate": "@string[0,100]"
          }
        },
        "required": [
          "transID",
          "refundAmount",
          "comment",
          "sourceIp",
          "notifyUrl"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/refund.RefundTransBody"
      },
      "RegisterBody": {
        "type": "object",
        "properties": {
          "alipayUid": {
            "type": "string",
            "description": "商户支付宝uid",
            "x-go-json": "alipayUid",
            "x-go-name": "AlipayUid",
            "x-go-validate": "@char[0,16]"
          },
          "authCode": {
            "type": "string",
            "description": "手机验证码。仅结算方式为“01结算到他行卡”及商户类型为“01 自然人、02 个体工商户”需要填写。 备注：须先调网商短信验证码发送接口，商户获取验证码后在申请页面回填验证码，合作方系统通过本接口统一上送。",
            "x-go-json": "authCode",
            "x-go-name": "AuthCode",
            "x-go-validate": "@char[0,8]"
          },
          "bankCardParam": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BankCardParam"
              },
              {
                "description": "支持交易类型列表。该商户能支持的交易类型，多个用逗号隔开。可选值： 01：正扫交易 02：反扫交易 06：退款交易 08: 动态订单扫码\nTradeTypeList []client_service_mybank_gateway.TradeType `json:\"tradeTypeList\"`\n支持支付渠道列表。该商户能支持的第三方支付渠道。多个用逗号隔开。可选值： 01：支付宝 02：微信支付\nPayChannelList []client_service_mybank_gateway.PayChannel `json:\"payChannelList\"`\n禁用支付方式。商户禁受理支付方式列表，多个用逗号隔开。可选值： 02：信用卡 03：花呗（仅支付宝） 备注：微信支付刷卡支付（被扫）模式无法禁用信用卡支付。\nDeniedPayToolList []client_service_mybank_gateway.DeniedPayType `json:\"deniedPayToolList\" default:\"\"`\n手续费列表。具体报文定义参考下面的手续费列表, 不填默认设置支付宝,T1手续费\nFeeParamList []FeeParam `json:\"feeParamList\" default:\"\"`\n清算卡参数，具体报文定义参考下面的清算卡"
              }
            ],
            "x-go-json": "bankCardParam",
            "x-go-name": "BankCardParam"
          },
          "cloudFundsInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CloudFundsInfo"
              },
              {
                "description": "云资金信息"
              }
            ],
            "x-go-json": "cloudFundsInfo",
            "x-go-name": "CloudFundsInfo"
          },
          "dealType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceMybankGatewayDealType"
              },
              {
                "description": "商户经营类型。可选值： 01:实体特约商户 02:网络特约商户 03:实体兼网络特约商户"
              }
            ],
            "x-go-json": "dealType",
            "x-go-name": "DealType"
          },
          "mcc": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceMybankGatewayBusinessType"
              },
              {
                "description": "经营类目。参见附录的经营类目上送,2015050700000000:美食, 2015091000052157:超市便利店, 2015062600004525:休闲娱乐, 2015062600002758:购物, 2016062900190124:爱车, 2015063000020189:生活服务, 2016042200000148:教育培训, 2016062900190296:医疗健康, 2015080600000001:航旅, 2016062900190337:专业销售/批发, 2016062900190371:政府/社会组织"
              }
            ],
            "x-go-json": "mcc",
            "x-go-name": "Mcc"
          },
          "merchantDetail": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MerchantDetail"
              },
              {
                "description": "商户详情列表。具体报文定义参考商户详情"
              }
            ],
            "x-go-json": "merchantDetail",
            "x-go-name": "MerchantDetail"
          },
          "merchantName": {
            "type": "string",
            "description": "商户名称。有营业执照的，要求与营业执照上的名称一致。注:最多50个汉字或字符，可以包含特殊字符",
            "x-go-json": "merchantName",
            "x-go-name": "MerchantName",
            "x-go-validate": "@char[1,50]"
          },
          "merchantType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceMybankGatewayMerchantType"
              },
              {
                "description": "商户类型。可选值： 01:自然人 02:个体工商户 03:企业商户 说明：以同一个身份证件办理的自然人商户受理信用卡的收款金额上限为日累计1000元、月累计1万，建议有营业执照的商户以个体或企业身份入驻"
              }
            ],
            "x-go-json": "merchantType",
            "x-go-name": "MerchantType"
          },
          "outMerchantId": {
            "type": "string",
            "description": "外部商户号。合作商对商户的自定义编码，要求同一个合作商下保持唯一, 这里使用商户入驻申请的申请单号",
            "x-go-json": "outMerchantId",
            "x-go-name": "OutMerchantId",
            "x-go-validate": "@char[1,64]"
          }
        },
        "required": [
          "outMerchantId",
          "merchantName",
          "merchantType",
          "dealType",
          "mcc",
          "merchantDetail",
          "bankCardParam"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/mybank.RegisterBody"
      },
      "RegisterQueryResp": {
        "type": "object",
        "properties": {
          "failReason": {
            "type": "string",
            "description": "入驻失败原因返回。当商户入驻结果为失败时返回。可能出现的失败原因描述见附录。",
            "x-go-json": "failReason",
            "x-go-name": "FailReason"
          },
          "merchantId": {
            "type": "string",
            "description": "商户号。网商为商户分配的商户号，通过商户入驻结果查询接口获取。",
            "x-go-json": "merchantId",
            "x-go-name": "MerchantId"
          },
          "orderNo": {
            "type": "string",
            "description": "申请单号",
            "x-go-json": "orderNo",
            "x-go-name": "OrderNo"
          },
          "outMerchantId": {
            "type": "string",
            "description": "外部商户号。",
            "x-go-json": "outMerchantId",
            "x-go-name": "OutMerchantId"
          },
          "outTradeNo": {
            "type": "string",
            "description": "外部交易号",
            "x-go-json": "outTradeNo",
            "x-go-name": "OutTradeNo"
          },
          "permitList": {
            "type": "string",
            "description": "商户限权原因信息返回。当商户入驻结果为成功，且商户资质不全导致被限权时，返回此信息，中文格式，|号分隔多种限权原因。",
            "x-go-json": "permitList",
            "x-go-name": "PermitList"
          },
          "registerStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MybankRegisterStatus"
              },
              {
                "description": "入驻结果。当入驻结果为审核中，请间隔时间回查。"
              }
            ],
            "x-go-json": "registerStatus",
            "x-go-name": "RegisterStatus"
          }
        },
        "required": [
          "merchantId",
          "registerStatus",
          "outTradeNo",
          "outMerchantId",
          "orderNo",
          "failReason",
          "permitList"
        ],
        "description": "商户入驻结果查询返回",
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/mybank.RegisterQueryResp"
      },
      "RegisterResp": {
        "type": "object",
        "properties": {
          "orderNo": {
            "type": "string",
            "description": "申请单号。合作方可通过此单号回查商户进件结果,网商申请单号",
            "x-go-json": "orderNo",
            "x-go-name": "OrderNo"
          },
          "outMerchantId": {
            "type": "string",
            "description": "外部商户号， 即为申请时，运营后台的申请单号",
            "x-go-json": "outMerchantId",
            "x-go-name": "OutMerchantId"
          },
          "outTradeNo": {
            "type": "string",
            "description": "外部交易号, 申请时唯一交易单号",
            "x-go-json": "outTradeNo",
            "x-go-name": "OutTradeNo"
          }
        },
        "required": [
          "outMerchantId",
          "orderNo",
          "outTradeNo"
        ],
        "description": "商户入驻返回",
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/mybank.RegisterResp"
      },
      "RemoveBindCardBody": {
        "type": "object",
        "properties": {
          "bindId": {
            "type": "integer",
            "format": "uint64",
            "description": "绑定流水id",
            "x-go-json": "bindId",
            "x-go-name": "BindId"
          },
          "uID": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "description": "绑定用户中心UID",
            "x-go-json": "uID",
            "x-go-name": "UID",
            "x-go-validate": "@string[1,32]"
          }
        },
        "required": [
          "uID",
          "bindId"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.RemoveBindCardBody"
      },
      "RemoveBindCardResp": {
        "type": "object",
        "properties": {
          "deadLine": {
            "type": "string",
            "description": "打款截止 日期; yyyyMMdd,企业银行账户绑定时不为空;注:有效期:3个自然日",
            "x-go-json": "deadLine",
            "x-go-name": "DeadLine"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayAccountBindCardStatus"
              },
              {
                "description": "状态: 18=被动已打 款待验证 20=处理中 30=成功 40=失败，注:当企业绑卡确认、打款金 额已校验但未成功且剩余可验证次数\u003e=1 时，状态为 18=被动已打款待验证; 当接口字段均已校验成功，但交易未完成，状态为 20=处理中"
              }
            ],
            "x-go-json": "status",
            "x-go-name": "Status"
          }
        },
        "required": [
          "status",
          "deadLine"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.RemoveBindCardResp"
      },
      "RemoveBindPhoneBody": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string",
            "description": "手机号",
            "x-go-json": "phone",
            "x-go-name": "Phone",
            "x-go-validate": "@char[1,32]"
          },
          "verificationCode": {
            "type": "string",
            "description": "验证码",
            "x-go-json": "verificationCode",
            "x-go-name": "VerificationCode",
            "x-go-validate": "@char[1,10]"
          }
        },
        "required": [
          "phone",
          "verificationCode"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.RemoveBindPhoneBody"
      },
      "RepairApplyRsp": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "补录资料链接",
            "x-go-json": "url",
            "x-go-name": "Url"
          }
        },
        "required": [
          "url"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.RepairApplyRsp"
      },
      "RespInfo": {
        "type": "object",
        "properties": {
          "ResultCode": {
            "type": "string",
            "description": "返回码, 当resultStatus为S时，该字段必定为0000 当resultStatus为F或U时，该字段可以为全局返回码，也可以为业务返回码。 如果为业务返回码，参见业务接口部分。",
            "x-go-name": "ResultCode",
            "x-tag-xml": "ResultCode"
          },
          "ResultMsg": {
            "type": "string",
            "description": "当resultStatus为S时，该字段可为空,当resultStatus为F或U时，需要描述该错误的原因",
            "x-go-name": "ResultMsg",
            "x-tag-xml": "ResultMsg"
          },
          "ResultStatus": {
            "type": "string",
            "description": "本次业务处理的状态，默认以下3个状态： S：成功，F：失败，U：未知 如不满足要求，可根据业务扩展\n注意：状态为U不代表交易失败，需要通过回查去处理，不能直接反馈客户交易失败。",
            "x-go-name": "ResultStatus",
            "x-tag-xml": "ResultStatus"
          }
        },
        "required": [
          "ResultCode",
          "ResultMsg",
          "ResultStatus"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_mybank_gateway.RespInfo"
      },
      "Retailer": {
        "type": "object",
        "properties": {
          "managerContactNumber": {
            "type": "string",
            "description": "经营者手机号码",
            "x-go-json": "managerContactNumber",
            "x-go-name": "ManagerContactNumber",
            "x-go-validate": "@char[0,16]"
          },
          "managerCredentialAddress": {
            "type": "string",
            "description": "经营者身份证地址,注:亿联银行存管必填",
            "x-go-json": "managerCredentialAddress",
            "x-go-name": "ManagerCredentialAddress",
            "x-go-validate": "@char[0,256]"
          },
          "managerCredentialNumber": {
            "type": "string",
            "description": "经营者证件号码",
            "x-go-json": "managerCredentialNumber",
            "x-go-name": "ManagerCredentialNumber",
            "x-go-validate": "@char[0,18]"
          },
          "managerCredentialType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayCredentialType"
              },
              {
                "description": "经营者证件 类型: 0-身份证"
              }
            ],
            "x-go-json": "managerCredentialType",
            "x-go-name": "ManagerCredentialType"
          },
          "managerEmail": {
            "type": "string",
            "description": "经营者邮箱",
            "x-go-json": "managerEmail",
            "x-go-name": "ManagerEmail",
            "x-go-validate": "@char[0,64]"
          },
          "managerExpiryDate": {
            "type": "string",
            "description": "经营者证件到期日, 格式YYYYMMDD",
            "x-go-json": "managerExpiryDate",
            "x-go-name": "ManagerExpiryDate",
            "x-go-validate": "@char[0,8]"
          },
          "managerIssDate": {
            "type": "string",
            "description": "经营者证件发证日,格式YYYYMMDD",
            "x-go-json": "managerIssDate",
            "x-go-name": "ManagerIssDate",
            "x-go-validate": "@char[0,8]"
          },
          "managerName": {
            "type": "string",
            "description": "经营者姓名",
            "x-go-json": "managerName",
            "x-go-name": "ManagerName",
            "x-go-validate": "@char[0,256]"
          },
          "managerOccupation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayOccupationType"
              },
              {
                "description": "经营者职业: 1A=各类专业， 技术人员 1B=国家机关， 党群组织，企事业单位的负责人 1C=办事人员和有关人员1D=商业工作人员 1E=服务性工作人员 1F=农林牧渔劳动者 1G=生产工作， 运输工作和部分体力劳动者 1H=不便分类的其他劳动者,注:亿联银行存管必填"
              }
            ],
            "x-go-json": "managerOccupation",
            "x-go-name": "ManagerOccupation"
          },
          "retailerAddress": {
            "type": "string",
            "description": "经营地址",
            "x-go-json": "retailerAddress",
            "x-go-name": "RetailerAddress",
            "x-go-validate": "@char[0,256]"
          },
          "retailerBusinessScope": {
            "type": "string",
            "description": "经营范围",
            "x-go-json": "retailerBusinessScope",
            "x-go-name": "RetailerBusinessScope",
            "x-go-validate": "@char[0,256]"
          },
          "retailerCity": {
            "type": "string",
            "description": "城市,如填写省份则城市为必填。",
            "x-go-json": "retailerCity",
            "x-go-name": "RetailerCity"
          },
          "retailerFormation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayRetailerFormation"
              },
              {
                "description": "组成形式: 10=个人经营 20=家庭经营"
              }
            ],
            "x-go-json": "retailerFormation",
            "x-go-name": "RetailerFormation"
          },
          "retailerLicenseExpiryDate": {
            "type": "string",
            "description": "个体工商执照到期日,格式YYYYMMDD",
            "x-go-json": "retailerLicenseExpiryDate",
            "x-go-name": "RetailerLicenseExpiryDate",
            "x-go-validate": "@char[0,8]"
          },
          "retailerLicenseIssDate": {
            "type": "string",
            "description": "个体工商执照发证日,格式YYYYMMDD",
            "x-go-json": "retailerLicenseIssDate",
            "x-go-name": "RetailerLicenseIssDate",
            "x-go-validate": "@char[0,8]"
          },
          "retailerName": {
            "type": "string",
            "description": "个体工商字号",
            "x-go-json": "retailerName",
            "x-go-name": "RetailerName",
            "x-go-validate": "@char[0,256]"
          },
          "retailerProvince": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayProvince"
              },
              {
                "description": "省份"
              }
            ],
            "x-go-json": "retailerProvince",
            "x-go-name": "RetailerProvince"
          },
          "retailerRegNumber": {
            "type": "string",
            "description": "个体工商注册号码",
            "x-go-json": "retailerRegNumber",
            "x-go-name": "RetailerRegNumber",
            "x-go-validate": "@char[0,18]"
          }
        },
        "description": "个体户开户",
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.Retailer"
      },
      "RetailerInfo": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "description": "城市ID",
            "x-go-json": "city,omitempty",
            "x-go-name": "City"
          },
          "cityName": {
            "type": "string",
            "description": "城市名称",
            "x-go-json": "cityName,omitempty",
            "x-go-name": "CityName",
            "x-go-validate": "@char[0,100]"
          },
          "district": {
            "type": "string",
            "description": "区/县ID",
            "x-go-json": "district,omitempty",
            "x-go-name": "District"
          },
          "districtName": {
            "type": "string",
            "description": "区/县名称,注:详见附录(市县 区行政单位.pdf)，根据区县对应附录填写;新商户接入必填，存量商户可空",
            "x-go-json": "districtName,omitempty",
            "x-go-name": "DistrictName",
            "x-go-validate": "@char[0,100]"
          },
          "managerContactNumber": {
            "type": "string",
            "description": "经营者手机号码",
            "x-go-json": "managerContactNumber,omitempty",
            "x-go-name": "ManagerContactNumber",
            "x-go-validate": "@char[0,16]"
          },
          "managerCredentialAddress": {
            "type": "string",
            "description": "经营者身份证地址",
            "x-go-json": "managerCredentialAddress,omitempty",
            "x-go-name": "ManagerCredentialAddress",
            "x-go-validate": "@char[0,256]"
          },
          "managerCredentialNumber": {
            "type": "string",
            "description": "经营者证件号码",
            "x-go-json": "managerCredentialNumber,omitempty",
            "x-go-name": "ManagerCredentialNumber",
            "x-go-validate": "@char[0,18]"
          },
          "managerCredentialType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvApplyCredentialType"
              },
              {
                "description": "经营者证件类型, 1-身份证, 2-外国护照, 5-港澳居民来往内地通行证, 6-台湾居民来往大陆通行证",
                "default": "1"
              }
            ],
            "x-go-json": "managerCredentialType,omitempty",
            "x-go-name": "ManagerCredentialType"
          },
          "managerEmail": {
            "type": "string",
            "description": "经营者邮箱",
            "x-go-json": "managerEmail,omitempty",
            "x-go-name": "ManagerEmail",
            "x-go-validate": "@char[0,64]"
          },
          "managerExpiryDate": {
            "type": "string",
            "description": "经营者证件到期日, 注:格式: yyyyMMdd;证件长期有效时为 20991231",
            "x-go-json": "managerExpiryDate,omitempty",
            "x-go-name": "ManagerExpiryDate",
            "x-go-validate": "@char[0,8]"
          },
          "managerIssDate": {
            "type": "string",
            "description": "经营者证件发证日 注:格式: yyyyMMdd",
            "x-go-json": "managerIssDate,omitempty",
            "x-go-name": "ManagerIssDate",
            "x-go-validate": "@char[0,8]"
          },
          "managerName": {
            "type": "string",
            "description": "经营者姓名",
            "x-go-json": "managerName,omitempty",
            "x-go-name": "ManagerName",
            "x-go-validate": "@char[0,256]"
          },
          "managerOccupation": {
            "type": "string",
            "description": "经营者职业: 1A=各类专业，技术人员 1B=国家机关， 党群组织，企事业单位的负责人 1C=办事人员和有关人员 1D=商业工作人员 1E=服务性工作人员 1F=农林牧渔劳 动者 1G=生产工作， 运输工作和部分 体力劳动者 1H=不便分类的 其他劳动者",
            "x-go-json": "managerOccupation,omitempty",
            "x-go-name": "ManagerOccupation",
            "x-go-validate": "@char[0,2]"
          },
          "province": {
            "type": "string",
            "description": "省份ID",
            "x-go-json": "province,omitempty",
            "x-go-name": "Province"
          },
          "provinceName": {
            "type": "string",
            "description": "省份名称",
            "x-go-json": "provinceName,omitempty",
            "x-go-name": "ProvinceName",
            "x-go-validate": "@char[0,100]"
          },
          "retailerAddress": {
            "type": "string",
            "description": "经营地址,注:银行存管模式必填;常驻信息包括(国家、省、市、 县、详细地址)",
            "x-go-json": "retailerAddress,omitempty",
            "x-go-name": "RetailerAddress",
            "x-go-validate": "@char[0,256]"
          },
          "retailerBusinessScope": {
            "type": "string",
            "description": "经营范围",
            "x-go-json": "retailerBusinessScope,omitempty",
            "x-go-name": "RetailerBusinessScope",
            "x-go-validate": "@char[0,256]"
          },
          "retailerFormation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvRetailerFormation"
              },
              {
                "description": "组成形式: 10=个人经营 20=家庭经营",
                "default": "10"
              }
            ],
            "x-go-json": "retailerFormation,omitempty",
            "x-go-name": "RetailerFormation"
          },
          "retailerLicenseExpiryDate": {
            "type": "string",
            "description": "个体工商执照到期日,注:格式: yyyyMMdd;证件长期 有效时为 20991231",
            "x-go-json": "retailerLicenseExpiryDate,omitempty",
            "x-go-name": "RetailerLicenseExpiryDate",
            "x-go-validate": "@char[0,8]"
          },
          "retailerLicenseIssDate": {
            "type": "string",
            "description": "个体工商执照发证日,注:格式: yyyyMMdd",
            "x-go-json": "retailerLicenseIssDate,omitempty",
            "x-go-name": "RetailerLicenseIssDate",
            "x-go-validate": "@char[0,8]"
          },
          "retailerName": {
            "type": "string",
            "description": "个体工商字号, 注:营业执照名称",
            "x-go-json": "retailerName,omitempty",
            "x-go-name": "RetailerName",
            "x-go-validate": "@char[0,256]"
          },
          "retailerRegNumber": {
            "type": "string",
            "description": "个体工商注册号码",
            "x-go-json": "retailerRegNumber,omitempty",
            "x-go-name": "RetailerRegNumber",
            "x-go-validate": "@char[0,18]"
          }
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.RetailerInfo"
      },
      "ReviewApplyBody": {
        "type": "object",
        "properties": {
          "applyID": {
            "type": "string",
            "format": "uint64",
            "minimum": 1,
            "description": "申请单id",
            "x-go-json": "applyID,string",
            "x-go-name": "ApplyID",
            "x-go-validate": "@uint64[1,]"
          },
          "applyStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvApplyStatus"
              },
              {
                "enum": [
                  "FIRST_APPROVED",
                  "FIRST_REJECTED",
                  "PROVIDER_APPROVED",
                  "PROVIDER_REJECTED",
                  "BINDCARD_SUBMITED",
                  "BINDCARD_OK",
                  "BINDCARD_FAIL",
                  "MERCHANT_INFO_OK",
                  "MERCHANT_INFO_REJECTED",
                  "AGREEMENT_SIGN_SUCCESS",
                  "AGREEMENT_SIGN_FAIL"
                ],
                "description": "审核状态流转"
              }
            ],
            "x-go-json": "applyStatus",
            "x-go-name": "ApplyStatus",
            "x-go-validate": "@string{FIRST_APPROVED,FIRST_REJECTED,PROVIDER_APPROVED,PROVIDER_REJECTED,BINDCARD_SUBMITED,BINDCARD_OK,BINDCARD_FAIL,MERCHANT_INFO_OK,MERCHANT_INFO_REJECTED,AGREEMENT_SIGN_SUCCESS,AGREEMENT_SIGN_FAIL}"
          },
          "comment": {
            "type": "string",
            "description": "备注",
            "x-go-json": "comment",
            "x-go-name": "Comment",
            "x-go-validate": "@char[0,200]"
          },
          "contactPerson": {
            "type": "string",
            "description": "收银宝财务联系人手机号,固定为高军扬或通联的人的手机号",
            "x-go-json": "contactPerson",
            "x-go-name": "ContactPerson",
            "x-go-validate": "@char[0,32]"
          },
          "feeMode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvHandingFeeMode"
              },
              {
                "description": "扣费模式, 默认为PRECHARGE=预扣, 可选值: PRECHARGE, TRADING",
                "default": "PRECHARGE"
              }
            ],
            "x-go-json": "feeMode",
            "x-go-name": "FeeMode"
          },
          "operatorID": {
            "type": "string",
            "description": "操作人id",
            "x-go-json": "operatorID",
            "x-go-name": "OperatorId",
            "x-go-validate": "@char[1,32]"
          },
          "operatorName": {
            "type": "string",
            "description": "操作人名称",
            "x-go-json": "operatorName",
            "x-go-name": "OperatorName",
            "x-go-validate": "@char[1,32]"
          },
          "settleMode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvSettleMode"
              },
              {
                "description": "资金结算模式, D0=D+0, T1=T+1, 默认为T1=T+1 可选值: D0, T1",
                "default": "T1"
              }
            ],
            "x-go-json": "settleMode",
            "x-go-name": "SettleMode"
          },
          "showFeeRate": {
            "type": "number",
            "format": "float",
            "maximum": 1,
            "minimum": 0,
            "description": "商户协议展示的手续费汇率, 仅通联渠道可用, 按单位千分, 如千六= 0.006",
            "default": "0",
            "x-go-json": "showFeeRate",
            "x-go-name": "ShowFeeRate",
            "x-go-validate": "@float32[0,1]"
          },
          "signPhoneNumber": {
            "type": "string",
            "description": "签约手机号",
            "x-go-json": "signPhoneNumber",
            "x-go-name": "SignPhoneNumber",
            "x-go-validate": "@char[0,32]"
          },
          "txSn": {
            "type": "string",
            "description": "商户进件流水，商户进件回调时使用",
            "x-go-json": "txSn",
            "x-go-name": "TxSn",
            "x-go-validate": "@char[0,32]"
          }
        },
        "required": [
          "applyID",
          "applyStatus",
          "operatorID",
          "operatorName"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.ReviewApplyBody"
      },
      "ScanCodeType": {
        "type": "string",
        "enum": [
          "ALIPAY",
          "ALLINONE",
          "UNIONPAY",
          "WECHAT"
        ],
        "x-enum-labels": [
          "支付宝扫码支付",
          "聚合码",
          "银联扫码支付",
          "微信扫码支付"
        ],
        "x-enum-vals": [
          2,
          4,
          3,
          1
        ],
        "x-enum-values": [
          "ALIPAY",
          "ALLINONE",
          "UNIONPAY",
          "WECHAT"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/constants/types.ScanCodeType"
      },
      "SearchApplyRsp": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplyList"
              },
              {
                "description": "数据"
              }
            ],
            "x-go-json": "data",
            "x-go-name": "Data"
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "偏移量",
            "x-go-json": "offset",
            "x-go-name": "Offset"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "每页数量",
            "x-go-json": "size",
            "x-go-name": "Size"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "总数",
            "x-go-json": "total",
            "x-go-name": "Total"
          }
        },
        "required": [
          "data",
          "offset",
          "size",
          "total"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.SearchApplyRsp"
      },
      "SearchSettTaskRsp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SettTask"
            },
            "description": "数据",
            "x-go-json": "data",
            "x-go-name": "Data"
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "偏移量",
            "x-go-json": "offset",
            "x-go-name": "Offset"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "每页数量",
            "x-go-json": "size",
            "x-go-name": "Size"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "总数",
            "x-go-json": "total",
            "x-go-name": "Total"
          }
        },
        "required": [
          "offset",
          "size",
          "total",
          "data"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/sett_task.SearchSettTaskRsp"
      },
      "SearchStatementRsp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchStatementRspData"
            },
            "description": "数据",
            "x-go-json": "data",
            "x-go-name": "Data"
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "偏移量",
            "x-go-json": "offset",
            "x-go-name": "Offset"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "每页数量",
            "x-go-json": "size",
            "x-go-name": "Size"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "总数",
            "x-go-json": "total",
            "x-go-name": "Total"
          }
        },
        "required": [
          "data",
          "offset",
          "size",
          "total"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/statement.SearchStatementRsp"
      },
      "SearchStatementRspData": {
        "type": "object",
        "properties": {
          "accountID": {
            "type": "string",
            "format": "uint64",
            "description": "账户ID",
            "x-go-json": "accountID,string",
            "x-go-name": "AccountID"
          },
          "balance": {
            "type": "integer",
            "format": "int64",
            "description": "剩余金额",
            "x-go-json": "balance",
            "x-go-name": "Balance"
          },
          "comment": {
            "type": "string",
            "description": "说明",
            "x-go-json": "comment",
            "x-go-name": "Comment"
          },
          "createTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MySQLTimestamp"
              },
              {
                "description": "创建时间"
              }
            ],
            "x-go-json": "createTime",
            "x-go-name": "CreateTime"
          },
          "sID": {
            "type": "string",
            "format": "uint64",
            "description": "流水id",
            "x-go-json": "sID,string",
            "x-go-name": "SID"
          },
          "totalAmount": {
            "type": "integer",
            "format": "int64",
            "description": "金额（单位分）",
            "x-go-json": "totalAmount",
            "x-go-name": "TotalAmount"
          },
          "tradeNo": {
            "type": "string",
            "description": "关联交易号, 支付为交易单号，提现为结算单号",
            "x-go-json": "tradeNo",
            "x-go-name": "TradeNo"
          },
          "transID": {
            "type": "integer",
            "format": "uint64",
            "description": "交易单号，仅TransType为 UNIONER_SETTLEMENT，SUPPLIER_SETTLEMENT 出现，为转账交易单号",
            "x-go-json": "transID",
            "x-go-name": "TransID"
          },
          "transType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvTransType"
              },
              {
                "description": "交易类型"
              }
            ],
            "x-go-json": "transType",
            "x-go-name": "TransType"
          },
          "uid": {
            "type": "string",
            "description": "uid",
            "x-go-json": "uid",
            "x-go-name": "UID"
          },
          "updateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MySQLTimestamp"
              },
              {
                "description": "更新时间"
              }
            ],
            "x-go-json": "updateTime",
            "x-go-name": "UpdateTime"
          }
        },
        "required": [
          "accountID",
          "balance",
          "comment",
          "sID",
          "totalAmount",
          "tradeNo",
          "transID",
          "transType",
          "uid",
          "createTime",
          "updateTime"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/statement.SearchStatementRspData"
      },
      "SearchTotalTradingFeeData": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "交易笔数",
            "x-go-json": "count",
            "x-go-name": "Count"
          },
          "fee": {
            "type": "integer",
            "format": "int64",
            "description": "手续费总金额",
            "x-go-json": "fee",
            "x-go-name": "Fee"
          },
          "feeAccountId": {
            "type": "integer",
            "format": "uint64",
            "description": "手续费账户，dhb收取手续费的账户",
            "x-go-json": "feeAccountId",
            "x-go-name": "FeeAccountID"
          },
          "payeeAccountId": {
            "type": "integer",
            "format": "uint64",
            "description": "商户支付手续费账户",
            "x-go-json": "payeeAccountId",
            "x-go-name": "PayeeAccountID"
          },
          "totalAmount": {
            "type": "integer",
            "format": "int64",
            "description": "交易金额",
            "x-go-json": "totalAmount",
            "x-go-name": "TotalAmount"
          }
        },
        "required": [
          "count",
          "fee",
          "feeAccountId",
          "payeeAccountId",
          "totalAmount"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.SearchTotalTradingFeeData"
      },
      "SearchTotalTradingFeeRsp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchTotalTradingFeeData"
            },
            "description": "数据",
            "x-go-json": "data",
            "x-go-name": "Data"
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "偏移量",
            "x-go-json": "offset",
            "x-go-name": "Offset"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "每页数量",
            "x-go-json": "size",
            "x-go-name": "Size"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "总条数",
            "x-go-json": "total",
            "x-go-name": "Total"
          },
          "totalAmount": {
            "type": "integer",
            "format": "int64",
            "description": "总交易金额",
            "x-go-json": "totalAmount",
            "x-go-name": "TotalAmount"
          },
          "totalFee": {
            "type": "integer",
            "format": "int64",
            "description": "总手续费金额",
            "x-go-json": "totalFee",
            "x-go-name": "TotalFee"
          }
        },
        "required": [
          "data",
          "offset",
          "size",
          "total",
          "totalAmount",
          "totalFee"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.SearchTotalTradingFeeRsp"
      },
      "SearchTradingFeeRsp": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseTradingFee"
            },
            "description": "数据",
            "x-go-json": "data",
            "x-go-name": "Data"
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "偏移量",
            "x-go-json": "offset",
            "x-go-name": "Offset"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "每页数量",
            "x-go-json": "size",
            "x-go-name": "Size"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "总数",
            "x-go-json": "total",
            "x-go-name": "Total"
          }
        },
        "required": [
          "offset",
          "size",
          "total",
          "data"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/trading_fee.SearchTradingFeeRsp"
      },
      "SearchTransBankTransferLogRsp": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TransBankTransferLogList"
              },
              {
                "description": "数据"
              }
            ],
            "x-go-json": "data",
            "x-go-name": "Data"
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "description": "偏移量",
            "x-go-json": "offset",
            "x-go-name": "Offset"
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "description": "每页数量",
            "x-go-json": "size",
            "x-go-name": "Size"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "总数",
            "x-go-json": "total",
            "x-go-name": "Total"
          }
        },
        "required": [
          "data",
          "offset",
          "size",
          "total"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.SearchTransBankTransferLogRsp"
      },
      "SearchWhitelistDataRsp": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseAccountWhitelist"
          },
          {
            "type": "object",
            "properties": {
              "bankName": {
                "type": "string",
                "description": "银行",
                "x-go-json": "bankName",
                "x-go-name": "BankName"
              },
              "paymentUID": {
                "type": "string",
                "description": "付款人uid",
                "x-go-json": "paymentUID",
                "x-go-name": "PaymentUID"
              },
              "receiveUID": {
                "type": "string",
                "description": "收款人uid",
                "x-go-json": "receiveUID",
                "x-go-name": "ReceiveUID"
              }
            },
            "required": [
              "bankName",
              "paymentUID",
              "receiveUID"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.SearchWhitelistDataRsp"
      },
      "SendBindCardSmsBody": {
        "type": "object",
        "properties": {
          "bankCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvBankType"
              },
              {
                "description": "开户银行"
              }
            ],
            "x-go-json": "bankCode",
            "x-go-name": "BankCode"
          },
          "cardName": {
            "type": "string",
            "maxLength": 60,
            "minLength": 1,
            "description": "银行卡户名",
            "x-go-json": "cardName",
            "x-go-name": "CardName",
            "x-go-validate": "@string[1,60]"
          },
          "cardNo": {
            "type": "string",
            "maxLength": 20,
            "minLength": 1,
            "description": "银行卡号",
            "x-go-json": "cardNo",
            "x-go-name": "CardNo",
            "x-go-validate": "@string[1,20]"
          },
          "cardType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvCardType"
              },
              {
                "description": "银行卡类型"
              }
            ],
            "x-go-json": "cardType",
            "x-go-name": "CardType"
          },
          "cvn2": {
            "type": "string",
            "maxLength": 3,
            "minLength": 0,
            "description": "信用卡背面的末 3 位数字 绑定信用卡该项必填",
            "x-go-json": "cvn2",
            "x-go-name": "CVN2",
            "x-go-validate": "@string[0,3]"
          },
          "identificationNumber": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "description": "开户证件号码",
            "x-go-json": "identificationNumber",
            "x-go-name": "IdentificationNumber",
            "x-go-validate": "@string[1,32]"
          },
          "identificationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentificationType"
              },
              {
                "description": "开户证件类型, 当客户模式为 账户模式, 通联渠道快捷支付时仅支持 身份证"
              }
            ],
            "x-go-json": "identificationType",
            "x-go-name": "IdentificationType"
          },
          "phoneNumber": {
            "type": "string",
            "description": "银行预留手机号",
            "x-go-json": "phoneNumber",
            "x-go-name": "PhoneNumber",
            "x-go-validate": "@Phone"
          },
          "receiptUID": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "description": "收款账户ID",
            "x-go-json": "receiptUID",
            "x-go-name": "ReceiptUID",
            "x-go-validate": "@string[1,32]"
          },
          "validDate": {
            "type": "string",
            "maxLength": 4,
            "minLength": 0,
            "description": "信用卡有效期，格式 YYMM 绑定信用卡该项必填",
            "x-go-json": "validDate",
            "x-go-name": "ValidDate",
            "x-go-validate": "@string[0,4]"
          }
        },
        "required": [
          "receiptUID",
          "bankCode",
          "cardNo",
          "cardName",
          "cardType",
          "identificationType",
          "identificationNumber",
          "phoneNumber"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/quick.SendBindCardSmsBody"
      },
      "SendBindCardSmsResp": {
        "type": "object",
        "properties": {
          "bindID": {
            "type": "string",
            "format": "uint64",
            "description": "绑卡流水",
            "x-go-json": "bindID,string",
            "x-go-name": "BindID"
          },
          "thpInfo": {
            "type": "string",
            "description": "交易透传信息, 收银宝快捷支付绑卡时返回，确认绑卡时原样回传",
            "x-go-json": "thpInfo",
            "x-go-name": "ThpInfo"
          }
        },
        "required": [
          "bindID",
          "thpInfo"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/quick.SendBindCardSmsResp"
      },
      "SendBindSmsBody": {
        "type": "object",
        "properties": {
          "buCompanyId": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0,
            "description": "业务方公司id, 和支付服务公司id二选一",
            "default": "0",
            "x-go-json": "buCompanyId",
            "x-go-name": "BuCompanyID",
            "x-go-validate": "@uint64[0,]"
          },
          "companyId": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0,
            "description": "公司id， 和业务方公司id二选一",
            "default": "0",
            "x-go-json": "companyId",
            "x-go-name": "CompanyID",
            "x-go-validate": "@uint64[0,]"
          },
          "mobile": {
            "type": "string",
            "description": "财务手机号, 短信验证码默认有效期为5分钟",
            "x-go-json": "mobile",
            "x-go-name": "Mobile",
            "x-go-validate": "@char[1,32]"
          },
          "platform": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountPlatformType"
              },
              {
                "description": "账户来源平台,传递业务方公司id时必填"
              }
            ],
            "x-go-json": "platform",
            "x-go-name": "Platform"
          }
        },
        "required": [
          "mobile"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/company.SendBindSmsBody"
      },
      "SendCheckSmsBody": {
        "type": "object",
        "properties": {
          "buCompanyId": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0,
            "description": "业务方公司id, 和支付服务公司id二选一",
            "default": "0",
            "x-go-json": "buCompanyId",
            "x-go-name": "BuCompanyID",
            "x-go-validate": "@uint64[0,]"
          },
          "companyId": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0,
            "description": "公司id， 和业务方公司id二选一",
            "default": "0",
            "x-go-json": "companyId",
            "x-go-name": "CompanyID",
            "x-go-validate": "@uint64[0,]"
          },
          "platform": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountPlatformType"
              },
              {
                "description": "账户来源平台,传递业务方公司id时必填"
              }
            ],
            "x-go-json": "platform",
            "x-go-name": "Platform"
          }
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/auth.SendCheckSmsBody"
      },
      "SendPaySmsBody": {
        "type": "object",
        "properties": {
          "bindID": {
            "type": "string",
            "format": "uint64",
            "minimum": 1,
            "description": "绑定流水",
            "x-go-json": "bindID,string",
            "x-go-name": "BindID",
            "x-go-validate": "@uint64[1,]"
          },
          "cvn2": {
            "type": "string",
            "maxLength": 3,
            "minLength": 0,
            "description": "信用卡背面的末 3 位数字 绑定信用卡该项必填",
            "x-go-json": "cvn2",
            "x-go-name": "CVN2",
            "x-go-validate": "@string[0,3]"
          },
          "receiptUID": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "description": "收款账户ID",
            "x-go-json": "receiptUID",
            "x-go-name": "ReceiptUID",
            "x-go-validate": "@string[1,32]"
          },
          "totalAmount": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "description": "订单金额",
            "x-go-json": "totalAmount",
            "x-go-name": "TotalAmount",
            "x-go-validate": "@int64[1,]"
          },
          "transID": {
            "type": "string",
            "format": "uint64",
            "minimum": 1,
            "description": "交易单号",
            "x-go-json": "transID,string",
            "x-go-name": "TransID",
            "x-go-validate": "@uint64[1,]"
          },
          "validDate": {
            "type": "string",
            "maxLength": 4,
            "minLength": 0,
            "description": "信用卡有效期，格式 YYMM 绑定信用卡该项必填",
            "x-go-json": "validDate",
            "x-go-name": "ValidDate",
            "x-go-validate": "@string[0,4]"
          }
        },
        "required": [
          "transID",
          "receiptUID",
          "totalAmount",
          "bindID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/quick.SendPaySmsBody"
      },
      "SendPhoneSmsBody": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string",
            "description": "手机号",
            "x-go-json": "phone",
            "x-go-name": "Phone",
            "x-go-validate": "@char[1,32]"
          },
          "verificationCodeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AllinpayGatewayVerificationCodeType"
              },
              {
                "description": "验证码类型"
              }
            ],
            "x-go-json": "verificationCodeType",
            "x-go-name": "VerificationCodeType"
          }
        },
        "required": [
          "phone",
          "verificationCodeType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.SendPhoneSmsBody"
      },
      "SendRemoveBindSmsBody": {
        "type": "object",
        "properties": {
          "buCompanyId": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0,
            "description": "业务方公司id, 和支付服务公司id二选一",
            "default": "0",
            "x-go-json": "buCompanyId",
            "x-go-name": "BuCompanyID",
            "x-go-validate": "@uint64[0,]"
          },
          "companyId": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0,
            "description": "公司id， 和业务方公司id二选一",
            "default": "0",
            "x-go-json": "companyId",
            "x-go-name": "CompanyID",
            "x-go-validate": "@uint64[0,]"
          },
          "platform": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountPlatformType"
              },
              {
                "description": "账户来源平台,传递业务方公司id时必填"
              }
            ],
            "x-go-json": "platform",
            "x-go-name": "Platform"
          }
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/company.SendRemoveBindSmsBody"
      },
      "SendSmsCodeBody": {
        "type": "object",
        "properties": {
          "bizType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceMybankGatewayBizType"
              },
              {
                "description": "短信业务类型。本短信验证码对应的业务。可选值： 01：开通银行账户 02：换绑银行卡 03：更换银行预留手机号 04：商户入驻申请 05：余利宝提现"
              }
            ],
            "x-go-json": "bizType",
            "x-go-name": "BizType"
          },
          "merchantId": {
            "type": "string",
            "description": "商户号。网商为商户分配的商户号，通过商户入驻结果查询接口获取。当BizType为02、03、05时必填，其余情况不可填。",
            "x-go-json": "merchantId",
            "x-go-name": "MerchantId",
            "x-go-validate": "@char[0,32]"
          },
          "mobile": {
            "type": "string",
            "description": "手机号。短信验证码接受手机号。当BizType为01、03、04时必填，其余情况不可填。",
            "x-go-json": "mobile",
            "x-go-name": "Mobile",
            "x-go-validate": "@char[0,32]"
          }
        },
        "required": [
          "bizType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/mybank.SendSmsCodeBody"
      },
      "SendSmsCodeResp": {
        "type": "object",
        "properties": {
          "outTradeNo": {
            "type": "string",
            "description": "外部交易号",
            "x-go-json": "outTradeNo",
            "x-go-name": "OutTradeNo"
          }
        },
        "required": [
          "outTradeNo"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/mybank.SendSmsCodeResp"
      },
      "ServiceCpcnGatewayAccountBalanceUserType": {
        "type": "string",
        "enum": [
          "10",
          "15",
          "20",
          "30",
          "40"
        ],
        "x-enum-labels": [
          "个人用户",
          "个体工商户用户",
          "企业用户",
          "机构用户",
          "匿名用户"
        ],
        "x-enum-vals": [
          1,
          5,
          2,
          3,
          4
        ],
        "x-enum-values": [
          "10",
          "15",
          "20",
          "30",
          "40"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.ServiceCpcnGatewayAccountBalanceUserType"
      },
      "ServiceCpcnGatewayAccountBindCardStatus": {
        "type": "string",
        "enum": [
          "10",
          "15",
          "17",
          "18",
          "20",
          "30",
          "40"
        ],
        "x-enum-labels": [
          "处理中",
          "待短信验证",
          "待被动打款验证",
          "被动已打款待验证",
          "字段已校验交易未完成，处理中",
          "成功",
          "失败"
        ],
        "x-enum-vals": [
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "x-enum-values": [
          "10",
          "15",
          "17",
          "18",
          "20",
          "30",
          "40"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.ServiceCpcnGatewayAccountBindCardStatus"
      },
      "ServiceCpcnGatewayAccountBindCardVerifyWay": {
        "type": "string",
        "enum": [
          "10",
          "20"
        ],
        "x-enum-labels": [
          "短信验证",
          "企业被动小额打款验证"
        ],
        "x-enum-vals": [
          1,
          2
        ],
        "x-enum-values": [
          "10",
          "20"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.ServiceCpcnGatewayAccountBindCardVerifyWay"
      },
      "ServiceCpcnGatewayAccountOpenChannelStatus": {
        "type": "string",
        "enum": [
          "20",
          "30",
          "40",
          "50"
        ],
        "x-enum-labels": [
          "受理成功",
          "正反扫权限已获取，其他待处理",
          "全部权限已获取",
          "失败失败"
        ],
        "x-enum-vals": [
          1,
          2,
          3,
          4
        ],
        "x-enum-values": [
          "20",
          "30",
          "40",
          "50"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.ServiceCpcnGatewayAccountOpenChannelStatus"
      },
      "ServiceCpcnGatewayAccountPayType": {
        "type": "string",
        "enum": [
          "00",
          "01",
          "10",
          "11",
          "12",
          "13"
        ],
        "x-enum-labels": [
          "正扫",
          "反扫",
          "APP",
          "JSAPI",
          "小程序",
          "H5"
        ],
        "x-enum-vals": [
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "x-enum-values": [
          "00",
          "01",
          "10",
          "11",
          "12",
          "13"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.ServiceCpcnGatewayAccountPayType"
      },
      "ServiceCpcnGatewayAccountPayWay": {
        "type": "string",
        "enum": [
          "10",
          "20",
          "40"
        ],
        "x-enum-labels": [
          "微信",
          "支付宝",
          "银联"
        ],
        "x-enum-vals": [
          1,
          2,
          3
        ],
        "x-enum-values": [
          "10",
          "20",
          "40"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.ServiceCpcnGatewayAccountPayWay"
      },
      "ServiceCpcnGatewayAccountUserStatus": {
        "type": "string",
        "enum": [
          "10",
          "20"
        ],
        "x-enum-labels": [
          "正常",
          "注销"
        ],
        "x-enum-vals": [
          1,
          2
        ],
        "x-enum-values": [
          "10",
          "20"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.ServiceCpcnGatewayAccountUserStatus"
      },
      "ServiceCpcnGatewayAccountUserType": {
        "type": "string",
        "enum": [
          "11",
          "12",
          "13"
        ],
        "x-enum-labels": [
          "个人",
          "企业",
          "个体户"
        ],
        "x-enum-vals": [
          1,
          2,
          3
        ],
        "x-enum-values": [
          "11",
          "12",
          "13"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.ServiceCpcnGatewayAccountUserType"
      },
      "ServiceCpcnGatewayBankCardType": {
        "type": "string",
        "enum": [
          "10",
          "20",
          "30"
        ],
        "x-enum-labels": [
          "借记卡",
          "贷记卡",
          "存折"
        ],
        "x-enum-vals": [
          1,
          2,
          3
        ],
        "x-enum-values": [
          "10",
          "20",
          "30"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.ServiceCpcnGatewayBankCardType"
      },
      "ServiceCpcnGatewayCategoryType": {
        "type": "string",
        "enum": [
          "101",
          "102",
          "103",
          "199",
          "201",
          "202",
          "203",
          "204",
          "205",
          "206",
          "207",
          "208",
          "209",
          "210",
          "211",
          "299",
          "301",
          "302",
          "303",
          "304",
          "305",
          "306",
          "307",
          "308",
          "309",
          "310",
          "311",
          "312",
          "313",
          "314",
          "315",
          "316",
          "317",
          "318",
          "319",
          "320",
          "321",
          "322",
          "323",
          "324",
          "326",
          "327",
          "328",
          "329",
          "330",
          "331",
          "332",
          "333",
          "334",
          "335",
          "336",
          "337",
          "338",
          "339",
          "340",
          "341",
          "342",
          "343",
          "344",
          "345",
          "346",
          "347",
          "348",
          "349",
          "350",
          "351",
          "352",
          "353",
          "399",
          "401",
          "402",
          "403",
          "404",
          "405",
          "406",
          "499",
          "501",
          "601",
          "701",
          "702"
        ],
        "x-enum-labels": [
          "储蓄客户",
          "内部员工",
          "对公联动客户",
          "个人-其他",
          "国有企业",
          "集体企业",
          "股份合作企业",
          "联营企业",
          "有限责任公司",
          "股份有限公司",
          "私营企业",
          "港、澳、台投资企业",
          "外商投资企业",
          "个体经营",
          "乡镇企业",
          "其他",
          "中国人民银行",
          "国家外汇管理局",
          "中国银行业监督管理委员会",
          "中国证券监督管理委员会",
          "中国保险监督管理委员会",
          "国家开发银行",
          "进出口银行",
          "农村发展银行",
          "国有独资商业银行",
          "其他大型商业银行",
          "全国性中小型商业银行",
          "城市商业银行",
          "农村商业银行",
          "其他商业银行",
          "邮储",
          "村镇银行",
          "外资银行法人",
          "外国银行分行",
          "多边开发银行",
          "城市信用社",
          "农村信用社",
          "农村合作银行",
          "农村资金互助社",
          "财务公司",
          "证券投资基金管理公司",
          "期货公司",
          "投资咨询公司",
          "基金公司",
          "信托公司",
          "金融资产管理公司(不含国有资产管理公司)",
          "国有资产管理公司",
          "金融租赁公司",
          "汽车金融公司",
          "贷款公司",
          "货币经纪公司",
          "财产保险公司",
          "人身保险公司",
          "再保险公司",
          "保险资产管理公司",
          "保险经纪公司",
          "保险代理公司",
          "保险公估公司",
          "企业年金",
          "养老及社保单位",
          "证券交易所",
          "期货交易所",
          "登记结算类机构",
          "中央金融控股公司",
          "其他金融控股公司",
          "小额贷款公司",
          "其他境内特殊目的载体(SPV)",
          "其他金融辅助机构(不含SPV)",
          "其他金融机构",
          "中央直属",
          "省直属",
          "市直属",
          "事业单位",
          "公积金单位",
          "公共部门实体",
          "其他政府机关",
          "小微企业",
          "内部客户",
          "社会团体",
          "部队"
        ],
        "x-enum-vals": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          46,
          47,
          48,
          49,
          50,
          51,
          52,
          53,
          54,
          55,
          56,
          57,
          58,
          59,
          60,
          61,
          62,
          63,
          64,
          65,
          66,
          67,
          68,
          69,
          70,
          71,
          72,
          73,
          74,
          75,
          76,
          77,
          78,
          79,
          80
        ],
        "x-enum-values": [
          "101",
          "102",
          "103",
          "199",
          "201",
          "202",
          "203",
          "204",
          "205",
          "206",
          "207",
          "208",
          "209",
          "210",
          "211",
          "299",
          "301",
          "302",
          "303",
          "304",
          "305",
          "306",
          "307",
          "308",
          "309",
          "310",
          "311",
          "312",
          "313",
          "314",
          "315",
          "316",
          "317",
          "318",
          "319",
          "320",
          "321",
          "322",
          "323",
          "324",
          "326",
          "327",
          "328",
          "329",
          "330",
          "331",
          "332",
          "333",
          "334",
          "335",
          "336",
          "337",
          "338",
          "339",
          "340",
          "341",
          "342",
          "343",
          "344",
          "345",
          "346",
          "347",
          "348",
          "349",
          "350",
          "351",
          "352",
          "353",
          "399",
          "401",
          "402",
          "403",
          "404",
          "405",
          "406",
          "499",
          "501",
          "601",
          "701",
          "702"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.ServiceCpcnGatewayCategoryType"
      },
      "ServiceCpcnGatewayCreateAccountUserStatus": {
        "type": "string",
        "enum": [
          "10",
          "15",
          "16",
          "17",
          "18",
          "20",
          "30",
          "40"
        ],
        "x-enum-labels": [
          "已受理",
          "待审核/待短信验证",
          "审核通过",
          "待被动打款验证",
          "被动已打款待验证",
          "处理中",
          "成功",
          "失败"
        ],
        "x-enum-vals": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "x-enum-values": [
          "10",
          "15",
          "16",
          "17",
          "18",
          "20",
          "30",
          "40"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.ServiceCpcnGatewayCreateAccountUserStatus"
      },
      "ServiceCpcnGatewayCredentialType": {
        "type": "string",
        "enum": [
          "0",
          "2",
          "5",
          "6"
        ],
        "x-enum-labels": [
          "身份证",
          "外国护照",
          "港澳居民来往内地通行证",
          "台湾居民来往大陆通行证"
        ],
        "x-enum-vals": [
          1,
          2,
          3,
          4
        ],
        "x-enum-values": [
          "0",
          "2",
          "5",
          "6"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.ServiceCpcnGatewayCredentialType"
      },
      "ServiceCpcnGatewayImageType": {
        "type": "string",
        "enum": [
          "10",
          "11",
          "20",
          "30"
        ],
        "x-enum-labels": [
          "身份证人像面",
          "身份证国徽面",
          "统一社会信用代码证",
          "个体工商营业执照"
        ],
        "x-enum-vals": [
          1,
          2,
          3,
          4
        ],
        "x-enum-values": [
          "10",
          "11",
          "20",
          "30"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.ServiceCpcnGatewayImageType"
      },
      "ServiceCpcnGatewayIndustryBelongType": {
        "type": "string",
        "enum": [
          "110",
          "120",
          "130",
          "141",
          "142",
          "143",
          "149",
          "151",
          "152",
          "160",
          "171",
          "172",
          "173",
          "174",
          "175",
          "176",
          "190",
          "210",
          "220",
          "230",
          "240",
          "250",
          "310",
          "320",
          "330",
          "340",
          "350",
          "400",
          "410",
          "420",
          "500",
          "510",
          "600",
          "700",
          "810",
          "820",
          "830",
          "900"
        ],
        "x-enum-labels": [
          "内资-国有全资",
          "内资-集体全资",
          "内资-股份合作",
          "内资-联营-国有联营",
          "内资-联营-集体联营",
          "内资-联营-国有与集体联营",
          "内资-联营-其他联营",
          "内资-有限责任(公司)-国有独资(公司)",
          "内资-有限责任(公司)-其他有限责任(公司)",
          "内资-股份有限(公司)",
          "内资-私有(私营)-独资",
          "内资-私有(私营)-合伙",
          "内资-私有(私营)-有限责任(公司)",
          "内资-私有(私营)-股份有限(公司)",
          "内资-个体经营",
          "内资-其他私有",
          "内资-其他内资",
          "港澳台投资-内地和港澳台合资",
          "港澳台投资-内地和港澳台合作",
          "港澳台投资-港澳台独资",
          "港澳台投资-港澳台投资股份有限(公司)",
          "港澳台投资-其他港澳台投资",
          "国外投资-中外合资",
          "国外投资-中外合作",
          "国外投资-外资独资",
          "国外投资-国外投资股份有限(公司)",
          "国外投资-其他国外投资",
          "个体经营",
          "个体经营-个体户",
          "个体经营-个人合伙",
          "国家党政机关",
          "事业单位",
          "军队",
          "社会团体",
          "境外公司-外资公司",
          "境外公司-中资公司",
          "境外公司-金融机构",
          "外国政府"
        ],
        "x-enum-vals": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34,
          35,
          36,
          37,
          38
        ],
        "x-enum-values": [
          "110",
          "120",
          "130",
          "141",
          "142",
          "143",
          "149",
          "151",
          "152",
          "160",
          "171",
          "172",
          "173",
          "174",
          "175",
          "176",
          "190",
          "210",
          "220",
          "230",
          "240",
          "250",
          "310",
          "320",
          "330",
          "340",
          "350",
          "400",
          "410",
          "420",
          "500",
          "510",
          "600",
          "700",
          "810",
          "820",
          "830",
          "900"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.ServiceCpcnGatewayIndustryBelongType"
      },
      "ServiceCpcnGatewayOccupationType": {
        "type": "string",
        "enum": [
          "1A",
          "1B",
          "1C",
          "1D",
          "1E",
          "1F",
          "1G",
          "1H"
        ],
        "x-enum-labels": [
          "各类专业，技术人员",
          "国家机关，党群组织，企事业单位的负责人",
          "办事人员和有关人员",
          "商业工作人员",
          "服务性工作人员",
          "农林牧渔劳动者",
          "生产工作，运输工作和部分体力劳动者",
          "不便分类的其他劳动者"
        ],
        "x-enum-vals": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "x-enum-values": [
          "1A",
          "1B",
          "1C",
          "1D",
          "1E",
          "1F",
          "1G",
          "1H"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.ServiceCpcnGatewayOccupationType"
      },
      "ServiceCpcnGatewayOfficialAccountsPaymentWayType": {
        "type": "string",
        "enum": [
          "ALIPAY",
          "WECHAT"
        ],
        "x-enum-labels": [
          "支付宝公众号支付",
          "微信公众号支付"
        ],
        "x-enum-vals": [
          2,
          1
        ],
        "x-enum-values": [
          "ALIPAY",
          "WECHAT"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.ServiceCpcnGatewayOfficialAccountsPaymentWayType"
      },
      "ServiceCpcnGatewayOpenBusinessType": {
        "type": "string",
        "enum": [
          "10",
          "20"
        ],
        "x-enum-labels": [
          "开户",
          "开户并绑卡"
        ],
        "x-enum-vals": [
          1,
          2
        ],
        "x-enum-values": [
          "10",
          "20"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.ServiceCpcnGatewayOpenBusinessType"
      },
      "ServiceCpcnGatewayOperationFlag": {
        "type": "string",
        "enum": [
          "10",
          "20",
          "30"
        ],
        "x-enum-labels": [
          "绑卡",
          "解绑",
          "升级"
        ],
        "x-enum-vals": [
          1,
          2,
          3
        ],
        "x-enum-values": [
          "10",
          "20",
          "30"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.ServiceCpcnGatewayOperationFlag"
      },
      "ServiceCpcnGatewayProvince": {
        "type": "string",
        "enum": [
          "11",
          "12",
          "13",
          "14",
          "15",
          "21",
          "22",
          "23",
          "31",
          "32",
          "33",
          "34",
          "35",
          "36",
          "37",
          "41",
          "42",
          "43",
          "44",
          "45",
          "46",
          "50",
          "51",
          "52",
          "53",
          "54",
          "61",
          "62",
          "63",
          "64",
          "65",
          "71",
          "81",
          "82"
        ],
        "x-enum-labels": [
          "北京市",
          "天津市",
          "河北省",
          "山西省",
          "内蒙古自治区",
          "辽宁省",
          "吉林省",
          "黑龙江省",
          "上海市",
          "江苏省",
          "浙江省",
          "安徽省",
          "福建省",
          "江西省",
          "山东省",
          "河南省",
          "湖北省",
          "湖南省",
          "广东省",
          "广西壮族自治区",
          "海南省",
          "重庆市",
          "四川省",
          "贵州省",
          "云南省",
          "西藏自治区",
          "陕西省",
          "甘肃省",
          "青海省",
          "宁夏回族自治区",
          "新疆维吾尔自治区",
          "台湾省",
          "香港特别行政区",
          "澳门特别行政区"
        ],
        "x-enum-vals": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          20,
          21,
          22,
          23,
          24,
          25,
          26,
          27,
          28,
          29,
          30,
          31,
          32,
          33,
          34
        ],
        "x-enum-values": [
          "11",
          "12",
          "13",
          "14",
          "15",
          "21",
          "22",
          "23",
          "31",
          "32",
          "33",
          "34",
          "35",
          "36",
          "37",
          "41",
          "42",
          "43",
          "44",
          "45",
          "46",
          "50",
          "51",
          "52",
          "53",
          "54",
          "61",
          "62",
          "63",
          "64",
          "65",
          "71",
          "81",
          "82"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.ServiceCpcnGatewayProvince"
      },
      "ServiceCpcnGatewayRetailerFormation": {
        "type": "string",
        "enum": [
          "10",
          "20"
        ],
        "x-enum-labels": [
          "个人经营",
          "家庭经营"
        ],
        "x-enum-vals": [
          1,
          2
        ],
        "x-enum-values": [
          "10",
          "20"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.ServiceCpcnGatewayRetailerFormation"
      },
      "ServiceCpcnGatewayScaleType": {
        "type": "string",
        "enum": [
          "01",
          "02",
          "03",
          "04",
          "98"
        ],
        "x-enum-labels": [
          "大型",
          "中型",
          "小型",
          "微型",
          "其他"
        ],
        "x-enum-vals": [
          1,
          2,
          3,
          4,
          5
        ],
        "x-enum-values": [
          "01",
          "02",
          "03",
          "04",
          "98"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.ServiceCpcnGatewayScaleType"
      },
      "ServiceCpcnGatewayUploadStatus": {
        "type": "string",
        "enum": [
          "20",
          "30"
        ],
        "x-enum-labels": [
          "采集成功",
          "采集失败"
        ],
        "x-enum-vals": [
          1,
          2
        ],
        "x-enum-values": [
          "20",
          "30"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_cpcn_gateway.ServiceCpcnGatewayUploadStatus"
      },
      "ServiceMybankGatewayAccountType": {
        "type": "string",
        "enum": [
          "01",
          "02"
        ],
        "x-enum-labels": [
          "对私账户",
          "对公账户"
        ],
        "x-enum-vals": [
          1,
          2
        ],
        "x-enum-values": [
          "01",
          "02"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_mybank_gateway.ServiceMybankGatewayAccountType"
      },
      "ServiceMybankGatewayBalanceType": {
        "type": "string",
        "enum": [
          "BALANCE",
          "CLEARED",
          "FREEZE",
          "TRADE_DEPOSIT"
        ],
        "x-enum-labels": [
          "可提现余额",
          "待结算的余额",
          "冻结余额",
          "表示当前仅用于支付的余额（通用开户接口开保证金户后可见）"
        ],
        "x-enum-vals": [
          1,
          3,
          2,
          4
        ],
        "x-enum-values": [
          "BALANCE",
          "CLEARED",
          "FREEZE",
          "TRADE_DEPOSIT"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_mybank_gateway.ServiceMybankGatewayBalanceType"
      },
      "ServiceMybankGatewayBizType": {
        "type": "string",
        "enum": [
          "01",
          "02",
          "03",
          "04",
          "05"
        ],
        "x-enum-labels": [
          "开通银行账户",
          "换绑银行卡",
          "更换银行预留手机号",
          "商户入驻申请",
          "余利宝提现"
        ],
        "x-enum-vals": [
          1,
          2,
          3,
          4,
          5
        ],
        "x-enum-values": [
          "01",
          "02",
          "03",
          "04",
          "05"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_mybank_gateway.ServiceMybankGatewayBizType"
      },
      "ServiceMybankGatewayBusinessType": {
        "type": "string",
        "enum": [
          "2015050700000000",
          "2015062600002758",
          "2015062600004525",
          "2015063000020189",
          "2015080600000001",
          "2015091000052157",
          "2016042200000148",
          "2016062900190124",
          "2016062900190296",
          "2016062900190337",
          "2016062900190371"
        ],
        "x-enum-labels": [
          "美食",
          "购物",
          "休闲娱乐",
          "生活服务",
          "航旅",
          "超市便利店",
          "教育培训",
          "爱车",
          "医疗健康",
          "专业销售/批发",
          "政府/社会组织"
        ],
        "x-enum-vals": [
          1,
          4,
          3,
          6,
          9,
          2,
          7,
          5,
          8,
          10,
          11
        ],
        "x-enum-values": [
          "2015050700000000",
          "2015062600002758",
          "2015062600004525",
          "2015063000020189",
          "2015080600000001",
          "2015091000052157",
          "2016042200000148",
          "2016062900190124",
          "2016062900190296",
          "2016062900190337",
          "2016062900190371"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_mybank_gateway.ServiceMybankGatewayBusinessType"
      },
      "ServiceMybankGatewayCertType": {
        "type": "string",
        "enum": [
          "01"
        ],
        "x-enum-labels": [
          "身份证"
        ],
        "x-enum-vals": [
          1
        ],
        "x-enum-values": [
          "01"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_mybank_gateway.ServiceMybankGatewayCertType"
      },
      "ServiceMybankGatewayDealType": {
        "type": "string",
        "enum": [
          "01",
          "02",
          "03"
        ],
        "x-enum-labels": [
          "实体特约商户",
          "网络特约商户",
          "实体兼网络特约商户"
        ],
        "x-enum-vals": [
          1,
          2,
          3
        ],
        "x-enum-values": [
          "01",
          "02",
          "03"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_mybank_gateway.ServiceMybankGatewayDealType"
      },
      "ServiceMybankGatewayMerchantType": {
        "type": "string",
        "enum": [
          "01",
          "02",
          "03"
        ],
        "x-enum-labels": [
          "自然人",
          "个体工商户",
          "企业商户"
        ],
        "x-enum-vals": [
          1,
          2,
          3
        ],
        "x-enum-values": [
          "01",
          "02",
          "03"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_mybank_gateway.ServiceMybankGatewayMerchantType"
      },
      "ServiceMybankGatewayPhotoType": {
        "type": "string",
        "enum": [
          "01",
          "02",
          "03",
          "04",
          "05",
          "06",
          "07",
          "08",
          "09",
          "10",
          "11",
          "12"
        ],
        "x-enum-labels": [
          "身份证正面",
          "身份证反面",
          "营业执照",
          "组织机构代码证",
          "开户许可证",
          "门头照",
          "其它",
          "收银台照片",
          "门店内景照片",
          "各大餐饮平台入驻照片",
          "手持身份证合照",
          "租赁协议"
        ],
        "x-enum-vals": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12
        ],
        "x-enum-values": [
          "01",
          "02",
          "03",
          "04",
          "05",
          "06",
          "07",
          "08",
          "09",
          "10",
          "11",
          "12"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_mybank_gateway.ServiceMybankGatewayPhotoType"
      },
      "ServiceMybankGatewayPrincipalCertType": {
        "type": "string",
        "enum": [
          "01"
        ],
        "x-enum-labels": [
          "身份证"
        ],
        "x-enum-vals": [
          1
        ],
        "x-enum-values": [
          "01"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_mybank_gateway.ServiceMybankGatewayPrincipalCertType"
      },
      "ServiceMybankGatewayRegisterStatus": {
        "type": "string",
        "enum": [
          "0",
          "1",
          "2"
        ],
        "x-enum-labels": [
          "审核中",
          "成功",
          "失败"
        ],
        "x-enum-vals": [
          1,
          2,
          3
        ],
        "x-enum-values": [
          "0",
          "1",
          "2"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_mybank_gateway.ServiceMybankGatewayRegisterStatus"
      },
      "ServiceMybankGatewayStatus": {
        "type": "string",
        "enum": [
          "CLOSED",
          "DEALING",
          "FAIL",
          "SUCCESS"
        ],
        "x-enum-labels": [
          "关闭",
          "处理中",
          "失败",
          "成功"
        ],
        "x-enum-vals": [
          4,
          2,
          3,
          1
        ],
        "x-enum-values": [
          "CLOSED",
          "DEALING",
          "FAIL",
          "SUCCESS"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_mybank_gateway.ServiceMybankGatewayStatus"
      },
      "SetSubAccountNumberBody": {
        "type": "object",
        "properties": {
          "subAccountNumber": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "description": "已经购买的子账户名额总数",
            "default": "0",
            "x-go-json": "subAccountNumber",
            "x-go-name": "SubAccountNumber",
            "x-go-validate": "@int64[0,]"
          },
          "supplierAccountNumber": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "description": "已经购买的供应商账户数",
            "default": "0",
            "x-go-json": "supplierAccountNumber",
            "x-go-name": "SupplierAccountNumber",
            "x-go-validate": "@int64[0,]"
          },
          "unionerAccountNumber": {
            "type": "integer",
            "format": "int64",
            "minimum": 0,
            "description": "已经购买的联营商账户数",
            "default": "0",
            "x-go-json": "unionerAccountNumber",
            "x-go-name": "UnionerAccountNumber",
            "x-go-validate": "@int64[0,]"
          }
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/account.SetSubAccountNumberBody"
      },
      "SettTask": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "$ref": "#/components/schemas/OperateTime"
          },
          {
            "$ref": "#/components/schemas/SoftDelete"
          },
          {
            "type": "object",
            "properties": {
              "batchNo": {
                "type": "string",
                "description": "批次",
                "x-go-json": "batchNo",
                "x-go-name": "BatchNo"
              },
              "comment": {
                "type": "string",
                "description": "简介",
                "x-go-json": "comment",
                "x-go-name": "Comment"
              },
              "failMessage": {
                "type": "string",
                "description": "错误详情",
                "x-go-json": "failMessage",
                "x-go-name": "FailMessage"
              },
              "fee": {
                "type": "integer",
                "format": "int64",
                "description": "手续费(单位分), 当扣费方式为坐扣时不为0，并以此作为最终的手续费扣除",
                "x-go-json": "fee",
                "x-go-name": "Fee"
              },
              "feeMode": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvHandingFeeMode"
                  },
                  {
                    "description": "扣费模式"
                  }
                ],
                "x-go-json": "feeMode",
                "x-go-name": "FeeMode"
              },
              "merchantAccountID": {
                "type": "string",
                "format": "uint64",
                "description": "商户账户ID, 一般和付款账户一致",
                "x-go-json": "merchantAccountID,string",
                "x-go-name": "MerchantAccountID"
              },
              "paymentAccountID": {
                "type": "string",
                "format": "uint64",
                "description": "付款账号ID",
                "x-go-json": "paymentAccountID,string",
                "x-go-name": "PaymentAccountID"
              },
              "receiptAccountID": {
                "type": "string",
                "format": "uint64",
                "description": "收款账户ID",
                "x-go-json": "receiptAccountID,string",
                "x-go-name": "ReceiptAccountID"
              },
              "settIDs": {
                "type": "string",
                "description": "关联的结算单ID",
                "x-go-json": "settIDs",
                "x-go-name": "SettIDs"
              },
              "status": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvSettTaskStatus"
                  },
                  {
                    "description": "处理状态"
                  }
                ],
                "x-go-json": "status",
                "x-go-name": "Status"
              },
              "taskID": {
                "type": "string",
                "format": "uint64",
                "description": "任务ID",
                "x-go-json": "taskID,string",
                "x-go-name": "TaskID"
              },
              "totalAmount": {
                "type": "integer",
                "format": "int64",
                "description": "金额（单位分）",
                "x-go-json": "totalAmount",
                "x-go-name": "TotalAmount"
              },
              "version": {
                "type": "integer",
                "format": "uint64",
                "description": "乐观锁",
                "x-go-json": "version",
                "x-go-name": "Version"
              }
            },
            "required": [
              "batchNo",
              "comment",
              "failMessage",
              "fee",
              "feeMode",
              "merchantAccountID",
              "paymentAccountID",
              "receiptAccountID",
              "settIDs",
              "status",
              "taskID",
              "totalAmount",
              "version"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.SettTask"
      },
      "Settlement": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "$ref": "#/components/schemas/OperateTime"
          },
          {
            "$ref": "#/components/schemas/SoftDelete"
          },
          {
            "type": "object",
            "properties": {
              "bankCode": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvBankType"
                  },
                  {
                    "description": "结算银行编号"
                  }
                ],
                "x-go-json": "bankCode",
                "x-go-name": "BankCode"
              },
              "bindID": {
                "type": "string",
                "format": "uint64",
                "description": "绑卡流水，仅用于中金账户模式",
                "x-go-json": "bindID,string",
                "x-go-name": "BindID"
              },
              "branchName": {
                "type": "string",
                "description": "结算银行分支行名称",
                "x-go-json": "branchName",
                "x-go-name": "BranchName"
              },
              "cardAccountType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvCardAccountType"
                  },
                  {
                    "description": "结算账户类型"
                  }
                ],
                "x-go-json": "cardAccountType",
                "x-go-name": "CardAccountType"
              },
              "cardName": {
                "type": "string",
                "description": "结算银行卡账户名",
                "x-go-json": "cardName",
                "x-go-name": "CardName"
              },
              "cardNo": {
                "type": "string",
                "description": "结算银行卡卡号",
                "x-go-json": "cardNo",
                "x-go-name": "CardNo"
              },
              "channelType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvChannelType"
                  },
                  {
                    "description": "结算渠道"
                  }
                ],
                "x-go-json": "channelType",
                "x-go-name": "ChannelType"
              },
              "city": {
                "type": "string",
                "description": "分支行城市",
                "x-go-json": "city",
                "x-go-name": "City"
              },
              "clearStatus": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvClearStatus"
                  },
                  {
                    "description": "清算状态, 仅对D0结算，通联渠道有效，默认为否"
                  }
                ],
                "x-go-json": "clearStatus",
                "x-go-name": "ClearStatus"
              },
              "comment": {
                "type": "string",
                "description": "简介",
                "x-go-json": "comment",
                "x-go-name": "Comment"
              },
              "currency": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvTransCurrencyType"
                  },
                  {
                    "description": "币种 CNY=人民币"
                  }
                ],
                "x-go-json": "currency",
                "x-go-name": "Currency"
              },
              "extend": {
                "type": "string",
                "description": "扩展信息",
                "x-go-json": "extend",
                "x-go-name": "Extend"
              },
              "handingFee": {
                "type": "integer",
                "format": "int64",
                "description": "本次结算扣除的手续费,仅支持中金公众号、快捷、扫码、网银支付方式",
                "x-go-json": "handingFee",
                "x-go-name": "HandingFee"
              },
              "isStoreSettlement": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bool"
                  },
                  {
                    "description": "是否为店铺结算"
                  }
                ],
                "x-go-json": "isStoreSettlement",
                "x-go-name": "IsStoreSettlement"
              },
              "notifyUrl": {
                "type": "string",
                "description": "异步通知回调地址",
                "x-go-json": "notifyUrl",
                "x-go-name": "NotifyUrl"
              },
              "paymentAccountID": {
                "type": "string",
                "format": "uint64",
                "description": "付款账号ID",
                "x-go-json": "paymentAccountID,string",
                "x-go-name": "PaymentAccountID"
              },
              "province": {
                "type": "string",
                "description": "分支行省份",
                "x-go-json": "province",
                "x-go-name": "Province"
              },
              "receiptAccountID": {
                "type": "string",
                "format": "uint64",
                "description": "收款账户ID",
                "x-go-json": "receiptAccountID,string",
                "x-go-name": "ReceiptAccountID"
              },
              "receiptAccountName": {
                "type": "string",
                "description": "收款账户名称,冗余数据",
                "x-go-json": "receiptAccountName",
                "x-go-name": "ReceiptAccountName"
              },
              "returnNotifyUrl": {
                "type": "string",
                "description": "[仅用于直店]店铺端结算时,结算手续费从总部预存款手续费余额扣除, 同时店铺的结算金额=可结算总额-结算手续费, 店铺扣下的手续费应还回给总部，这里为返还手续费到总部余额的回调地址",
                "x-go-json": "returnNotifyUrl",
                "x-go-name": "ReturnNotifyUrl"
              },
              "settlementID": {
                "type": "string",
                "format": "uint64",
                "description": "结算单单号",
                "x-go-json": "settlementID,string",
                "x-go-name": "SettlementID"
              },
              "settlementMsg": {
                "type": "string",
                "description": "渠道方返回消息",
                "x-go-json": "settlementMsg",
                "x-go-name": "SettlementMsg"
              },
              "settlementSn": {
                "type": "string",
                "description": "渠道方结算单号",
                "x-go-json": "settlementSn",
                "x-go-name": "SettlementSn"
              },
              "settlementStatus": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvSettlementStatus"
                  },
                  {
                    "description": "结算单状态"
                  }
                ],
                "x-go-json": "settlementStatus",
                "x-go-name": "SettlementStatus"
              },
              "settlementTime": {
                "type": "string",
                "description": "结算时间",
                "x-go-json": "settlementTime",
                "x-go-name": "SettlementTime"
              },
              "totalAmount": {
                "type": "integer",
                "format": "int64",
                "description": "金额（单位分）",
                "x-go-json": "totalAmount",
                "x-go-name": "TotalAmount"
              },
              "tradeNo": {
                "type": "string",
                "description": "外部结算单号",
                "x-go-json": "tradeNo",
                "x-go-name": "TradeNo"
              },
              "version": {
                "type": "integer",
                "format": "uint64",
                "description": "乐观锁",
                "x-go-json": "version",
                "x-go-name": "Version"
              }
            },
            "required": [
              "bankCode",
              "bindID",
              "branchName",
              "cardAccountType",
              "cardName",
              "cardNo",
              "channelType",
              "city",
              "clearStatus",
              "comment",
              "currency",
              "extend",
              "handingFee",
              "isStoreSettlement",
              "notifyUrl",
              "paymentAccountID",
              "province",
              "receiptAccountID",
              "receiptAccountName",
              "returnNotifyUrl",
              "settlementID",
              "settlementMsg",
              "settlementSn",
              "settlementStatus",
              "settlementTime",
              "totalAmount",
              "tradeNo",
              "version"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.Settlement"
      },
      "SettlementData": {
        "type": "object",
        "properties": {
          "bankCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvBankType"
              },
              {
                "description": "结算银行编号"
              }
            ],
            "x-go-json": "bankCode",
            "x-go-name": "BankCode"
          },
          "branchName": {
            "type": "string",
            "description": "结算银行分支行名称",
            "x-go-json": "branchName",
            "x-go-name": "BranchName"
          },
          "cardName": {
            "type": "string",
            "description": "结算银行卡账户名",
            "x-go-json": "cardName",
            "x-go-name": "CardName"
          },
          "cardNo": {
            "type": "string",
            "description": "结算银行卡卡号",
            "x-go-json": "cardNo",
            "x-go-name": "CardNo"
          },
          "channelType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvChannelType"
              },
              {
                "description": "结算渠道"
              }
            ],
            "x-go-json": "channelType",
            "x-go-name": "ChannelType"
          },
          "city": {
            "type": "string",
            "description": "分支行城市",
            "x-go-json": "city",
            "x-go-name": "City"
          },
          "comment": {
            "type": "string",
            "description": "备注",
            "x-go-json": "comment",
            "x-go-name": "Comment"
          },
          "createTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MySQLTimestamp"
              },
              {
                "description": "创建时间"
              }
            ],
            "x-go-json": "createTime",
            "x-go-name": "CreateTime"
          },
          "extend": {
            "type": "string",
            "description": "扩展信息",
            "x-go-json": "extend",
            "x-go-name": "Extend"
          },
          "handingFee": {
            "type": "integer",
            "format": "int64",
            "description": "本次结算扣除的手续费,仅支持中金公众号、快捷、扫码、网银支付方式",
            "x-go-json": "handingFee",
            "x-go-name": "HandingFee"
          },
          "province": {
            "type": "string",
            "description": "分支行省份",
            "x-go-json": "province",
            "x-go-name": "Province"
          },
          "receiptAccountID": {
            "type": "integer",
            "format": "uint64",
            "description": "收款账户ID",
            "x-go-json": "receiptAccountID",
            "x-go-name": "ReceiptAccountID"
          },
          "receiptAccountName": {
            "type": "string",
            "description": "收款账户名称,冗余数据",
            "x-go-json": "receiptAccountName",
            "x-go-name": "ReceiptAccountName"
          },
          "settlementID": {
            "type": "string",
            "format": "uint64",
            "description": "结算单单号",
            "x-go-json": "settlementID,string",
            "x-go-name": "SettlementID"
          },
          "settlementStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvSettlementStatus"
              },
              {
                "description": "结算单状态"
              }
            ],
            "x-go-json": "settlementStatus",
            "x-go-name": "SettlementStatus"
          },
          "totalAmount": {
            "type": "integer",
            "format": "int64",
            "description": "金额（单位分）",
            "x-go-json": "totalAmount",
            "x-go-name": "TotalAmount"
          },
          "tradeNo": {
            "type": "string",
            "description": "外部结算单号",
            "x-go-json": "tradeNo",
            "x-go-name": "TradeNo"
          },
          "updateTime": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MySQLTimestamp"
              },
              {
                "description": "更新时间"
              }
            ],
            "x-go-json": "updateTime",
            "x-go-name": "UpdateTime"
          }
        },
        "required": [
          "bankCode",
          "branchName",
          "cardName",
          "cardNo",
          "channelType",
          "city",
          "comment",
          "createTime",
          "extend",
          "handingFee",
          "province",
          "receiptAccountID",
          "receiptAccountName",
          "settlementID",
          "settlementStatus",
          "totalAmount",
          "tradeNo",
          "updateTime"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.SettlementData"
      },
      "SignApplyBody": {
        "type": "object",
        "properties": {
          "applyID": {
            "type": "string",
            "format": "uint64",
            "minimum": 1,
            "description": "申请单id",
            "x-go-json": "applyID,string",
            "x-go-name": "ApplyID",
            "x-go-validate": "@uint64[1,]"
          },
          "cancelRedirectUrl": {
            "type": "string",
            "description": "平台签约失败或者会员取消签约，跳转返回的页面地址, 渠道为通联且云商通签约时有效",
            "x-go-json": "cancelRedirectUrl",
            "x-go-name": "CancelRedirectUrl",
            "x-go-validate": "@char[0,256]"
          },
          "redirectUrl": {
            "type": "string",
            "description": "重定向url, 有值时，签约完成点确定会重定向到传入的url, 渠道为通联时有效",
            "x-go-json": "redirectUrl",
            "x-go-name": "RedirectURL",
            "x-go-validate": "@char[0,256]"
          },
          "signPhoneNumber": {
            "type": "string",
            "description": "签约手机号, 中金渠道时有效，通过此参数修改签约手机",
            "x-go-json": "signPhoneNumber",
            "x-go-name": "SignPhoneNumber",
            "x-go-validate": "@char[0,11]"
          }
        },
        "required": [
          "applyID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.SignApplyBody"
      },
      "SignApplyRsp": {
        "type": "object",
        "properties": {
          "applyID": {
            "type": "string",
            "format": "uint64",
            "description": "申请单号",
            "x-go-json": "applyID,string",
            "x-go-name": "ApplyID"
          },
          "phoneNumber": {
            "type": "string",
            "description": "签约手机号，中金签约时返回",
            "x-go-json": "phoneNumber",
            "x-go-name": "PhoneNumber"
          },
          "signUrl": {
            "type": "string",
            "description": "签约地址, 中金/通联-云商通 使用此地址",
            "x-go-json": "signUrl",
            "x-go-name": "SignUrl"
          },
          "vspSignUrl": {
            "type": "string",
            "description": "收银宝签约地址",
            "x-go-json": "vspSignUrl",
            "x-go-name": "VspSignUrl"
          }
        },
        "required": [
          "applyID",
          "signUrl",
          "vspSignUrl",
          "phoneNumber"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.SignApplyRsp"
      },
      "SignFileType": {
        "type": "string",
        "enum": [
          "CERT",
          "CERT_KEY",
          "PFX"
        ],
        "x-enum-labels": [
          "证书pem文件",
          "证书密钥pem文件",
          "PFX证书"
        ],
        "x-enum-vals": [
          1,
          2,
          3
        ],
        "x-enum-values": [
          "CERT",
          "CERT_KEY",
          "PFX"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/constants/types.SignFileType"
      },
      "SoftDelete": {
        "type": "object",
        "x-go-named": "go-hummer/sqlx/presets.SoftDelete"
      },
      "SplitBill": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OperateTime"
          },
          {
            "$ref": "#/components/schemas/SoftDelete"
          },
          {
            "type": "object",
            "properties": {
              "accountID": {
                "type": "string",
                "format": "uint64",
                "description": "结算账户ID",
                "x-go-json": "accountID,string",
                "x-go-name": "AccountID"
              },
              "agentPaidStatus": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvAgentPaidStatus"
                  },
                  {
                    "description": "通联渠道，托管代收订单，执行托管代付状态"
                  }
                ],
                "x-go-json": "agentPaidStatus",
                "x-go-name": "AgentPaidStatus"
              },
              "agentPaySn": {
                "type": "string",
                "description": "通联渠道时为代付订单号",
                "x-go-json": "agentPaySn",
                "x-go-name": "AgentPaySn"
              },
              "comment": {
                "type": "string",
                "description": "分账描述",
                "x-go-json": "comment",
                "x-go-name": "Comment"
              },
              "errorDesc": {
                "type": "string",
                "description": "失败原因",
                "x-go-json": "errorDesc",
                "x-go-name": "ErrorDesc"
              },
              "id": {
                "type": "integer",
                "format": "uint64",
                "x-go-json": "id",
                "x-go-name": "ID"
              },
              "institutionID": {
                "type": "string",
                "description": "机构号",
                "x-go-json": "institutionID",
                "x-go-name": "InstitutionID"
              },
              "orderNo": {
                "type": "string",
                "description": "订货宝订单号，多个单号英文逗号分隔",
                "x-go-json": "orderNo",
                "x-go-name": "OrderNo"
              },
              "settlementFlag": {
                "type": "string",
                "description": "结算标识",
                "x-go-json": "settlementFlag",
                "x-go-name": "SettlementFlag"
              },
              "settlementID": {
                "type": "string",
                "format": "uint64",
                "description": "结算单单号",
                "x-go-json": "settlementID,string",
                "x-go-name": "SettlementID"
              },
              "splitAmount": {
                "type": "integer",
                "format": "int64",
                "description": "分账金额",
                "x-go-json": "splitAmount",
                "x-go-name": "SplitAmount"
              },
              "splitBillID": {
                "type": "string",
                "format": "uint64",
                "description": "分账账单ID",
                "x-go-json": "splitBillID,string",
                "x-go-name": "SplitBillID"
              },
              "splitBillType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvSplitBillType"
                  },
                  {
                    "description": "分账账单类型"
                  }
                ],
                "x-go-json": "splitBillType",
                "x-go-name": "SplitBillType"
              },
              "splitRate": {
                "type": "number",
                "format": "double",
                "description": "分账比例",
                "x-go-json": "splitRate",
                "x-go-name": "SplitRate"
              },
              "splitTxSn": {
                "type": "string",
                "description": "第三方分账流水号",
                "x-go-json": "splitTxSn",
                "x-go-name": "SplitTxSn"
              },
              "status": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvSplitBillStatus"
                  },
                  {
                    "description": "分账账单状态"
                  }
                ],
                "x-go-json": "status",
                "x-go-name": "Status"
              },
              "totalAmount": {
                "type": "integer",
                "format": "int64",
                "description": "交易单支付金额",
                "x-go-json": "totalAmount",
                "x-go-name": "TotalAmount"
              },
              "tradeNo": {
                "type": "string",
                "description": "外部订单号,最多支持32位字符",
                "x-go-json": "tradeNo",
                "x-go-name": "TradeNo"
              },
              "transID": {
                "type": "string",
                "format": "uint64",
                "description": "交易单号",
                "x-go-json": "transID,string",
                "x-go-name": "TransID"
              },
              "transferTxSn": {
                "type": "string",
                "description": "来账识别-4671转账流水, 云资金为网商分账账单id",
                "x-go-json": "transferTxSn",
                "x-go-name": "TransferTxSn"
              },
              "version": {
                "type": "integer",
                "format": "uint64",
                "description": "乐观锁",
                "x-go-json": "version",
                "x-go-name": "Version"
              }
            },
            "required": [
              "accountID",
              "agentPaidStatus",
              "agentPaySn",
              "comment",
              "errorDesc",
              "id",
              "institutionID",
              "orderNo",
              "settlementFlag",
              "settlementID",
              "splitAmount",
              "splitBillID",
              "splitBillType",
              "splitRate",
              "splitTxSn",
              "status",
              "totalAmount",
              "tradeNo",
              "transID",
              "transferTxSn",
              "version"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.SplitBill"
      },
      "SplitRefundBody": {
        "type": "object",
        "properties": {
          "splitBillId": {
            "type": "integer",
            "format": "uint64",
            "minimum": 1,
            "description": "分账账单id",
            "x-go-json": "splitBillId",
            "x-go-name": "SplitBillID",
            "x-go-validate": "@uint64[1,]"
          }
        },
        "required": [
          "splitBillId"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/mybank.SplitRefundBody"
      },
      "StatusError": {
        "type": "object",
        "properties": {
          "canBeTalkError": {
            "type": "boolean",
            "description": "是否能作为错误话术",
            "x-go-json": "canBeTalkError",
            "x-go-name": "CanBeErrorTalk",
            "x-tag-xml": "canBeTalkError"
          },
          "code": {
            "type": "integer",
            "format": "int64",
            "description": "错误代码",
            "x-go-json": "code",
            "x-go-name": "Code",
            "x-tag-xml": "code"
          },
          "desc": {
            "type": "string",
            "description": "详细描述",
            "x-go-json": "desc",
            "x-go-name": "Desc",
            "x-tag-xml": "desc"
          },
          "errorFields": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ErrorFields"
              },
              {
                "description": "出错字段"
              }
            ],
            "x-go-json": "errorFields",
            "x-go-name": "ErrorFields",
            "x-tag-xml": "errorFields"
          },
          "id": {
            "type": "string",
            "description": "请求 ID",
            "x-go-json": "id",
            "x-go-name": "ID",
            "x-tag-xml": "id"
          },
          "key": {
            "type": "string",
            "description": "错误 Key",
            "x-go-json": "key",
            "x-go-name": "Key",
            "x-tag-xml": "key"
          },
          "msg": {
            "type": "string",
            "description": "错误信息",
            "x-go-json": "msg",
            "x-go-name": "Msg",
            "x-tag-xml": "msg"
          },
          "source": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "错误溯源",
            "x-go-json": "source",
            "x-go-name": "Source",
            "x-tag-xml": "source"
          }
        },
        "required": [
          "key",
          "code",
          "msg",
          "desc",
          "canBeTalkError",
          "source",
          "id",
          "errorFields"
        ],
        "x-go-named": "go-hummer/hummer/status_error.StatusError"
      },
      "Subbranch": {
        "type": "object",
        "properties": {
          "branchAddr": {
            "type": "string",
            "description": "门店地址",
            "x-go-json": "branchAddr,omitempty",
            "x-go-name": "BranchAddr",
            "x-go-validate": "@char[0,150]"
          },
          "branchName": {
            "type": "string",
            "description": "门店名称,同一商户名称唯一",
            "x-go-json": "branchName,omitempty",
            "x-go-name": "BranchName",
            "x-go-validate": "@char[0,60]"
          },
          "branchNo": {
            "type": "string",
            "description": "门店编号,进件时，为空",
            "x-go-json": "branchNo,omitempty",
            "x-go-name": "BranchNo",
            "x-go-validate": "@char[0,4]"
          },
          "contactPerson": {
            "type": "string",
            "description": "门店联系人",
            "x-go-json": "contactPerson,omitempty",
            "x-go-name": "ContactPerson",
            "x-go-validate": "@char[0,32]"
          },
          "contactPhone": {
            "type": "string",
            "description": "门店联系人电话",
            "x-go-json": "contactPhone,omitempty",
            "x-go-name": "ContactPhone",
            "x-go-validate": "@char[0,32]"
          },
          "districtCode": {
            "type": "string",
            "description": "所在区",
            "x-go-json": "districtCode,omitempty",
            "x-go-name": "DistrictCode",
            "x-go-validate": "@char[0,10]"
          },
          "printNum": {
            "type": "integer",
            "format": "int64",
            "description": "以下字段仅在商户进件时需配置终端的门店信息中存在：\n打印联数,默认为：2",
            "x-go-json": "printNum,omitempty",
            "x-go-name": "PrintNum"
          },
          "rejecttrxCodes": {
            "type": "string",
            "description": "禁用交易类型\nVSP002 消费撤销\nVSP003 消费退货\nVSP004 预授权\nVSP005  预授权撤销\nVSP006  预授权完成\nVSP007  预授权完成撤销\nVSP502  微信撤销\nVSP503 微信退货\nVSP512 支付宝撤销\nVSP513 支付宝退货\nVSP506 QQ钱包撤销\nVSP507 QQ钱包退货\nVSP552 银联扫码撤销\nVSP553 银联扫码退货\nVSP011 扫码预消费\nVSP013 扫码预消费完成\nVSP014 扫码预消费完成退货",
            "x-go-json": "rejecttrxCodes,omitempty",
            "x-go-name": "RejecttrxCodes"
          },
          "termNum": {
            "type": "integer",
            "format": "int64",
            "description": "门店终端数,单门店默认最大终端数:5",
            "x-go-json": "termNum,omitempty",
            "x-go-name": "TermNum"
          }
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.Subbranch"
      },
      "SubmitApplyBody": {
        "type": "object",
        "properties": {
          "applyID": {
            "type": "string",
            "format": "uint64",
            "minimum": 1,
            "description": "申请单id",
            "x-go-json": "applyID,string",
            "x-go-name": "ApplyID",
            "x-go-validate": "@uint64[1,]"
          }
        },
        "required": [
          "applyID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.SubmitApplyBody"
      },
      "SubmitApplyMerchantInfoBody": {
        "type": "object",
        "properties": {
          "aliCategory": {
            "type": "string",
            "description": "支付宝行业代码",
            "x-go-json": "aliCategory",
            "x-go-name": "AliCategory",
            "x-go-validate": "@char[0,32]"
          },
          "applyID": {
            "type": "string",
            "format": "uint64",
            "minimum": 1,
            "description": "申请单id",
            "x-go-json": "applyID,string",
            "x-go-name": "ApplyID",
            "x-go-validate": "@uint64[1,]"
          },
          "category": {
            "type": "string",
            "description": "行业类别， 修改时使用此参数作为行业类别传递",
            "x-go-json": "category",
            "x-go-name": "Category",
            "x-go-validate": "@char[0,32]"
          },
          "isModify": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bool"
              },
              {
                "description": "是否修改",
                "default": "FALSE"
              }
            ],
            "x-go-json": "isModify",
            "x-go-name": "IsModify"
          },
          "merchantInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MerchantInfo"
            },
            "description": "进件信息",
            "x-go-json": "merchantInfo",
            "x-go-name": "MerchantInfo"
          },
          "operatorID": {
            "type": "string",
            "description": "操作人id",
            "x-go-json": "operatorID",
            "x-go-name": "OperatorID",
            "x-go-validate": "@char[1,32]"
          },
          "operatorName": {
            "type": "string",
            "description": "操作人名称",
            "x-go-json": "operatorName",
            "x-go-name": "OperatorName",
            "x-go-validate": "@char[1,32]"
          }
        },
        "required": [
          "applyID",
          "operatorID",
          "operatorName"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.SubmitApplyMerchantInfoBody"
      },
      "SubmitApplyRsp": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "format": "uint64",
            "description": "子账户id，若有",
            "x-go-json": "accountId,string",
            "x-go-name": "AccountID"
          },
          "applyID": {
            "type": "string",
            "format": "uint64",
            "description": "申请单号",
            "x-go-json": "applyID,string",
            "x-go-name": "ApplyID"
          },
          "applyStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvApplyStatus"
              },
              {
                "description": "申请单状态"
              }
            ],
            "x-go-json": "applyStatus",
            "x-go-name": "ApplyStatus"
          },
          "mainAccountId": {
            "type": "string",
            "format": "uint64",
            "description": "主账户id",
            "x-go-json": "mainAccountId,string",
            "x-go-name": "MainAccountID"
          },
          "mainUID": {
            "type": "string",
            "description": "主账户UID",
            "x-go-json": "mainUID",
            "x-go-name": "MainUID"
          },
          "uID": {
            "type": "string",
            "description": "子账户UID, 若有",
            "x-go-json": "uID",
            "x-go-name": "UID"
          }
        },
        "required": [
          "applyID",
          "applyStatus",
          "mainAccountId",
          "mainUID",
          "accountId",
          "uID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.SubmitApplyRsp"
      },
      "SubmitMerchantInfoBody": {
        "type": "object",
        "properties": {
          "attachInfoList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AttachInfo"
            },
            "description": "进件列表",
            "x-go-json": "attachInfoList",
            "x-go-name": "AttachInfoList",
            "x-go-validate": "@array[1,10]"
          },
          "category": {
            "type": "string",
            "description": "行业类别",
            "x-go-json": "category",
            "x-go-name": "Category"
          },
          "isPostToCpcn": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bool"
              },
              {
                "description": "是否透传至中金",
                "default": "TRUE"
              }
            ],
            "x-go-json": "isPostToCpcn",
            "x-go-name": "IsPostToCpcn"
          },
          "payWay": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceCpcnGatewayAccountPayWay"
              },
              {
                "description": "支付方式 10=微信 20=支付宝 40=银联"
              }
            ],
            "x-go-json": "payWay",
            "x-go-name": "PayWay"
          },
          "servicePhone": {
            "type": "string",
            "description": "客服电话",
            "x-go-json": "servicePhone",
            "x-go-name": "ServicePhone",
            "x-go-validate": "@char[0,64]"
          },
          "uID": {
            "type": "string",
            "description": "绑定用户中心UID",
            "x-go-json": "uID",
            "x-go-name": "UID",
            "x-go-validate": "@char[1,32]"
          }
        },
        "required": [
          "uID",
          "payWay",
          "category",
          "attachInfoList"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/cpcnAccount.SubmitMerchantInfoBody"
      },
      "TfaReqBody": {
        "type": "object",
        "properties": {
          "bankCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvBankType"
              },
              {
                "description": "开户银行"
              }
            ],
            "x-go-json": "bankCode",
            "x-go-name": "BankCode"
          },
          "cardName": {
            "type": "string",
            "maxLength": 20,
            "minLength": 1,
            "description": "银行卡账户名",
            "x-go-json": "cardName",
            "x-go-name": "CardName",
            "x-go-validate": "@string[1,20]"
          },
          "cardNo": {
            "type": "string",
            "description": "银行卡卡号",
            "x-go-json": "cardNo",
            "x-go-name": "CardNo",
            "x-go-validate": "@bankCard"
          },
          "identificationNumber": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "description": "证件号码",
            "x-go-json": "identificationNumber",
            "x-go-name": "IdentificationNumber",
            "x-go-validate": "@string[1,32]"
          },
          "identificationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IdentificationType"
              },
              {
                "description": "开户证件类型"
              }
            ],
            "x-go-json": "identificationType",
            "x-go-name": "IdentificationType"
          },
          "receiptUID": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "description": "总部收款账户ID",
            "x-go-json": "receiptUID",
            "x-go-name": "ReceiptUID",
            "x-go-validate": "@string[1,32]"
          }
        },
        "required": [
          "receiptUID",
          "cardName",
          "cardNo",
          "bankCode",
          "identificationType",
          "identificationNumber"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/tools.TfaReqBody"
      },
      "TfaResp": {
        "type": "object",
        "properties": {
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bool"
              },
              {
                "description": "三要素校验结果, FALSE=不匹配，TRUE=匹配成功"
              }
            ],
            "x-go-json": "status",
            "x-go-name": "Status"
          }
        },
        "required": [
          "status"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/tools.TfaResp"
      },
      "Trans": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "$ref": "#/components/schemas/OperateTime"
          },
          {
            "$ref": "#/components/schemas/SoftDelete"
          },
          {
            "type": "object",
            "properties": {
              "agentPaidBatchNo": {
                "type": "string",
                "description": "通联渠道批量代付批次号",
                "x-go-json": "agentPaidBatchNo",
                "x-go-name": "AgentPaidBatchNo"
              },
              "channelType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvChannelType"
                  },
                  {
                    "description": "支付渠道"
                  }
                ],
                "x-go-json": "channelType",
                "x-go-name": "ChannelType"
              },
              "comment": {
                "type": "string",
                "description": "简介",
                "x-go-json": "comment",
                "x-go-name": "Comment"
              },
              "confirmSplitValue": {
                "type": "string",
                "description": "确认分账值， 仅用于直店预分账时，确认分账按此值进行分账",
                "x-go-json": "confirmSplitValue",
                "x-go-name": "ConfirmSplitValue"
              },
              "currency": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvTransCurrencyType"
                  },
                  {
                    "description": "币种 CNY=人民币"
                  }
                ],
                "x-go-json": "currency",
                "x-go-name": "Currency"
              },
              "deviceNo": {
                "type": "string",
                "description": "交易设备号",
                "x-go-json": "deviceNo",
                "x-go-name": "DeviceNo"
              },
              "expires": {
                "type": "integer",
                "format": "uint64",
                "description": "交易单超时时间秒数",
                "x-go-json": "expires",
                "x-go-name": "Expires"
              },
              "extend": {
                "type": "string",
                "description": "扩展信息",
                "x-go-json": "extend",
                "x-go-name": "Extend"
              },
              "handingFee": {
                "type": "integer",
                "format": "int64",
                "description": "本次交易扣除的手续费,仅支持中金商户模式的公众号、快捷、扫码支付方式",
                "x-go-json": "handingFee",
                "x-go-name": "HandingFee"
              },
              "handingFeeRate": {
                "type": "number",
                "format": "double",
                "description": "本次交易扣除的手续费费率",
                "x-go-json": "handingFeeRate",
                "x-go-name": "HandingFeeRate"
              },
              "isPreSplit": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Bool"
                  },
                  {
                    "description": "是否预分账, 支持在收到 确认分账 指令时才生成分账单"
                  }
                ],
                "x-go-json": "isPreSplit",
                "x-go-name": "IsPreSplit"
              },
              "notifyMsg": {
                "type": "string",
                "description": "通知消息",
                "x-go-json": "notifyMsg",
                "x-go-name": "NotifyMsg"
              },
              "notifyNum": {
                "type": "integer",
                "format": "int64",
                "description": "通知次数",
                "x-go-json": "notifyNum",
                "x-go-name": "NotifyNum"
              },
              "notifyReturn": {
                "type": "string",
                "description": "通知消息",
                "x-go-json": "notifyReturn",
                "x-go-name": "NotifyReturn"
              },
              "notifyUrl": {
                "type": "string",
                "description": "异步通知回调地址",
                "x-go-json": "notifyUrl",
                "x-go-name": "NotifyUrl"
              },
              "payAssetType": {
                "type": "string",
                "description": "网商银行云资金支付方式",
                "x-go-json": "payAssetType",
                "x-go-name": "PayAssetType"
              },
              "payInfo": {
                "type": "string",
                "description": "第三方支付平台返回的支付参数",
                "x-go-json": "payInfo",
                "x-go-name": "PayInfo"
              },
              "payMsg": {
                "type": "string",
                "description": "第三方支付平台返回的消息",
                "x-go-json": "payMsg",
                "x-go-name": "PayMsg"
              },
              "paySn": {
                "type": "string",
                "description": "第三方支付平台交易号",
                "x-go-json": "paySn",
                "x-go-name": "PaySN"
              },
              "payStatus": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvTransPayStatus"
                  },
                  {
                    "description": "交易单状态"
                  }
                ],
                "x-go-json": "payStatus",
                "x-go-name": "PayStatus"
              },
              "payTime": {
                "type": "string",
                "description": "付款时间",
                "x-go-json": "payTime",
                "x-go-name": "PayTime"
              },
              "paymentAccountID": {
                "type": "string",
                "format": "uint64",
                "description": "付款账号ID",
                "x-go-json": "paymentAccountID,string",
                "x-go-name": "PaymentAccountID"
              },
              "platform": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvAccountPlatformType"
                  },
                  {
                    "description": "交易单来源平台,1=PC, 2=移动端, 3=直店, 此标志用于扣除手续时标记扣费平台，在手续费流水列表体现,如：订单来源为直店，手续费列表标记为: 直店手续费扣款"
                  }
                ],
                "x-go-json": "platform",
                "x-go-name": "Platform"
              },
              "receiptAccountID": {
                "type": "string",
                "format": "uint64",
                "description": "收款账户ID",
                "x-go-json": "receiptAccountID,string",
                "x-go-name": "ReceiptAccountID"
              },
              "returnUrl": {
                "type": "string",
                "description": "同步通知回调地址",
                "x-go-json": "returnUrl",
                "x-go-name": "ReturnUrl"
              },
              "sourceIp": {
                "type": "string",
                "description": "IP",
                "x-go-json": "sourceIp",
                "x-go-name": "SourceIP"
              },
              "splitStatus": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvTransSplitStatus"
                  },
                  {
                    "description": "分账状态"
                  }
                ],
                "x-go-json": "splitStatus",
                "x-go-name": "SplitStatus"
              },
              "splitType": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvTransSplitType"
                  },
                  {
                    "description": "分账模式"
                  }
                ],
                "x-go-json": "splitType",
                "x-go-name": "SplitType"
              },
              "splitValue": {
                "type": "string",
                "description": "分账值",
                "x-go-json": "splitValue",
                "x-go-name": "SplitValue"
              },
              "totalAmount": {
                "type": "integer",
                "format": "int64",
                "description": "金额（单位分）",
                "x-go-json": "totalAmount",
                "x-go-name": "TotalAmount"
              },
              "tradeNo": {
                "type": "string",
                "description": "外部订单号,最多支持32位字符",
                "x-go-json": "tradeNo",
                "x-go-name": "TradeNo"
              },
              "transID": {
                "type": "string",
                "format": "uint64",
                "description": "交易单号",
                "x-go-json": "transID,string",
                "x-go-name": "TransID"
              },
              "userAgent": {
                "type": "string",
                "description": "userAgent",
                "x-go-json": "userAgent",
                "x-go-name": "UserAgent"
              },
              "version": {
                "type": "integer",
                "format": "uint64",
                "description": "乐观锁",
                "x-go-json": "version",
                "x-go-name": "Version"
              }
            },
            "required": [
              "agentPaidBatchNo",
              "channelType",
              "comment",
              "confirmSplitValue",
              "currency",
              "deviceNo",
              "expires",
              "extend",
              "handingFee",
              "handingFeeRate",
              "isPreSplit",
              "notifyMsg",
              "notifyNum",
              "notifyReturn",
              "notifyUrl",
              "payAssetType",
              "payInfo",
              "payMsg",
              "paySn",
              "payStatus",
              "payTime",
              "paymentAccountID",
              "platform",
              "receiptAccountID",
              "returnUrl",
              "sourceIp",
              "splitStatus",
              "splitType",
              "splitValue",
              "totalAmount",
              "tradeNo",
              "transID",
              "userAgent",
              "version"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.Trans"
      },
      "TransBankTransferLog": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "$ref": "#/components/schemas/OperateTime"
          },
          {
            "$ref": "#/components/schemas/SoftDelete"
          },
          {
            "type": "object",
            "properties": {
              "accountID": {
                "type": "string",
                "format": "uint64",
                "description": "收款账户ID",
                "x-go-json": "accountID,string",
                "x-go-name": "AccountID"
              },
              "actualPaymentType": {
                "type": "string",
                "x-go-json": "actualPaymentType",
                "x-go-name": "ActualPaymentType"
              },
              "actualPaymentWay": {
                "type": "string",
                "x-go-json": "actualPaymentWay",
                "x-go-name": "ActualPaymentWay"
              },
              "bindingTxSN": {
                "type": "string",
                "x-go-json": "bindingTxSN",
                "x-go-name": "BindingTxSN"
              },
              "cardType": {
                "type": "string",
                "x-go-json": "cardType",
                "x-go-name": "CardType"
              },
              "comment": {
                "type": "string",
                "description": "简介",
                "x-go-json": "comment",
                "x-go-name": "Comment"
              },
              "payeeBankAccountName": {
                "type": "string",
                "description": "收款账户名",
                "x-go-json": "payeeBankAccountName",
                "x-go-name": "PayeeBankAccountName"
              },
              "payeeBankAccountNumber": {
                "type": "string",
                "description": "收款卡号",
                "x-go-json": "payeeBankAccountNumber",
                "x-go-name": "PayeeBankAccountNumber"
              },
              "payerBankAccountName": {
                "type": "string",
                "description": "付款卡持卡人",
                "x-go-json": "payerBankAccountName",
                "x-go-name": "PayerBankAccountName"
              },
              "payerBankAccountNumber": {
                "type": "string",
                "description": "付款卡号",
                "x-go-json": "payerBankAccountNumber",
                "x-go-name": "PayerBankAccountNumber"
              },
              "paymentWay": {
                "type": "string",
                "x-go-json": "paymentWay",
                "x-go-name": "PaymentWay"
              },
              "status": {
                "type": "string",
                "description": "状态",
                "x-go-json": "status",
                "x-go-name": "Status"
              },
              "totalAmount": {
                "type": "integer",
                "format": "int64",
                "description": "金额（单位分）",
                "x-go-json": "totalAmount",
                "x-go-name": "TotalAmount"
              },
              "txSn": {
                "type": "string",
                "description": "流水",
                "x-go-json": "txSn",
                "x-go-name": "TxSn"
              },
              "withdrawalType": {
                "type": "string",
                "x-go-json": "withdrawalType",
                "x-go-name": "WithdrawalType"
              }
            },
            "required": [
              "accountID",
              "actualPaymentType",
              "actualPaymentWay",
              "bindingTxSN",
              "cardType",
              "comment",
              "payeeBankAccountName",
              "payeeBankAccountNumber",
              "payerBankAccountName",
              "payerBankAccountNumber",
              "paymentWay",
              "status",
              "totalAmount",
              "txSn",
              "withdrawalType"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.TransBankTransferLog"
      },
      "TransBankTransferLogList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TransBankTransferLog"
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.TransBankTransferLogList"
      },
      "TransList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Trans"
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.TransList"
      },
      "TransRefund": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PrimaryID"
          },
          {
            "$ref": "#/components/schemas/OperateTime"
          },
          {
            "$ref": "#/components/schemas/SoftDelete"
          },
          {
            "type": "object",
            "properties": {
              "comment": {
                "type": "string",
                "description": "退款原因",
                "x-go-json": "comment",
                "x-go-name": "Comment"
              },
              "currency": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvTransCurrencyType"
                  },
                  {
                    "description": "退款币种 CNY=人民币"
                  }
                ],
                "x-go-json": "currency",
                "x-go-name": "Currency"
              },
              "notifyMsg": {
                "type": "string",
                "description": "通知消息",
                "x-go-json": "notifyMsg",
                "x-go-name": "NotifyMsg"
              },
              "notifyNum": {
                "type": "integer",
                "format": "int64",
                "description": "通知次数",
                "x-go-json": "notifyNum",
                "x-go-name": "NotifyNum"
              },
              "notifyReturn": {
                "type": "string",
                "description": "通知消息",
                "x-go-json": "notifyReturn",
                "x-go-name": "NotifyReturn"
              },
              "notifyUrl": {
                "type": "string",
                "description": "退款结果异步通知地址",
                "x-go-json": "notifyUrl",
                "x-go-name": "NotifyUrl"
              },
              "refundAmount": {
                "type": "integer",
                "format": "int64",
                "description": "退款金额",
                "x-go-json": "refundAmount",
                "x-go-name": "RefundAmount"
              },
              "refundHandingFee": {
                "type": "integer",
                "format": "int64",
                "description": "退还手续费",
                "x-go-json": "refundHandingFee",
                "x-go-name": "RefundHandingFee"
              },
              "refundID": {
                "type": "string",
                "format": "uint64",
                "description": "退款单号",
                "x-go-json": "refundID,string",
                "x-go-name": "RefundID"
              },
              "refundMsg": {
                "type": "string",
                "description": "第三方返回退款信息",
                "x-go-json": "refundMsg",
                "x-go-name": "RefundMsg"
              },
              "refundStatus": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BaseSrvRefundStatus"
                  },
                  {
                    "description": "退款状态"
                  }
                ],
                "x-go-json": "refundStatus",
                "x-go-name": "RefundStatus"
              },
              "refundTime": {
                "type": "string",
                "description": "退款时间",
                "x-go-json": "refundTime",
                "x-go-name": "RefundTime"
              },
              "sourceIp": {
                "type": "string",
                "description": "退款发起方IP",
                "x-go-json": "sourceIp",
                "x-go-name": "SourceIP"
              },
              "thirdRefundID": {
                "type": "string",
                "description": "第三方退款单号",
                "x-go-json": "thirdRefundID",
                "x-go-name": "ThirdRefundID"
              },
              "totalAmount": {
                "type": "integer",
                "format": "int64",
                "description": "支付交易单金额",
                "x-go-json": "totalAmount",
                "x-go-name": "TotalAmount"
              },
              "transID": {
                "type": "string",
                "format": "uint64",
                "description": "交易单号",
                "x-go-json": "transID,string",
                "x-go-name": "TransID"
              },
              "userAgent": {
                "type": "string",
                "description": "退款发起方user_agent",
                "x-go-json": "userAgent",
                "x-go-name": "UserAgent"
              },
              "version": {
                "type": "integer",
                "format": "uint64",
                "description": "乐观锁",
                "x-go-json": "version",
                "x-go-name": "Version"
              }
            },
            "required": [
              "comment",
              "currency",
              "notifyMsg",
              "notifyNum",
              "notifyReturn",
              "notifyUrl",
              "refundAmount",
              "refundHandingFee",
              "refundID",
              "refundMsg",
              "refundStatus",
              "refundTime",
              "sourceIp",
              "thirdRefundID",
              "totalAmount",
              "transID",
              "userAgent",
              "version"
            ]
          }
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.TransRefund"
      },
      "UnfreezeResp": {
        "type": "object",
        "properties": {
          "merchantId": {
            "type": "string",
            "description": "商户号。网商为商户分配的商户号，通过商户入驻结果查询接口获取。",
            "x-go-json": "merchantId",
            "x-go-name": "MerchantId"
          }
        },
        "required": [
          "merchantId"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_service_mybank_gateway.UnfreezeResp"
      },
      "UpdareBankCardParam": {
        "type": "object",
        "properties": {
          "LogonId": {
            "type": "string",
            "description": "支付宝登陆账号",
            "x-go-json": "LogonId",
            "x-go-name": "LogonId",
            "x-go-validate": "@char[0,32]"
          },
          "SettlementAccountType": {
            "type": "string",
            "description": "结算类型。可选值： 01：银行卡,02: 支付宝 非必填，默认值01",
            "default": "01",
            "x-go-json": "SettlementAccountType",
            "x-go-name": "SettlementAccountType",
            "x-go-validate": "@char[0,2]"
          },
          "accountType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceMybankGatewayAccountType"
              },
              {
                "description": "账户类型。可选值： 01：对私账户（自然人、个体工商户可选） 02：对公账户（企业类型才可选填写）"
              }
            ],
            "x-go-json": "accountType",
            "x-go-name": "AccountType"
          },
          "bankCardNo": {
            "type": "string",
            "description": "银行卡号\n备注：\n结算到银行卡时、必填，结算到支付宝时、LogonId和bankcardNo二选一，不能同时为空 结算到支付宝时，填写支付宝userId\n银行卡号、开户人名称及开户人证件号码等信息会进行核身，核身不通过无法完成商户进驻，合作方须注意银行卡信息的正确性。",
            "x-go-json": "bankCardNo",
            "x-go-name": "BankCardNo",
            "x-go-validate": "@char[1,32]"
          },
          "bankCertName": {
            "type": "string",
            "description": "银行账户户名。当商户类型是“01 自然人”、“02 个人工商户”时，开户人与须与负责人名称一致；当商户类型是“03 企业商户”时，须与企业法人名称一致。",
            "x-go-json": "bankCertName",
            "x-go-name": "BankCertName",
            "x-go-validate": "@char[1,256]"
          },
          "branchCity": {
            "type": "string",
            "description": "开户支行所在市（按照附录6.5国标省市区号录入）",
            "x-go-json": "branchCity",
            "x-go-name": "BranchCity",
            "x-go-validate": "@char[0,16]"
          },
          "branchName": {
            "type": "string",
            "description": "开户支行名称",
            "x-go-json": "branchName",
            "x-go-name": "BranchName",
            "x-go-validate": "@char[0,128]"
          },
          "branchProvince": {
            "type": "string",
            "description": "开户支行所在省（按照附录6.5国标省市区号录入）",
            "x-go-json": "branchProvince",
            "x-go-name": "BranchProvince",
            "x-go-validate": "@char[0,16]"
          },
          "cardHolderAddress": {
            "type": "string",
            "description": "持卡人地址 对公账户不需要填写。",
            "x-go-json": "cardHolderAddress",
            "x-go-name": "CardHolderAddress",
            "x-go-validate": "@char[0,128]"
          },
          "certNo": {
            "type": "string",
            "description": "持卡人证件号码 对公账户不需要填写。",
            "x-go-json": "certNo",
            "x-go-name": "CertNo",
            "x-go-validate": "@char[0,256]"
          },
          "certType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceMybankGatewayCertType"
              },
              {
                "description": "持卡人证件类型。可选值： 01：身份证 对公账户不需要填写。"
              }
            ],
            "x-go-json": "certType",
            "x-go-name": "CertType"
          },
          "contactLine": {
            "type": "string",
            "description": "联行号。\n备注：\n1、MerchantType=03 企业商户，必须上送正确的联行号，否则导致清算打款失败。\n2、使用5.2提供的联行号表。填了联行号以联行号为准，不再与开户支行名称、开户支行省、市的参数进行匹配。\n3、通过/service-payment-gateway/v0/tools/getInsOutCode 接口搜索银行名称获取",
            "x-go-json": "contactLine",
            "x-go-name": "ContactLine",
            "x-go-validate": "@char[0,64]"
          }
        },
        "required": [
          "accountType",
          "bankCardNo",
          "bankCertName",
          "contactLine"
        ],
        "description": "清算卡（若请求报文上送该参数项，则该参数项下所有子项除“联行号”外必须上送。）\n说明; 个人结算卡，请上传Ⅰ类户。央行规定：银行对Ⅱ类账户设置1万元人民币的单日支付限额，银行对Ⅲ类账户设置1000元账户资金限额。（Ⅰ类户指的是通过传统银行柜面开立的、满足实名制所有严格要求的账户；Ⅱ类户和Ⅲ类户可以通过网上银行和手机银行等电子渠道申请开户。）",
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/mybank.UpdareBankCardParam"
      },
      "UpdateApplySortBody": {
        "type": "object",
        "properties": {
          "applyId": {
            "type": "string",
            "format": "uint64",
            "minimum": 1,
            "description": "申请单id",
            "x-go-json": "applyId,string",
            "x-go-name": "ApplyID",
            "x-go-validate": "@uint64[1,]"
          },
          "comment": {
            "type": "string",
            "description": "备注",
            "x-go-json": "comment",
            "x-go-name": "Comment",
            "x-go-validate": "@char[0,1000]"
          },
          "operatorID": {
            "type": "string",
            "description": "操作人ID",
            "x-go-json": "operatorID",
            "x-go-name": "OperatorID",
            "x-go-validate": "@char[1,64]"
          },
          "operatorName": {
            "type": "string",
            "description": "操作人名称",
            "x-go-json": "operatorName",
            "x-go-name": "OperatorName",
            "x-go-validate": "@char[1,200]"
          },
          "sort": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvApplySort"
              },
              {
                "description": "排序"
              }
            ],
            "x-go-json": "sort",
            "x-go-name": "Sort"
          }
        },
        "required": [
          "applyId",
          "sort",
          "operatorID",
          "operatorName"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.UpdateApplySortBody"
      },
      "UpdateFeeModeBody": {
        "type": "object",
        "properties": {
          "feeMode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvHandingFeeMode"
              },
              {
                "description": "扣费模式"
              }
            ],
            "x-go-json": "feeMode",
            "x-go-name": "FeeMode"
          }
        },
        "required": [
          "feeMode"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/account.UpdateFeeModeBody"
      },
      "UpdateMerchantDetail": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "地址（上传后在支付宝的商户等级会更高，有机会使用花呗支付、商家自运营（支付即会员）等功能 备注：Province、City、District、Address须同时出现。",
            "x-go-json": "address",
            "x-go-name": "Address",
            "x-go-validate": "@char[0,128]"
          },
          "alias": {
            "type": "string",
            "description": "商户简称,注：可包含汉字、数字、字母，可全为数字，最多20个汉字或字符",
            "x-go-json": "alias",
            "x-go-name": "Alias",
            "x-go-validate": "@char[1,20]"
          },
          "bussAuthParam": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BussAuthParam"
              },
              {
                "description": "商户证件。可选值： 自然人非必填，个体工商户和企业必填"
              }
            ],
            "x-go-json": "bussAuthParam",
            "x-go-name": "BussAuthParam"
          },
          "bussAuthVld": {
            "type": "string",
            "description": "营业执照有效期yyyy-MM-dd",
            "x-go-json": "bussAuthVld",
            "x-go-name": "BussAuthVld",
            "x-go-validate": "@char[0,10]"
          },
          "certPhotoA": {
            "type": "string",
            "description": "负责人或企业法人代表的身份证图片正面。 备注：需要先调商户图片上传接口上传图片获取链接，并将该链接填到本字段。涉及图片上传的接口处理逻辑一致。 对应PhotoType字段（图片类型）：01",
            "x-go-json": "certPhotoA",
            "x-go-name": "CertPhotoA",
            "x-go-validate": "@char[1,500]"
          },
          "certPhotoB": {
            "type": "string",
            "description": "负责人或企业法人代表的身份证图片反面 对应PhotoType字段（图片类型）：02",
            "x-go-json": "certPhotoB",
            "x-go-name": "CertPhotoB",
            "x-go-validate": "@char[1,500]"
          },
          "certPhotoC": {
            "type": "string",
            "description": "手持身份证照片，“自然人”商户选送 对应PhotoType字段（图片类型）：11",
            "x-go-json": "certPhotoC",
            "x-go-name": "CertPhotoC",
            "x-go-validate": "@char[0,500]"
          },
          "checkstandPhoto": {
            "type": "string",
            "description": "收银台照片 对应PhotoType字段（图片类型）：08",
            "x-go-json": "checkstandPhoto",
            "x-go-name": "CheckstandPhoto",
            "x-go-validate": "@char[0,500]"
          },
          "city": {
            "type": "string",
            "description": "城市（按照附录6.5国标省市区号录入）备注：Province、City、District、Address须同时出现。可选填，一旦填写会做正确性校验。",
            "x-go-json": "city",
            "x-go-name": "City",
            "x-go-validate": "@char[0,16]"
          },
          "contactMobile": {
            "type": "string",
            "description": "联系人手机号。为商户常用联系人联系手机号。",
            "x-go-json": "contactMobile",
            "x-go-name": "ContactMobile",
            "x-go-validate": "@char[1,20]"
          },
          "contactName": {
            "type": "string",
            "description": "联系人姓名。为商户常用联系人姓名。",
            "x-go-json": "contactName",
            "x-go-name": "ContactName",
            "x-go-validate": "@char[1,256]"
          },
          "contractPhoto": {
            "type": "string",
            "description": "租赁协议图片，“自然人”商户门头照、内景照、租赁协议三选一上送 对应PhotoType字段（图片类型）：12",
            "x-go-json": "contractPhoto",
            "x-go-name": "ContractPhoto",
            "x-go-validate": "@char[0,500]"
          },
          "district": {
            "type": "string",
            "description": "区（按照附录6.5国标省市区号录入）备注：Province、City、District、Address须同时出现。可选填，一旦填写会做正确性校验。",
            "x-go-json": "district",
            "x-go-name": "District",
            "x-go-validate": "@char[0,16]"
          },
          "email": {
            "type": "string",
            "description": "邮箱， 注：不支持-，支付宝蓝海行动M3要求必填",
            "x-go-json": "email",
            "x-go-name": "Email",
            "x-go-validate": "@char[1,64]"
          },
          "industryLicensePhoto": {
            "type": "string",
            "description": "开户许可证照片(若商户类型为“自然人”无需上送、“个体工商户”可选、企业必送) 对应PhotoType字段（图片类型）：05",
            "x-go-json": "industryLicensePhoto",
            "x-go-name": "IndustryLicensePhoto",
            "x-go-validate": "@char[0,500]"
          },
          "legalPerson": {
            "type": "string",
            "description": "企业法人名称（注意：是法人名称，即营业执照上的公司名称，非法人代表名称）。自然人或个人工商户无须上送。",
            "x-go-json": "legalPerson",
            "x-go-name": "LegalPerson",
            "x-go-validate": "@char[0,256]"
          },
          "licensePhoto": {
            "type": "string",
            "description": "营业执照图片(若商户类型为“自然人”无需上送，企业及个体工商户必送) 对应PhotoType字段（图片类型）：03",
            "x-go-json": "licensePhoto",
            "x-go-name": "LicensePhoto",
            "x-go-validate": "@char[0,500]"
          },
          "otherPhoto": {
            "type": "string",
            "description": "其他图片 对应PhotoType字段（图片类型）：07",
            "x-go-json": "otherPhoto",
            "x-go-name": "OtherPhoto",
            "x-go-validate": "@char[0,500]"
          },
          "personCertVld": {
            "type": "string",
            "description": "身份证件有效期限（自然人商户上送）",
            "x-go-json": "personCertVld",
            "x-go-name": "PersonCertVld",
            "x-go-validate": "@char[0,10]"
          },
          "personProfession": {
            "type": "string",
            "description": "职业（自然人商户上送）",
            "x-go-json": "personProfession",
            "x-go-name": "PersonProfession",
            "x-go-validate": "@char[0,32]"
          },
          "personSex": {
            "type": "string",
            "description": "性别（自然人商户上送）",
            "x-go-json": "personSex",
            "x-go-name": "PersonSex",
            "x-go-validate": "@char[0,2]"
          },
          "prgPhoto": {
            "type": "string",
            "description": "组织机构代码证图片(若商户类型为“自然人”无需上送、“个体工商户”可选) 对应PhotoType字段（图片类型）：04",
            "x-go-json": "prgPhoto",
            "x-go-name": "PrgPhoto",
            "x-go-validate": "@char[0,500]"
          },
          "principalCertNo": {
            "type": "string",
            "description": "负责人证件号码,备注：若自然人送自然人证件号码、若个体工商户送经营者证件号码、若企业送法人代表证件号码。",
            "x-go-json": "principalCertNo",
            "x-go-name": "PrincipalCertNo",
            "x-go-validate": "@char[1,32]"
          },
          "principalCertType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceMybankGatewayPrincipalCertType"
              },
              {
                "description": "负责人证件类型。可选值：01：身份证"
              }
            ],
            "x-go-json": "principalCertType",
            "x-go-name": "PrincipalCertType"
          },
          "principalCertVld": {
            "type": "string",
            "description": "法定代表人或负责人身份证件有效期（企业/个体工商上送）",
            "x-go-json": "principalCertVld",
            "x-go-name": "PrincipalCertVld",
            "x-go-validate": "@char[0,10]"
          },
          "principalMobile": {
            "type": "string",
            "description": "负责人手机号。自然人或个体工商户上送，企业可不上送。备注：若商户后续开通二类户及余利宝功能，该手机号作为客户在网商的预留手机号，企业可不填)。开户发送的短信验证码的手机号需要和负责人手机号一致。支付宝蓝海行动M3要求必填",
            "x-go-json": "principalMobile",
            "x-go-name": "PrincipalMobile",
            "x-go-validate": "@char[0,32]"
          },
          "principalPerson": {
            "type": "string",
            "description": "负责人名称或企业法人代表姓名。 备注：若商户类型为“自然人”填写责任人本人，若为“个体工商户”填写经营者本人，若为“企业”填写企业法人代表名称。",
            "x-go-json": "principalPerson",
            "x-go-name": "PrincipalPerson",
            "x-go-validate": "@char[1,256]"
          },
          "province": {
            "type": "string",
            "description": "省份（按照附录6.5国标省市区号录入）。备注：Province、City、District、Address须同时出现。可选填，一旦填写会做正确性校验。",
            "x-go-json": "province",
            "x-go-name": "Province",
            "x-go-validate": "@char[0,16]"
          },
          "servicePhoneNo": {
            "type": "string",
            "description": "商户客服电话 注：5-15个数字，不能有-",
            "x-go-json": "servicePhoneNo",
            "x-go-name": "ServicePhoneNo",
            "x-go-validate": "@char[5,15]"
          },
          "shareholderCertNo": {
            "type": "string",
            "description": "控股股东或者实际控制人身份证件号码（企业/个体工商上送）",
            "x-go-json": "shareholderCertNo",
            "x-go-name": "ShareholderCertNo",
            "x-go-validate": "@char[0,32]"
          },
          "shareholderCertType": {
            "type": "string",
            "description": "控股股东或者实际控制人身份证件类型（企业/个体工商上送）",
            "x-go-json": "shareholderCertType",
            "x-go-name": "ShareholderCertType",
            "x-go-validate": "@char[0,2]"
          },
          "shareholderCertVld": {
            "type": "string",
            "description": "控股股东或者实际控制人身份证件有效期（企业/个体工商上送）",
            "x-go-json": "shareholderCertVld",
            "x-go-name": "ShareholderCertVld",
            "x-go-validate": "@char[0,10]"
          },
          "shareholderName": {
            "type": "string",
            "description": "控股股东或者实际控制人姓名（企业/个体工商上送）",
            "x-go-json": "shareholderName",
            "x-go-name": "ShareholderName",
            "x-go-validate": "@char[0,256]"
          },
          "shopEntrancePhoto": {
            "type": "string",
            "description": "门店内景照片，企业及个体工商户必送，“自然人”商户门头照、内景照、租赁协议三选一 对应PhotoType字段（图片类型）：09",
            "x-go-json": "shopEntrancePhoto",
            "x-go-name": "ShopEntrancePhoto",
            "x-go-validate": "@char[0,500]"
          },
          "shopPhoto": {
            "type": "string",
            "description": "门头照(店铺门头照，企业及个体工商户必送，“自然人”商户门头照、内景照、租赁协议三选一) 对应PhotoType字段（图片类型）：06",
            "x-go-json": "shopPhoto",
            "x-go-name": "ShopPhoto",
            "x-go-validate": "@char[0,500]"
          },
          "taxNum": {
            "type": "string",
            "description": "税务登记证号码",
            "x-go-json": "taxNum",
            "x-go-name": "TaxNum",
            "x-go-validate": "@char[0,32]"
          }
        },
        "required": [
          "contactMobile",
          "contactName",
          "email",
          "principalCertType",
          "principalCertNo",
          "principalPerson",
          "certPhotoA",
          "certPhotoB",
          "servicePhoneNo",
          "alias"
        ],
        "description": "商户详情",
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/mybank.UpdateMerchantDetail"
      },
      "UpdateRegisterBody": {
        "type": "object",
        "properties": {
          "UID": {
            "type": "string",
            "description": "收款账户ID",
            "x-go-name": "UID",
            "x-go-validate": "@char[1,15]",
            "x-tag-name": "uid"
          },
          "authCode": {
            "type": "string",
            "description": "手机验证码",
            "x-go-json": "authCode",
            "x-go-name": "AuthCode"
          },
          "bankCardParam": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UpdareBankCardParam"
              },
              {
                "description": "支持交易类型列表。该商户能支持的交易类型，多个用逗号隔开。可选值： 01：正扫交易 02：反扫交易 06：退款交易 08: 动态订单扫码\nTradeTypeList []client_service_mybank_gateway.TradeType `json:\"tradeTypeList\"`\n支持支付渠道列表。该商户能支持的第三方支付渠道。多个用逗号隔开。可选值： 01：支付宝 02：微信支付\nPayChannelList []client_service_mybank_gateway.PayChannel `json:\"payChannelList\"`\n禁用支付方式。商户禁受理支付方式列表，多个用逗号隔开。可选值： 02：信用卡 03：花呗（仅支付宝） 备注：微信支付刷卡支付（被扫）模式无法禁用信用卡支付。\nDeniedPayToolList []client_service_mybank_gateway.DeniedPayType `json:\"deniedPayToolList\" default:\"\"`\n手续费列表。具体报文定义参考下面的手续费列表, 不填默认设置支付宝,T1手续费\nFeeParamList []FeeParam `json:\"feeParamList\" default:\"\"`\n清算卡参数，具体报文定义参考下面的清算卡"
              }
            ],
            "x-go-json": "bankCardParam",
            "x-go-name": "BankCardParam"
          },
          "dealType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceMybankGatewayDealType"
              },
              {
                "description": "商户经营类型。可选值： 01:实体特约商户 02:网络特约商户 03:实体兼网络特约商户"
              }
            ],
            "x-go-json": "dealType",
            "x-go-name": "DealType"
          },
          "mcc": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceMybankGatewayBusinessType"
              },
              {
                "description": "经营类目。参见附录的经营类目上送,2015050700000000:美食, 2015091000052157:超市便利店, 2015062600004525:休闲娱乐, 2015062600002758:购物, 2016062900190124:爱车, 2015063000020189:生活服务, 2016042200000148:教育培训, 2016062900190296:医疗健康, 2015080600000001:航旅, 2016062900190337:专业销售/批发, 2016062900190371:政府/社会组织"
              }
            ],
            "x-go-json": "mcc",
            "x-go-name": "Mcc"
          },
          "merchantDetail": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UpdateMerchantDetail"
              },
              {
                "description": "商户详情列表。具体报文定义参考商户详情"
              }
            ],
            "x-go-json": "merchantDetail",
            "x-go-name": "MerchantDetail"
          }
        },
        "required": [
          "UID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/mybank.UpdateRegisterBody"
      },
      "UpdateRegisterResp": {
        "type": "object",
        "properties": {
          "outTradeNo": {
            "type": "string",
            "description": "外部交易号, 唯一交易流水单号",
            "x-go-json": "outTradeNo",
            "x-go-name": "OutTradeNo"
          }
        },
        "required": [
          "outTradeNo"
        ],
        "description": "商户入驻返回",
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/mybank.UpdateRegisterResp"
      },
      "UpdateSplitBillOrderNoBody": {
        "type": "object",
        "properties": {
          "orderNo": {
            "type": "string",
            "description": "订货宝订单号，多个单号英文逗号分隔",
            "x-go-json": "orderNo",
            "x-go-name": "OrderNo",
            "x-go-validate": "@char[1,2000]"
          },
          "transID": {
            "type": "integer",
            "format": "uint64",
            "minimum": 1,
            "description": "交易单号",
            "x-go-json": "transID",
            "x-go-name": "TransID",
            "x-go-validate": "@uint64[1,]"
          }
        },
        "required": [
          "transID",
          "orderNo"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/split_bill.UpdateSplitBillOrderNoBody"
      },
      "UploadFilesBody": {
        "type": "object",
        "properties": {
          "certPass": {
            "type": "string",
            "description": "如果证书类型为PFX，需提供提取私钥和证书的秘密",
            "x-go-json": "certPass",
            "x-go-name": "CertPass"
          },
          "channelType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvChannelType"
              },
              {
                "description": "支付渠道方,不填为WECHAT_APPLET=微信小程序支付",
                "default": "WECHAT_APPLET"
              }
            ],
            "x-go-json": "channelType",
            "x-go-name": "ChannelType"
          },
          "content": {
            "type": "string",
            "maxLength": 4194304,
            "minLength": 1,
            "description": "文件内容字符串, 当type=PFX时，为文件内容BASE64编码后的字符串",
            "x-go-json": "content",
            "x-go-name": "Content",
            "x-go-validate": "@string[1,4194304]"
          },
          "receiptUID": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "description": "收款账号",
            "x-go-json": "receiptUID",
            "x-go-name": "ReceiptUID",
            "x-go-validate": "@string[1,32]"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SignFileType"
              },
              {
                "description": "证书文件类型,证书，证书密钥文件"
              }
            ],
            "x-go-json": "type",
            "x-go-name": "Type"
          }
        },
        "required": [
          "receiptUID",
          "type",
          "content"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/upload.UploadFilesBody"
      },
      "UploadFilesResp": {
        "type": "object",
        "properties": {
          "certContent": {
            "type": "string",
            "description": "证书文件内容，Base64编码后",
            "x-go-json": "certContent",
            "x-go-name": "CertContent"
          },
          "certKeyPath": {
            "type": "string",
            "description": "证书key文件地址, 渠道方为CPCN_PAY, 并且证书类型为PFX返回",
            "x-go-json": "certKeyPath",
            "x-go-name": "CertKeyPath"
          },
          "certPath": {
            "type": "string",
            "description": "证书文件地址, 渠道方为CPCN_PAY, 并且证书类型为PFX返回",
            "x-go-json": "certPath",
            "x-go-name": "CertPath"
          },
          "filePath": {
            "type": "string",
            "description": "文件保存路径",
            "x-go-json": "filePath",
            "x-go-name": "FilePath"
          },
          "privateKeyPath": {
            "type": "string",
            "description": "私钥文件地址, 渠道方为CPCN_PAY, 并且证书类型为PFX返回",
            "x-go-json": "privateKeyPath",
            "x-go-name": "PrivateKeyPath"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SignFileType"
              },
              {
                "description": "证书文件类型,证书，证书密钥文件"
              }
            ],
            "x-go-json": "type",
            "x-go-name": "Type"
          }
        },
        "required": [
          "type",
          "filePath",
          "certKeyPath",
          "certPath",
          "certContent",
          "privateKeyPath"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/upload.UploadFilesResp"
      },
      "UploadPhotoBody": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "图片Base64编码后的字符串，支持jpg, jpeg, png, 不得大于10M",
            "x-go-json": "content",
            "x-go-name": "Content"
          },
          "photoType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ServiceMybankGatewayPhotoType"
              },
              {
                "description": "图片类型\n可选值：\n01 身份证正面\n02 身份证反面\n03 营业执照\n04 组织机构代码证\n05 开户许可证\n06 门头照\n07 其它\n08 收银台照片\n09 门店内景照片\n10 各大餐饮平台入驻照片\n11 手持身份证合照\n12 租赁协议"
              }
            ],
            "x-go-json": "photoType",
            "x-go-name": "PhotoType"
          }
        },
        "required": [
          "photoType",
          "content"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/mybank.UploadPhotoBody"
      },
      "UploadPhotoResp": {
        "type": "object",
        "properties": {
          "outTradeNo": {
            "type": "string",
            "description": "文件上传交易号",
            "x-go-json": "outTradeNo",
            "x-go-name": "OutTradeNo"
          },
          "photoUrl": {
            "type": "string",
            "description": "图片文件上传后的唯一编号，非地址，公网不可访问",
            "x-go-json": "photoUrl",
            "x-go-name": "PhotoUrl"
          }
        },
        "required": [
          "photoUrl",
          "outTradeNo"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/mybank.UploadPhotoResp"
      },
      "VerifyAndBindBody": {
        "type": "object",
        "properties": {
          "bindID": {
            "type": "string",
            "format": "uint64",
            "minimum": 1,
            "description": "绑定流水",
            "x-go-json": "bindID,string",
            "x-go-name": "BindID",
            "x-go-validate": "@uint64[1,]"
          },
          "cvn2": {
            "type": "string",
            "maxLength": 3,
            "minLength": 0,
            "description": "信用卡背面的末 3 位数字 绑定信用卡该项必填",
            "x-go-json": "cvn2",
            "x-go-name": "CVN2",
            "x-go-validate": "@string[0,3]"
          },
          "receiptUID": {
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "description": "收款账户ID",
            "x-go-json": "receiptUID",
            "x-go-name": "ReceiptUID",
            "x-go-validate": "@string[1,32]"
          },
          "smsValidationCode": {
            "type": "string",
            "maxLength": 6,
            "minLength": 1,
            "description": "短信验证码",
            "x-go-json": "smsValidationCode",
            "x-go-name": "SMSValidationCode",
            "x-go-validate": "@string[1,6]"
          },
          "thpInfo": {
            "type": "string",
            "description": "交易透传信息, 收银宝快捷支付绑卡时返回，确认绑卡时原样回传",
            "x-go-json": "thpInfo",
            "x-go-name": "ThpInfo",
            "x-go-validate": "@char[0,512]"
          },
          "validDate": {
            "type": "string",
            "maxLength": 4,
            "minLength": 0,
            "description": "信用卡有效期，格式 YYMM 绑定信用卡该项必填",
            "x-go-json": "validDate",
            "x-go-name": "ValidDate",
            "x-go-validate": "@string[0,4]"
          }
        },
        "required": [
          "receiptUID",
          "bindID",
          "smsValidationCode"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/quick.VerifyAndBindBody"
      },
      "VerifyAndBindResp": {
        "type": "object",
        "properties": {
          "bindStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuickPayBindCardStatus"
              },
              {
                "description": "绑定状态"
              }
            ],
            "x-go-json": "bindStatus",
            "x-go-name": "BindStatus"
          },
          "verifyStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/QuickPayBindCardVerifyStatus"
              },
              {
                "description": "短信验证状态"
              }
            ],
            "x-go-json": "verifyStatus",
            "x-go-name": "VerifyStatus"
          }
        },
        "required": [
          "verifyStatus",
          "bindStatus"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/quick.VerifyAndBindResp"
      },
      "VerifyBindSmsBody": {
        "type": "object",
        "properties": {
          "buCompanyId": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0,
            "description": "业务方公司id, 和支付服务公司id二选一",
            "default": "0",
            "x-go-json": "buCompanyId",
            "x-go-name": "BuCompanyID",
            "x-go-validate": "@uint64[0,]"
          },
          "code": {
            "type": "string",
            "description": "验证码",
            "x-go-json": "code",
            "x-go-name": "Code",
            "x-go-validate": "@char[1,6]"
          },
          "companyId": {
            "type": "integer",
            "format": "uint64",
            "minimum": 0,
            "description": "公司id，和业务方公司id二选一",
            "default": "0",
            "x-go-json": "companyId",
            "x-go-name": "CompanyID",
            "x-go-validate": "@uint64[0,]"
          },
          "mobile": {
            "type": "string",
            "description": "财务手机号, 短信验证码默认有效期为5分钟",
            "x-go-json": "mobile",
            "x-go-name": "Mobile",
            "x-go-validate": "@char[1,32]"
          },
          "platform": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseSrvAccountPlatformType"
              },
              {
                "description": "账户来源平台,传递业务方公司id时必填"
              }
            ],
            "x-go-json": "platform",
            "x-go-name": "Platform"
          }
        },
        "required": [
          "mobile",
          "code"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/company.VerifyBindSmsBody"
      },
      "VerifyBindSmsRsp": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "token",
            "x-go-json": "token",
            "x-go-name": "Token"
          }
        },
        "required": [
          "token"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/company.VerifyBindSmsRsp"
      },
      "VspApplyDetail": {
        "type": "object",
        "properties": {
          "corporationInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplyCloudVsp"
              },
              {
                "description": "企业开户信息"
              }
            ],
            "x-go-json": "corporationInfo",
            "x-go-name": "CorporationInfo"
          },
          "merchantInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplyMerchantInfoList"
              },
              {
                "description": "进件信息"
              }
            ],
            "x-go-json": "merchantInfo",
            "x-go-name": "MerchantInfo"
          },
          "retailerInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplyCloudVsp"
              },
              {
                "description": "个体户开户信息"
              }
            ],
            "x-go-json": "retailerInfo",
            "x-go-name": "RetailerInfo"
          }
        },
        "required": [
          "corporationInfo",
          "retailerInfo",
          "merchantInfo"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.VspApplyDetail"
      },
      "VspApplyUploadBody": {
        "type": "object",
        "properties": {
          "applyID": {
            "type": "string",
            "format": "uint64",
            "minimum": 1,
            "description": "申请单id",
            "x-go-json": "applyID,string",
            "x-go-name": "ApplyID",
            "x-go-validate": "@uint64[1,]"
          }
        },
        "required": [
          "applyID"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/apply.VspApplyUploadBody"
      },
      "VspCardBinResp": {
        "type": "object",
        "properties": {
          "bankCode": {
            "type": "string",
            "description": "发卡行机构代码",
            "x-go-json": "bankCode",
            "x-go-name": "BankCode"
          },
          "bankName": {
            "type": "string",
            "description": "发卡行名称",
            "x-go-json": "bankName",
            "x-go-name": "BankName"
          },
          "cardName": {
            "type": "string",
            "description": "卡名",
            "x-go-json": "cardName",
            "x-go-name": "CardName"
          },
          "cardType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CardBinCardType"
              },
              {
                "description": "卡种"
              }
            ],
            "x-go-json": "cardType",
            "x-go-name": "CardType"
          }
        },
        "required": [
          "cardName",
          "bankName",
          "bankCode",
          "cardType"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/routes/tools.VspCardBinResp"
      },
      "VspPayApply": {
        "type": "object",
        "properties": {
          "corporationInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CloudCompanyInfo"
              },
              {
                "description": "企业开户选择域"
              }
            ],
            "x-go-json": "corporationInfo,omitempty",
            "x-go-name": "CorporationInfo",
            "x-pointer": 1
          },
          "merchantInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MerchantInfo"
            },
            "description": "进件信息",
            "x-go-json": "merchantInfo,omitempty",
            "x-go-name": "MerchantInfo"
          },
          "retailerInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CloudCompanyInfo"
              },
              {
                "description": "个体户开户域"
              }
            ],
            "x-go-json": "retailerInfo,omitempty",
            "x-go-name": "RetailerInfo",
            "x-pointer": 1
          }
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.VspPayApply"
      },
      "WhoPayFeeType": {
        "type": "string",
        "enum": [
          "PAYMENT",
          "RECEIPT"
        ],
        "x-enum-labels": [
          "付款账户",
          "收款账户"
        ],
        "x-enum-vals": [
          2,
          1
        ],
        "x-enum-values": [
          "PAYMENT",
          "RECEIPT"
        ],
        "x-go-named": "dhb/baseservice/service-payment-gateway/constants/types.WhoPayFeeType"
      },
      "WorkFlow": {
        "type": "object",
        "properties": {
          "cloudFunds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseSrvOpenSteps"
            },
            "description": "云资金",
            "x-go-json": "cloudFunds,omitempty",
            "x-go-name": "CloudFunds"
          },
          "corporation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseSrvOpenSteps"
            },
            "description": "企业",
            "x-go-json": "corporation,omitempty",
            "x-go-name": "Corporation"
          },
          "individual": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseSrvOpenSteps"
            },
            "description": "个人",
            "x-go-json": "individual,omitempty",
            "x-go-name": "Individual"
          },
          "retailer": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseSrvOpenSteps"
            },
            "description": "个体户",
            "x-go-json": "retailer,omitempty",
            "x-go-name": "Retailer"
          },
          "skipFirstReview": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Bool"
              },
              {
                "description": "是否跳过初审",
                "default": "FALSE"
              }
            ],
            "x-go-json": "skipFirstReview,omitempty",
            "x-go-name": "SkipFirstReview"
          }
        },
        "x-go-named": "dhb/baseservice/service-payment-gateway/clients/client_base_srv.WorkFlow"
      }
    }
  }
}